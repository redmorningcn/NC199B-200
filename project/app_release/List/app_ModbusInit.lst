###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       15/Jul/2018  10:36:14
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  F:\iar\NC210\NC210-200处理板\source\user\app_ModbusInit.c
#    Command line =  
#        F:\iar\NC210\NC210-200处理板\source\user\app_ModbusInit.c -D
#        USE_STDPERIPH_DRIVER -D APP_RELEASE -lCN
#        F:\iar\NC210\NC210-200处理板\project\app_release\List -o
#        F:\iar\NC210\NC210-200处理板\project\app_release\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M3 -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Full.h" -I
#        F:\iar\NC210\NC210-200处理板\project\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\config\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\task\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\user\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\OSAL\OS\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\OSAL\Ports\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\driver\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-LIB\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-CPU\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uCOS-III\Source\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\IAR\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\ST\STM32\inc\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\OS\uCOS-III\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-MB\OS\uCOS-III\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-MB\Ports\STM32\STM32F103\IAR\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-MB\Source\
#        -Ol --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC210\NC210-200处理板\project\app_release\List\app_ModbusInit.lst
#    Object file  =  
#        F:\iar\NC210\NC210-200处理板\project\app_release\Obj\app_ModbusInit.o
#
###############################################################################

F:\iar\NC210\NC210-200处理板\source\user\app_ModbusInit.c
      1          
      2          /*******************************************************************************
      3          * Description  : modbus初始化
      4          * Author       : 2018/5/11 星期五, by redmorningcn
      5          *******************************************************************************/
      6          
      7          /*******************************************************************************
      8          * INCLUDES
      9          */
     10          
     11          #include <includes.h>
     12          #include <string.h>
     13          #include <bsp_os.h>
     14          #include <bsp_q560.h>
     15          
     16          
     17          /*******************************************************************************
     18          * CONSTANTS
     19          */
     20          
     21          /*******************************************************************************
     22          * MACROS
     23          */
     24          
     25          /*******************************************************************************
     26          * TYPEDEFS
     27          */
     28          
     29          /*******************************************************************************
     30          * LOCAL VARIABLES
     31          */
     32          
     33          /*******************************************************************************
     34          * GLOBAL VARIABLES
     35          */
     36          
     37          /***********************************************
     38          * 描述： 任务控制块（TCB）
     39          */
     40          
     41          /***********************************************
     42          * 描述： 任务堆栈（STACKS）
     43          */
     44          
     45          void         BSP_OS_TimeDlyMs          (CPU_INT32U      dly_ms);
     46          
     47          
     48          /*******************************************************************************
     49          * LOCAL FUNCTIONS
     50          */
     51          /*******************************************************************************
     52          * 名    称： APP_ModbusInit
     53          * 功    能： MODBUS初始化
     54          * 入口参数： 无
     55          * 出口参数： 无
     56          * 作    者： 无名沈
     57          * 创建日期： 2015-03-28
     58          * 修    改：
     59          * 修改日期：
     60          * 备    注： 该初始化会创建Modbus任务。
     61          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     62          void App_ModbusInit(void)
     63          {
   \                     App_ModbusInit: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
     64              MODBUS_CH   *pch;
     65              u8          comnum = 0;
   \   00000004   0x2400             MOVS     R4,#+0
     66              u32         boud   = 0;
   \   00000006   0x2500             MOVS     R5,#+0
     67          
     68              /***********************************************
     69              * 描述： uCModBus初始化，RTU时钟频率为1000HZ
     70              *        使用了定时器2（TIM2）
     71              */
     72              MB_Init(1000);
   \   00000008   0xF44F 0x707A      MOV      R0,#+1000
   \   0000000C   0x.... 0x....      BL       MB_Init
     73              
     74              
     75              /***********************************************
     76              * 描述： UART1连接无线模块
     77              *        用作从机。
     78              */
     79          #if MODBUS_CFG_MASTER_EN == DEF_TRUE
     80              
     81              comnum      = 0;                                    //所用串号
   \   00000010   0x2400             MOVS     R4,#+0
     82              boud        = 57600;
   \   00000012   0xF44F 0x4561      MOV      R5,#+57600
     83              pch         = MB_CfgCh( DTU_NODE,                   // ... Modbus Node # for this slave channel
     84                                      MODBUS_SLAVE,               // ... This is a MASTER
     85                                      200,                        // ... 0 when a slave
     86                                      MODBUS_MODE_RTU,            // ... Modbus Mode (_ASCII or _RTU)
     87                                      comnum,                     // ... Specify UART #1
     88                                      boud,                       // ... Baud Rate
     89                                      USART_WordLength_8b,        // ... Number of data bits 7 or 8
     90                                      USART_Parity_No,            // ... Parity: _NONE, _ODD or _EVEN
     91                                      USART_StopBits_1,           // ... Number of stop bits 1 or 2
     92                                      MODBUS_WR_EN);              // ... Enable (_EN) or disable (_DIS) writes
   \   00000016   0x2001             MOVS     R0,#+1
   \   00000018   0x9005             STR      R0,[SP, #+20]
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x9004             STR      R0,[SP, #+16]
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0x9003             STR      R0,[SP, #+12]
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x9002             STR      R0,[SP, #+8]
   \   00000026   0x9501             STR      R5,[SP, #+4]
   \   00000028   0x0020             MOVS     R0,R4
   \   0000002A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002C   0x9000             STR      R0,[SP, #+0]
   \   0000002E   0x2300             MOVS     R3,#+0
   \   00000030   0x22C8             MOVS     R2,#+200
   \   00000032   0x2100             MOVS     R1,#+0
   \   00000034   0x2001             MOVS     R0,#+1
   \   00000036   0x.... 0x....      BL       MB_CfgCh
     93          
     94              Ctrl.ComCtrl[DTU].ConnCtrl.MB_Node      = DTU_NODE;     //modbus编号 
   \   0000003A   0x2101             MOVS     R1,#+1
   \   0000003C   0x.... 0x....      LDR.W    R2,??DataTable2
   \   00000040   0xF8D2 0x2506      LDR      R2,[R2, #+1286]
   \   00000044   0xF361 0x4214      BFI      R2,R1,#+16,#+5
   \   00000048   0x.... 0x....      LDR.W    R1,??DataTable2
   \   0000004C   0xF8C1 0x2506      STR      R2,[R1, #+1286]
     95              Ctrl.ComCtrl[DTU].ConnCtrl.COM_Num      = comnum;       //串口号
   \   00000050   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000052   0x.... 0x....      LDR.W    R1,??DataTable2
   \   00000056   0xF8D1 0x1506      LDR      R1,[R1, #+1286]
   \   0000005A   0xF364 0x5157      BFI      R1,R4,#+21,#+3
   \   0000005E   0x.... 0x....      LDR.W    R2,??DataTable2
   \   00000062   0xF8C2 0x1506      STR      R1,[R2, #+1286]
     96              Ctrl.ComCtrl[DTU].ConnCtrl.SourceAddr   = LKJ_MAINBOARD_ADDR;   //无线发送模块地址
   \   00000066   0x2184             MOVS     R1,#+132
   \   00000068   0x.... 0x....      LDR.W    R2,??DataTable2
   \   0000006C   0xF882 0x1517      STRB     R1,[R2, #+1303]
     97              Ctrl.ComCtrl[DTU].ConnCtrl.DestAddr     = DTU_ADDR;             //LKJ接口板csnc地址
   \   00000070   0x21CA             MOVS     R1,#+202
   \   00000072   0x.... 0x....      LDR.W    R2,??DataTable2
   \   00000076   0xF882 0x1516      STRB     R1,[R2, #+1302]
     98              Ctrl.ComCtrl[DTU].ConnCtrl.Baud         = boud;
   \   0000007A   0x.... 0x....      LDR.W    R1,??DataTable2
   \   0000007E   0xF8C1 0x550A      STR      R5,[R1, #+1290]
     99          
    100              Ctrl.ComCtrl[DTU].RxCtrl.EvtFlag       = COMM_EVT_FLAG_DTU_RX; //os事件标识 
   \   00000082   0x2102             MOVS     R1,#+2
   \   00000084   0x.... 0x....      LDR.W    R2,??DataTable2
   \   00000088   0xF882 0x1500      STRB     R1,[R2, #+1280]
    101          
    102              pch->RxSem  = &MB_OS_RxSemTbl[comnum];              // 接收信号量
   \   0000008C   0x.... 0x....      LDR.W    R1,??DataTable2_1
   \   00000090   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000092   0x2228             MOVS     R2,#+40
   \   00000094   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   00000098   0xF8C0 0x1854      STR      R1,[R0, #+2132]
    103              pch->TxSem  = &MB_OS_TxSemTbl[comnum];              // 发送信号量
   \   0000009C   0x.... 0x....      LDR.W    R1,??DataTable2_2
   \   000000A0   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000A2   0x2228             MOVS     R2,#+40
   \   000000A4   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   000000A8   0xF8C0 0x1858      STR      R1,[R0, #+2136]
    104              Ctrl.ComCtrl[DTU].pch  = pch;                      // ... modbus控制块和全局结构体建立连接
   \   000000AC   0x.... 0x....      LDR.W    R1,??DataTable2
   \   000000B0   0xF8C1 0x04E8      STR      R0,[R1, #+1256]
    105              
    106              DtuCom = &Ctrl.ComCtrl[DTU];                       //定义别名，在对应的任务中可用别名直接操作
   \   000000B4   0x.... 0x....      LDR.W    R0,??DataTable2_3
   \   000000B8   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   000000BC   0x6008             STR      R0,[R1, #+0]
    107          #endif
    108              
    109              /***********************************************
    110              * 描述： UART2连接工况检测板及速度信号检测板。modbus通讯
    111              *        用作主机。
    112              */
    113          #if MODBUS_CFG_MASTER_EN == DEF_TRUE
    114              
    115              comnum      = 1;                                    //所用串号
   \   000000BE   0x2401             MOVS     R4,#+1
    116              boud        = 57600;
   \   000000C0   0xF44F 0x4561      MOV      R5,#+57600
    117              
    118              pch         = MB_CfgCh( MTR_NODE,                   // ... Modbus Node # for this slave channel
    119                                      MODBUS_MASTER,               // ... This is a MASTER
    120                                      200,                        // ... 0 when a slave
    121                                      MODBUS_MODE_RTU,            // ... Modbus Mode (_ASCII or _RTU)
    122                                      comnum,                     // ... Specify UART #1
    123                                      boud,                       // ... Baud Rate
    124                                      USART_WordLength_8b,        // ... Number of data bits 7 or 8
    125                                      USART_Parity_No,            // ... Parity: _NONE, _ODD or _EVEN
    126                                      USART_StopBits_1,           // ... Number of stop bits 1 or 2
    127                                      MODBUS_WR_EN);              // ... Enable (_EN) or disable (_DIS) writes
   \   000000C4   0x2001             MOVS     R0,#+1
   \   000000C6   0x9005             STR      R0,[SP, #+20]
   \   000000C8   0x2000             MOVS     R0,#+0
   \   000000CA   0x9004             STR      R0,[SP, #+16]
   \   000000CC   0x2000             MOVS     R0,#+0
   \   000000CE   0x9003             STR      R0,[SP, #+12]
   \   000000D0   0x2000             MOVS     R0,#+0
   \   000000D2   0x9002             STR      R0,[SP, #+8]
   \   000000D4   0x9501             STR      R5,[SP, #+4]
   \   000000D6   0x0020             MOVS     R0,R4
   \   000000D8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000DA   0x9000             STR      R0,[SP, #+0]
   \   000000DC   0x2300             MOVS     R3,#+0
   \   000000DE   0x22C8             MOVS     R2,#+200
   \   000000E0   0x2101             MOVS     R1,#+1
   \   000000E2   0x2001             MOVS     R0,#+1
   \   000000E4   0x.... 0x....      BL       MB_CfgCh
    128          
    129              Ctrl.ComCtrl[MTR].ConnCtrl.MB_Node     = MTR_NODE;             //modbus编号 
   \   000000E8   0x2101             MOVS     R1,#+1
   \   000000EA   0x.... 0x....      LDR.W    R2,??DataTable2
   \   000000EE   0xF8D2 0x2944      LDR      R2,[R2, #+2372]
   \   000000F2   0xF361 0x4214      BFI      R2,R1,#+16,#+5
   \   000000F6   0x.... 0x....      LDR.W    R1,??DataTable2
   \   000000FA   0xF8C1 0x2944      STR      R2,[R1, #+2372]
    130              Ctrl.ComCtrl[MTR].ConnCtrl.COM_Num     = comnum;               //串口号
   \   000000FE   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000100   0x.... 0x....      LDR.W    R1,??DataTable2
   \   00000104   0xF8D1 0x1944      LDR      R1,[R1, #+2372]
   \   00000108   0xF364 0x5157      BFI      R1,R4,#+21,#+3
   \   0000010C   0x.... 0x....      LDR.W    R2,??DataTable2
   \   00000110   0xF8C2 0x1944      STR      R1,[R2, #+2372]
    131              Ctrl.ComCtrl[MTR].ConnCtrl.SourceAddr  = LKJ_MAINBOARD_ADDR;   //无线发送模块地址（对MTR无效）
   \   00000114   0x2184             MOVS     R1,#+132
   \   00000116   0x.... 0x....      LDR.W    R2,??DataTable2
   \   0000011A   0xF882 0x1955      STRB     R1,[R2, #+2389]
    132              Ctrl.ComCtrl[MTR].ConnCtrl.DestAddr    = DTU_ADDR;             //LKJ接口板csnc地址（对MTR无效）
   \   0000011E   0x21CA             MOVS     R1,#+202
   \   00000120   0x....             LDR.N    R2,??DataTable2
   \   00000122   0xF882 0x1954      STRB     R1,[R2, #+2388]
    133              Ctrl.ComCtrl[MTR].ConnCtrl.Baud        = boud;
   \   00000126   0x....             LDR.N    R1,??DataTable2
   \   00000128   0xF8C1 0x5948      STR      R5,[R1, #+2376]
    134              
    135              Ctrl.ComCtrl[MTR].RxCtrl.EvtFlag       = COMM_EVT_FLAG_MTR_RX; //os事件标识 
   \   0000012C   0x2101             MOVS     R1,#+1
   \   0000012E   0x....             LDR.N    R2,??DataTable2
   \   00000130   0xF882 0x193E      STRB     R1,[R2, #+2366]
    136          
    137              pch->RxSem  = &MB_OS_RxSemTbl[comnum];              // 接收信号量
   \   00000134   0x....             LDR.N    R1,??DataTable2_1
   \   00000136   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000138   0x2228             MOVS     R2,#+40
   \   0000013A   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   0000013E   0xF8C0 0x1854      STR      R1,[R0, #+2132]
    138              pch->TxSem  = &MB_OS_TxSemTbl[comnum];              // 发送信号量
   \   00000142   0x....             LDR.N    R1,??DataTable2_2
   \   00000144   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000146   0x2228             MOVS     R2,#+40
   \   00000148   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   0000014C   0xF8C0 0x1858      STR      R1,[R0, #+2136]
    139              Ctrl.ComCtrl[MTR].pch  = pch;                       // ... modbus控制块和全局结构体建立连接
   \   00000150   0x....             LDR.N    R1,??DataTable2
   \   00000152   0xF8C1 0x0926      STR      R0,[R1, #+2342]
    140              
    141              MtrCom = &Ctrl.ComCtrl[MTR];                       //定义别名，在对应的任务中可用别名直接操作
   \   00000156   0x....             LDR.N    R0,??DataTable2_5
   \   00000158   0x....             LDR.N    R1,??DataTable2_6
   \   0000015A   0x6008             STR      R0,[R1, #+0]
    142          #endif    
    143          
    144          
    145              /***********************************************
    146              * 描述： UART4连接备用通道接口
    147              *        用作主机。
    148              */
    149          #if MODBUS_CFG_MASTER_EN == DEF_TRUE
    150              
    151              comnum      = 3;                                    //所用串号
   \   0000015C   0x2403             MOVS     R4,#+3
    152              boud        = 57600;
   \   0000015E   0xF44F 0x4561      MOV      R5,#+57600
    153              
    154              pch         = MB_CfgCh( TAX_NODE,                   // ... Modbus Node # for this slave channel
    155                                      MODBUS_SLAVE,               // ... This is a MASTER
    156                                      200,                        // ... 0 when a slave
    157                                      MODBUS_MODE_RTU,            // ... Modbus Mode (_ASCII or _RTU)
    158                                      comnum,                     // ... Specify UART #1
    159                                      boud,                       // ... Baud Rate
    160                                      USART_WordLength_8b,        // ... Number of data bits 7 or 8
    161                                      USART_Parity_No,            // ... Parity: _NONE, _ODD or _EVEN
    162                                      USART_StopBits_1,           // ... Number of stop bits 1 or 2
    163                                      MODBUS_WR_EN);              // ... Enable (_EN) or disable (_DIS) writes
   \   00000162   0x2001             MOVS     R0,#+1
   \   00000164   0x9005             STR      R0,[SP, #+20]
   \   00000166   0x2000             MOVS     R0,#+0
   \   00000168   0x9004             STR      R0,[SP, #+16]
   \   0000016A   0x2000             MOVS     R0,#+0
   \   0000016C   0x9003             STR      R0,[SP, #+12]
   \   0000016E   0x2000             MOVS     R0,#+0
   \   00000170   0x9002             STR      R0,[SP, #+8]
   \   00000172   0x9501             STR      R5,[SP, #+4]
   \   00000174   0x0020             MOVS     R0,R4
   \   00000176   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000178   0x9000             STR      R0,[SP, #+0]
   \   0000017A   0x2300             MOVS     R3,#+0
   \   0000017C   0x22C8             MOVS     R2,#+200
   \   0000017E   0x2100             MOVS     R1,#+0
   \   00000180   0x2001             MOVS     R0,#+1
   \   00000182   0x.... 0x....      BL       MB_CfgCh
    164          
    165              Ctrl.ComCtrl[TAX].ConnCtrl.MB_Node     = TAX_NODE;             //modbus编号 
   \   00000186   0x2101             MOVS     R1,#+1
   \   00000188   0x....             LDR.N    R2,??DataTable2
   \   0000018A   0xF8D2 0x2D82      LDR      R2,[R2, #+3458]
   \   0000018E   0xF361 0x4214      BFI      R2,R1,#+16,#+5
   \   00000192   0x....             LDR.N    R1,??DataTable2
   \   00000194   0xF8C1 0x2D82      STR      R2,[R1, #+3458]
    166              Ctrl.ComCtrl[TAX].ConnCtrl.COM_Num     = comnum;               //串口号
   \   00000198   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000019A   0x....             LDR.N    R1,??DataTable2
   \   0000019C   0xF8D1 0x1D82      LDR      R1,[R1, #+3458]
   \   000001A0   0xF364 0x5157      BFI      R1,R4,#+21,#+3
   \   000001A4   0x....             LDR.N    R2,??DataTable2
   \   000001A6   0xF8C2 0x1D82      STR      R1,[R2, #+3458]
    167              Ctrl.ComCtrl[TAX].ConnCtrl.SourceAddr  = LKJ_MAINBOARD_ADDR;   //无线发送模块地址（对MTR无效）
   \   000001AA   0x2184             MOVS     R1,#+132
   \   000001AC   0x....             LDR.N    R2,??DataTable2
   \   000001AE   0xF882 0x1D93      STRB     R1,[R2, #+3475]
    168              Ctrl.ComCtrl[TAX].ConnCtrl.DestAddr    = DTU_ADDR;             //LKJ接口板csnc地址（对MTR无效）
   \   000001B2   0x21CA             MOVS     R1,#+202
   \   000001B4   0x....             LDR.N    R2,??DataTable2
   \   000001B6   0xF882 0x1D92      STRB     R1,[R2, #+3474]
    169              Ctrl.ComCtrl[TAX].ConnCtrl.Baud        = boud;
   \   000001BA   0x....             LDR.N    R1,??DataTable2
   \   000001BC   0xF8C1 0x5D86      STR      R5,[R1, #+3462]
    170              Ctrl.ComCtrl[TAX].RxCtrl.EvtFlag       = COMM_EVT_FLAG_TAX_RX; //os事件标识 
   \   000001C0   0x2104             MOVS     R1,#+4
   \   000001C2   0x....             LDR.N    R2,??DataTable2
   \   000001C4   0xF882 0x1D7C      STRB     R1,[R2, #+3452]
    171              
    172              pch->RxSem  = &MB_OS_RxSemTbl[comnum];              // 接收信号量
   \   000001C8   0x....             LDR.N    R1,??DataTable2_1
   \   000001CA   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000001CC   0x2228             MOVS     R2,#+40
   \   000001CE   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   000001D2   0xF8C0 0x1854      STR      R1,[R0, #+2132]
    173              pch->TxSem  = &MB_OS_TxSemTbl[comnum];              // 发送信号量
   \   000001D6   0x....             LDR.N    R1,??DataTable2_2
   \   000001D8   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000001DA   0x2228             MOVS     R2,#+40
   \   000001DC   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   000001E0   0xF8C0 0x1858      STR      R1,[R0, #+2136]
    174              Ctrl.ComCtrl[TAX].pch  = pch;                       // ... modbus控制块和全局结构体建立连接
   \   000001E4   0x....             LDR.N    R1,??DataTable2
   \   000001E6   0xF8C1 0x0D64      STR      R0,[R1, #+3428]
    175              
    176              TaxCom = &Ctrl.ComCtrl[TAX];                       //定义别名，在对应的任务中可用别名直接操作
   \   000001EA   0x....             LDR.N    R0,??DataTable2_7
   \   000001EC   0x....             LDR.N    R1,??DataTable2_8
   \   000001EE   0x6008             STR      R0,[R1, #+0]
    177          #endif    
    178          }   
   \   000001F0   0xB007             ADD      SP,SP,#+28
   \   000001F2   0xBD30             POP      {R4,R5,PC}       ;; return
    179          
    180          
    181          #if (MODBUS_CFG_NOMODBUS_EN == DEF_ENABLED)
    182          
    183          /**************************************************************
    184          * Description  : 非modbus接收任务
    185          * Author       : 2018/5/21 星期一, by redmorningcn
    186          */

   \                                 In section .text, align 2, keep-with-next
    187          CPU_BOOLEAN  MBN_FCxx_Handler (MODBUS_CH  *pch)
    188          {
   \                     MBN_FCxx_Handler: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   \   00000004   0x0004             MOVS     R4,R0
    189              //数据存在于 pch->RxFrameData（不含crc校验）中，数据数据长度
    190              //将CRC也存放到pch->RxFrameData，长度pch->RxFrameNDataBytes+2+2
    191              int len = pch->RxFrameNDataBytes+2+2;
   \   00000006   0xF8B4 0x0644      LDRH     R0,[R4, #+1604]
   \   0000000A   0x1D05             ADDS     R5,R0,#+4
    192              memcpy(&pch->RxFrameData[pch->RxFrameNDataBytes+2],(u8 *)&pch->RxFrameCRC,sizeof(pch->RxFrameCRC));
   \   0000000C   0x2202             MOVS     R2,#+2
   \   0000000E   0xF204 0x6146      ADDW     R1,R4,#+1606
   \   00000012   0xF8B4 0x0644      LDRH     R0,[R4, #+1604]
   \   00000016   0x1900             ADDS     R0,R0,R4
   \   00000018   0xF200 0x4646      ADDW     R6,R0,#+1094
   \   0000001C   0x0030             MOVS     R0,R6
   \   0000001E   0x.... 0x....      BL       __aeabi_memcpy
    193              
    194              u8  i;
    195              u8  reply;
    196              for(i = 0;i <sizeof(Ctrl.ComCtrl)/sizeof(StrCOMCtrl);i++ )
   \   00000022   0x2600             MOVS     R6,#+0
   \   00000024   0xE000             B.N      ??MBN_FCxx_Handler_0
   \                     ??MBN_FCxx_Handler_1: (+1)
   \   00000026   0x1C76             ADDS     R6,R6,#+1
   \                     ??MBN_FCxx_Handler_0: (+1)
   \   00000028   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000002A   0x2E04             CMP      R6,#+4
   \   0000002C   0xF080 0x80DC      BCS.W    ??MBN_FCxx_Handler_2
    197              {
    198                  if(Ctrl.ComCtrl[i].pch == pch && pch !=null)    //查找对应的串口控制块
   \   00000030   0x....             LDR.N    R0,??DataTable2
   \   00000032   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000034   0xF240 0x413E      MOVW     R1,#+1086
   \   00000038   0xFB01 0x0006      MLA      R0,R1,R6,R0
   \   0000003C   0xF8D0 0x04E8      LDR      R0,[R0, #+1256]
   \   00000040   0x42A0             CMP      R0,R4
   \   00000042   0xD1F0             BNE.N    ??MBN_FCxx_Handler_1
   \   00000044   0x2C00             CMP      R4,#+0
   \   00000046   0xD0EE             BEQ.N    ??MBN_FCxx_Handler_1
    199                  {
    200                      /**************************************************************
    201                      * Description  : csnc协议
    202                      * Author       : 2018/5/21 星期一, by redmorningcn
    203                      */            
    204                      //判断数据是否满足帧头帧尾要求
    205                      if(     pch->RxFrameData[0]     == FRAM_HERD0
    206                          &&  pch->RxFrameData[1]     == FRAM_HERD1
    207                          &&  pch->RxFrameData[len-2] == FRAM_END0
    208                          &&  pch->RxFrameData[len-1] == FRAM_END1
    209                         )
   \   00000048   0xF894 0x0444      LDRB     R0,[R4, #+1092]
   \   0000004C   0x2810             CMP      R0,#+16
   \   0000004E   0xF040 0x80AA      BNE.W    ??MBN_FCxx_Handler_3
   \   00000052   0xF894 0x0445      LDRB     R0,[R4, #+1093]
   \   00000056   0x2828             CMP      R0,#+40
   \   00000058   0xF040 0x80A5      BNE.W    ??MBN_FCxx_Handler_3
   \   0000005C   0x1928             ADDS     R0,R5,R4
   \   0000005E   0xF890 0x0442      LDRB     R0,[R0, #+1090]
   \   00000062   0x2810             CMP      R0,#+16
   \   00000064   0xF040 0x809F      BNE.W    ??MBN_FCxx_Handler_3
   \   00000068   0x1928             ADDS     R0,R5,R4
   \   0000006A   0xF890 0x0443      LDRB     R0,[R0, #+1091]
   \   0000006E   0x282C             CMP      R0,#+44
   \   00000070   0xF040 0x8099      BNE.W    ??MBN_FCxx_Handler_3
    210                      {
    211                          Ctrl.ComCtrl[i].RxCtrl.sCsnc.databuf = (u8 *)&Ctrl.ComCtrl[i].Rd;
   \   00000074   0x....             LDR.N    R0,??DataTable2
   \   00000076   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000078   0xF240 0x413E      MOVW     R1,#+1086
   \   0000007C   0xFB01 0x0006      MLA      R0,R1,R6,R0
   \   00000080   0x30E8             ADDS     R0,R0,#+232
   \   00000082   0x....             LDR.N    R1,??DataTable2
   \   00000084   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000086   0xF240 0x423E      MOVW     R2,#+1086
   \   0000008A   0xFB02 0x1106      MLA      R1,R2,R6,R1
   \   0000008E   0xF8C1 0x04F2      STR      R0,[R1, #+1266]
    212                          Ctrl.ComCtrl[i].RxCtrl.sCsnc.rxtxbuf = pch->RxFrameData;
   \   00000092   0xF204 0x4044      ADDW     R0,R4,#+1092
   \   00000096   0x....             LDR.N    R1,??DataTable2
   \   00000098   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000009A   0xF240 0x423E      MOVW     R2,#+1086
   \   0000009E   0xFB02 0x1106      MLA      R1,R2,R6,R1
   \   000000A2   0xF8C1 0x04F6      STR      R0,[R1, #+1270]
    213                          Ctrl.ComCtrl[i].RxCtrl.sCsnc.rxtxlen = len;
   \   000000A6   0x....             LDR.N    R0,??DataTable2
   \   000000A8   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000AA   0xF240 0x413E      MOVW     R1,#+1086
   \   000000AE   0xFB01 0x0006      MLA      R0,R1,R6,R0
   \   000000B2   0xF880 0x54FB      STRB     R5,[R0, #+1275]
    214                          
    215                          reply = DataUnpack_CSNC((strCsnrProtocolPara *)&Ctrl.ComCtrl[i].RxCtrl.sCsnc);
   \   000000B6   0x....             LDR.N    R0,??DataTable2
   \   000000B8   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000BA   0xF240 0x413E      MOVW     R1,#+1086
   \   000000BE   0xFB01 0x0006      MLA      R0,R1,R6,R0
   \   000000C2   0xF200 0x40EE      ADDW     R0,R0,#+1262
   \   000000C6   0x.... 0x....      BL       DataUnpack_CSNC
    216                          
    217                          if(reply == 1)                          //解析成功
   \   000000CA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000CC   0x2801             CMP      R0,#+1
   \   000000CE   0xD16A             BNE.N    ??MBN_FCxx_Handler_3
    218                          {
    219                              /**************************************************************
    220                              * Description  : 解析地址，
    221                              * Author       : 2018/6/7 星期四, by redmorningcn
    222                              */
    223                              if(Ctrl.ComCtrl[i].RxCtrl.sCsnc.sourceaddr    == DTU_ADDR || Ctrl.ComCtrl[i].RxCtrl.sCsnc.sourceaddr == SET_ADDR){
   \   000000D0   0x....             LDR.N    R0,??DataTable2
   \   000000D2   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000D4   0xF240 0x413E      MOVW     R1,#+1086
   \   000000D8   0xFB01 0x0006      MLA      R0,R1,R6,R0
   \   000000DC   0xF890 0x04EE      LDRB     R0,[R0, #+1262]
   \   000000E0   0x28CA             CMP      R0,#+202
   \   000000E2   0xD009             BEQ.N    ??MBN_FCxx_Handler_4
   \   000000E4   0x....             LDR.N    R0,??DataTable2
   \   000000E6   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000E8   0xF240 0x413E      MOVW     R1,#+1086
   \   000000EC   0xFB01 0x0006      MLA      R0,R1,R6,R0
   \   000000F0   0xF890 0x04EE      LDRB     R0,[R0, #+1262]
   \   000000F4   0x28C2             CMP      R0,#+194
   \   000000F6   0xD156             BNE.N    ??MBN_FCxx_Handler_3
    224                                  if(Ctrl.ComCtrl[i].RxCtrl.sCsnc.destaddr  == LKJ_MAINBOARD_ADDR){
   \                     ??MBN_FCxx_Handler_4: (+1)
   \   000000F8   0x....             LDR.N    R0,??DataTable2
   \   000000FA   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000FC   0xF240 0x413E      MOVW     R1,#+1086
   \   00000100   0xFB01 0x0006      MLA      R0,R1,R6,R0
   \   00000104   0xF890 0x04EF      LDRB     R0,[R0, #+1263]
   \   00000108   0x2884             CMP      R0,#+132
   \   0000010A   0xD14C             BNE.N    ??MBN_FCxx_Handler_3
    225                                      
    226                                      Ctrl.ComCtrl[i].RxCtrl.Len          = Ctrl.ComCtrl[i].RxCtrl.sCsnc.datalen;
   \   0000010C   0x....             LDR.N    R0,??DataTable2
   \   0000010E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000110   0xF240 0x413E      MOVW     R1,#+1086
   \   00000114   0xFB01 0x0006      MLA      R0,R1,R6,R0
   \   00000118   0xF890 0x04FA      LDRB     R0,[R0, #+1274]
   \   0000011C   0x....             LDR.N    R1,??DataTable2
   \   0000011E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000120   0xF240 0x423E      MOVW     R2,#+1086
   \   00000124   0xFB02 0x1106      MLA      R1,R2,R6,R1
   \   00000128   0xF881 0x04FE      STRB     R0,[R1, #+1278]
    227                                      Ctrl.ComCtrl[i].RxCtrl.protocol     = CSNC_PROTOCOL;
   \   0000012C   0x2001             MOVS     R0,#+1
   \   0000012E   0x....             LDR.N    R1,??DataTable2
   \   00000130   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000132   0xF240 0x423E      MOVW     R2,#+1086
   \   00000136   0xFB02 0x1106      MLA      R1,R2,R6,R1
   \   0000013A   0xF881 0x04FF      STRB     R0,[R1, #+1279]
    228                                      Ctrl.ComCtrl[i].ConnCtrl.RecvEndFlg = 1;                        //接收到结束标识(同一任务中，收发协调)
   \   0000013E   0x....             LDR.N    R0,??DataTable2
   \   00000140   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000142   0xF240 0x413E      MOVW     R1,#+1086
   \   00000146   0xFB01 0x0006      MLA      R0,R1,R6,R0
   \   0000014A   0xF8D0 0x0506      LDR      R0,[R0, #+1286]
   \   0000014E   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   00000152   0x....             LDR.N    R1,??DataTable2
   \   00000154   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000156   0xF240 0x423E      MOVW     R2,#+1086
   \   0000015A   0xFB02 0x1106      MLA      R1,R2,R6,R1
   \   0000015E   0xF8C1 0x0506      STR      R0,[R1, #+1286]
    229                                      Ctrl.ComCtrl[i].RxCtrl.RecvFlg      = 1;                        //接收到结束标识()
   \   00000162   0x....             LDR.N    R0,??DataTable2
   \   00000164   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000166   0xF240 0x413E      MOVW     R1,#+1086
   \   0000016A   0xFB01 0x0006      MLA      R0,R1,R6,R0
   \   0000016E   0xF890 0x0501      LDRB     R0,[R0, #+1281]
   \   00000172   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000176   0x....             LDR.N    R1,??DataTable2
   \   00000178   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000017A   0xF240 0x423E      MOVW     R2,#+1086
   \   0000017E   0xFB02 0x1106      MLA      R1,R2,R6,R1
   \   00000182   0xF881 0x0501      STRB     R0,[R1, #+1281]
    230                                                                  
    231                                      OS_ERR      err;
    232                                      OSFlagPost( ( OS_FLAG_GRP  *)&Ctrl.Os.CommEvtFlagGrp,           //
    233                                                 ( OS_FLAGS      )Ctrl.ComCtrl[i].RxCtrl.EvtFlag,     //发送指定的事件标识组。
    234                                                 ( OS_OPT        )OS_OPT_POST_FLAG_SET,   
    235                                                 ( OS_ERR       *)&err);
   \   00000186   0xF10D 0x0302      ADD      R3,SP,#+2
   \   0000018A   0x2200             MOVS     R2,#+0
   \   0000018C   0x....             LDR.N    R0,??DataTable2
   \   0000018E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000190   0xF240 0x413E      MOVW     R1,#+1086
   \   00000194   0xFB01 0x0006      MLA      R0,R1,R6,R0
   \   00000198   0xF890 0x1500      LDRB     R1,[R0, #+1280]
   \   0000019C   0x....             LDR.N    R0,??DataTable2_9
   \   0000019E   0x.... 0x....      BL       OSFlagPost
    236                                      
    237                                      
    238                                      return DEF_TRUE;
   \   000001A2   0x2001             MOVS     R0,#+1
   \   000001A4   0xE021             B.N      ??MBN_FCxx_Handler_5
    239                                  }
    240                              }
    241                          }
    242                      }
    243                      
    244                      /**************************************************************
    245                      * Description  : Q560无线（4G模块）AT指令
    246                      * Author       : 2018/5/21 星期一, by redmorningcn
    247                      */
    248                      reply = Q460ProtocoUnpack((char *)pch->RxFrameData,len);
   \                     ??MBN_FCxx_Handler_3: (+1)
   \   000001A6   0x0029             MOVS     R1,R5
   \   000001A8   0xF204 0x4044      ADDW     R0,R4,#+1092
   \   000001AC   0x.... 0x....      BL       Q460ProtocoUnpack
    249                      if(reply == 1)  //解析成功
   \   000001B0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001B2   0x2801             CMP      R0,#+1
   \   000001B4   0xF47F 0xAF37      BNE.W    ??MBN_FCxx_Handler_1
    250                      {
    251                          Ctrl.ComCtrl[i].RxCtrl.protocol = Q560_PROTOCOL;                //q560无线at指令
   \   000001B8   0x2002             MOVS     R0,#+2
   \   000001BA   0x....             LDR.N    R1,??DataTable2
   \   000001BC   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000001BE   0xF240 0x423E      MOVW     R2,#+1086
   \   000001C2   0xFB02 0x1106      MLA      R1,R2,R6,R1
   \   000001C6   0xF881 0x04FF      STRB     R0,[R1, #+1279]
    252                          
    253                          OS_ERR      err;
    254                          OSFlagPost( ( OS_FLAG_GRP  *)&Ctrl.Os.CommEvtFlagGrp,           //
    255                                     ( OS_FLAGS      )Ctrl.ComCtrl[i].RxCtrl.EvtFlag,     //发送指定的事件标识组。
    256                                     ( OS_OPT        )OS_OPT_POST_FLAG_SET,   
    257                                     ( OS_ERR       *)&err);
   \   000001CA   0x466B             MOV      R3,SP
   \   000001CC   0x2200             MOVS     R2,#+0
   \   000001CE   0x....             LDR.N    R0,??DataTable2
   \   000001D0   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000001D2   0xF240 0x413E      MOVW     R1,#+1086
   \   000001D6   0xFB01 0x0006      MLA      R0,R1,R6,R0
   \   000001DA   0xF890 0x1500      LDRB     R1,[R0, #+1280]
   \   000001DE   0x....             LDR.N    R0,??DataTable2_9
   \   000001E0   0x.... 0x....      BL       OSFlagPost
    258                          return  DEF_TRUE;
   \   000001E4   0x2001             MOVS     R0,#+1
   \   000001E6   0xE000             B.N      ??MBN_FCxx_Handler_5
    259                      }
    260                      
    261                      /**************************************************************
    262                      * Description  : 其他协议在此加入接口
    263                      * Author       : 2018/5/21 星期一, by redmorningcn
    264                      */
    265                  }
    266              }
    267              
    268              return DEF_FALSE;
   \                     ??MBN_FCxx_Handler_2: (+1)
   \   000001E8   0x2000             MOVS     R0,#+0
   \                     ??MBN_FCxx_Handler_5: (+1)
   \   000001EA   0xBD76             POP      {R1,R2,R4-R6,PC}  ;; return
    269          }
    270            
    271          /**************************************************************
    272          * Description  : 非modbus协议发送(查询发送状态，发送完后退出)
    273          * Author       : 2018/5/21 星期一, by redmorningcn
    274          */

   \                                 In section .text, align 2, keep-with-next
    275          void NMB_Tx(MODBUS_CH    *pch,
    276                      CPU_INT08U   *p_reg_tbl,
    277                      CPU_INT16U   nbr_bytes)
    278          {
   \                     NMB_Tx: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0006             MOVS     R6,R0
    279              CPU_INT08U  *ptx_data;
    280              CPU_INT08U  *pbuf;
    281              CPU_INT08U   i;
    282              //int         retry = 100;
    283              //
    284              /**************************************************************
    285              * Description  : 发送长度为0，退出
    286              * Author       : 2018/5/21 星期一, by redmorningcn
    287              */
    288              if(nbr_bytes == 0)
   \   00000004   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000006   0x2A00             CMP      R2,#+0
   \   00000008   0xD04C             BEQ.N    ??NMB_Tx_0
    289                  return;
    290              
    291              /**************************************************************
    292              * Description  : 等发送完成
    293              * Author       : 2018/5/21 星期一, by redmorningcn  (pch->TxBufByteCtr 标识已置位（bug）)
    294              */
    295          //    retry = 100;           //防死循环
    296          //    while (pch->TxBufByteCtr != 0 && retry--){
    297          //        u8  dly = (CPU_INT32U)((float)pch->TxBufByteCtr * 1000.0 * 10.0 / (float)pch->BaudRate);
    298          //        if(dly == 0)
    299          //            dly = 1;
    300          //        
    301          //        BSP_OS_TimeDlyMs( dly );
    302          //    }
    303              
    304              /***********************************************
    305              * 描述： 2018/1/16,无名沈：将数据写入发送缓冲区 
    306              */
    307              if ( p_reg_tbl != &pch->TxBuf[0] ) {
   \                     ??NMB_Tx_1: (+1)
   \   0000000A   0xF516 0x7011      ADDS     R0,R6,#+580
   \   0000000E   0x4281             CMP      R1,R0
   \   00000010   0xD00B             BEQ.N    ??NMB_Tx_2
    308                  pbuf      = &pch->TxBuf[0];                                     /* Point to the beginning of the output buffer.             */
   \   00000012   0xF516 0x7011      ADDS     R0,R6,#+580
    309                  ptx_data  = p_reg_tbl;
    310                  i         = nbr_bytes;                                          /* Include the actual data in the buffer                    */
   \   00000016   0x0013             MOVS     R3,R2
   \   00000018   0xE004             B.N      ??NMB_Tx_3
    311                  
    312                  while (i > 0) {
    313                      *pbuf++ = *ptx_data++;
   \                     ??NMB_Tx_4: (+1)
   \   0000001A   0x780C             LDRB     R4,[R1, #+0]
   \   0000001C   0x7004             STRB     R4,[R0, #+0]
   \   0000001E   0x1C49             ADDS     R1,R1,#+1
   \   00000020   0x1C40             ADDS     R0,R0,#+1
    314                      i--;
   \   00000022   0x1E5B             SUBS     R3,R3,#+1
    315                  }
   \                     ??NMB_Tx_3: (+1)
   \   00000024   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000026   0x2B00             CMP      R3,#+0
   \   00000028   0xD1F7             BNE.N    ??NMB_Tx_4
    316              }
    317              pch->TxBufByteCtr = nbr_bytes;
   \                     ??NMB_Tx_2: (+1)
   \   0000002A   0xF8A6 0x223C      STRH     R2,[R6, #+572]
    318          
    319              /***********************************************
    320              * 描述： 2018/1/16,无名沈：等待数据接收完成 （485总线需要）
    321              */
    322              CPU_INT16U  lastCtr;
    323              do {
    324                  lastCtr  = pch->RxBufByteCtr;
   \                     ??NMB_Tx_5: (+1)
   \   0000002E   0x8E34             LDRH     R4,[R6, #+48]
    325                  if ( lastCtr ) {
   \   00000030   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000032   0x2C00             CMP      R4,#+0
   \   00000034   0xD007             BEQ.N    ??NMB_Tx_6
    326                      BSP_OS_TimeDlyMs(5);
   \   00000036   0x2005             MOVS     R0,#+5
   \   00000038   0x.... 0x....      BL       BSP_OS_TimeDlyMs
    327                  } else {
    328                      break;
    329                  }
    330              } while ( ( pch->RxBufByteCtr != lastCtr ) );
   \   0000003C   0x8E30             LDRH     R0,[R6, #+48]
   \   0000003E   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000040   0x42A0             CMP      R0,R4
   \   00000042   0xD1F4             BNE.N    ??NMB_Tx_5
   \   00000044   0xE7FF             B.N      ??NMB_Tx_7
    331              
    332              /***********************************************
    333              * 描述： 2018/1/16,无名沈： 发送数据
    334              */
    335              MB_Tx(pch);
   \                     ??NMB_Tx_6: (+1)
   \                     ??NMB_Tx_7: (+1)
   \   00000046   0x0030             MOVS     R0,R6
   \   00000048   0x.... 0x....      BL       MB_Tx
   \   0000004C   0xE023             B.N      ??NMB_Tx_8
    336              
    337              //等待发送完成。
    338              while (pch->TxBufByteCtr != 0){
    339                  u8  dly = (CPU_INT32U)((float)pch->TxBufByteCtr * 1000.0 * 10.0 / (float)pch->BaudRate);
   \                     ??NMB_Tx_9: (+1)
   \   0000004E   0xF8B6 0x023C      LDRH     R0,[R6, #+572]
   \   00000052   0x.... 0x....      BL       __aeabi_ui2f
   \   00000056   0x.... 0x....      BL       __aeabi_f2d
   \   0000005A   0x2200             MOVS     R2,#+0
   \   0000005C   0x....             LDR.N    R3,??DataTable2_10  ;; 0x408f4000
   \   0000005E   0x.... 0x....      BL       __aeabi_dmul
   \   00000062   0x2200             MOVS     R2,#+0
   \   00000064   0x....             LDR.N    R3,??DataTable2_11  ;; 0x40240000
   \   00000066   0x.... 0x....      BL       __aeabi_dmul
   \   0000006A   0x0004             MOVS     R4,R0
   \   0000006C   0x000D             MOVS     R5,R1
   \   0000006E   0x68F0             LDR      R0,[R6, #+12]
   \   00000070   0x.... 0x....      BL       __aeabi_ui2f
   \   00000074   0x.... 0x....      BL       __aeabi_f2d
   \   00000078   0x0002             MOVS     R2,R0
   \   0000007A   0x000B             MOVS     R3,R1
   \   0000007C   0x0020             MOVS     R0,R4
   \   0000007E   0x0029             MOVS     R1,R5
   \   00000080   0x.... 0x....      BL       __aeabi_ddiv
   \   00000084   0x.... 0x....      BL       __aeabi_d2uiz
    340                  if(dly == 0)
   \   00000088   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000008A   0x2800             CMP      R0,#+0
   \   0000008C   0xD100             BNE.N    ??NMB_Tx_10
    341                      dly = 1;
   \   0000008E   0x2001             MOVS     R0,#+1
    342                  
    343                  BSP_OS_TimeDlyMs( dly );
   \                     ??NMB_Tx_10: (+1)
   \   00000090   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000092   0x.... 0x....      BL       BSP_OS_TimeDlyMs
    344              }
   \                     ??NMB_Tx_8: (+1)
   \   00000096   0xF8B6 0x023C      LDRH     R0,[R6, #+572]
   \   0000009A   0x2800             CMP      R0,#+0
   \   0000009C   0xD1D7             BNE.N    ??NMB_Tx_9
    345              BSP_OS_TimeDlyMs( 1 );
   \   0000009E   0x2001             MOVS     R0,#+1
   \   000000A0   0x.... 0x....      BL       BSP_OS_TimeDlyMs
    346          }
   \                     ??NMB_Tx_0: (+1)
   \   000000A4   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     Ctrl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     MB_OS_RxSemTbl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     MB_OS_TxSemTbl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x........         DC32     Ctrl+0xE8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x........         DC32     DtuCom

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x........         DC32     Ctrl+0x526

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x........         DC32     MtrCom

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x........         DC32     Ctrl+0x964

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0x........         DC32     TaxCom

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_9:
   \   00000000   0x........         DC32     Ctrl+0x11E0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_10:
   \   00000000   0x408F4000         DC32     0x408f4000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_11:
   \   00000000   0x40240000         DC32     0x40240000
    347          
    348          #endif
    349          
    350          
    351          
    352          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      40   App_ModbusInit
        40   -> MB_CfgCh
        40   -> MB_Init
      24   MBN_FCxx_Handler
        24   -> DataUnpack_CSNC
        24   -> OSFlagPost
        24   -> Q460ProtocoUnpack
        24   -> __aeabi_memcpy
      16   NMB_Tx
        16   -> BSP_OS_TimeDlyMs
        16   -> MB_Tx
        16   -> __aeabi_d2uiz
        16   -> __aeabi_ddiv
        16   -> __aeabi_dmul
        16   -> __aeabi_f2d
        16   -> __aeabi_ui2f


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_10
       4  ??DataTable2_11
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  ??DataTable2_9
     500  App_ModbusInit
     492  MBN_FCxx_Handler
     166  NMB_Tx

 
 1 206 bytes in section .text
 
 1 206 bytes of CODE memory

Errors: none
Warnings: none
