###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       15/Jul/2018  10:36:16
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC210\NC210-200处理板\source\task\app_task_osal_led.c
#    Command line =  
#        F:\iar\NC210\NC210-200处理板\source\task\app_task_osal_led.c -D
#        USE_STDPERIPH_DRIVER -D APP_RELEASE -lCN
#        F:\iar\NC210\NC210-200处理板\project\app_release\List -o
#        F:\iar\NC210\NC210-200处理板\project\app_release\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M3 -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Full.h" -I
#        F:\iar\NC210\NC210-200处理板\project\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\config\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\task\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\user\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\OSAL\OS\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\OSAL\Ports\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\driver\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-LIB\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-CPU\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uCOS-III\Source\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\IAR\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\ST\STM32\inc\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\OS\uCOS-III\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-MB\OS\uCOS-III\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-MB\Ports\STM32\STM32F103\IAR\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-MB\Source\
#        -Ol --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC210\NC210-200处理板\project\app_release\List\app_task_osal_led.lst
#    Object file  =  
#        F:\iar\NC210\NC210-200处理板\project\app_release\Obj\app_task_osal_led.o
#
###############################################################################

F:\iar\NC210\NC210-200处理板\source\task\app_task_osal_led.c
      1          /*******************************************************************************
      2          * Description  : LED指示灯任务
      3          * Author       : 2018/5/15 星期二, by redmorningcn
      4          *******************************************************************************/
      5          
      6          
      7          /*******************************************************************************
      8          * INCLUDES
      9          */
     10          #include <includes.h>
     11          
     12          #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
     13          const  CPU_CHAR  *app_task_led__c = "$Id: $";
     14          #endif
     15          
     16          /*******************************************************************************
     17          * CONSTANTS
     18          */
     19          
     20          /*******************************************************************************
     21          * MACROS
     22          */
     23          //LED指示灯位定义
     24          #define     RUN_LED             1
     25          #define     X1_SPEED_LED        2
     26          #define     X2_DTU_LED          3
     27          #define     X3_TAX_LED          4
     28          #define     X4_VOL_LED          5
     29          
     30          /*******************************************************************************
     31          * TYPEDEFS
     32          */
     33          
     34          /*******************************************************************************
     35          * LOCAL VARIABLES
     36          */
     37          
     38          
     39          /*******************************************************************************
     40          * GLOBAL VARIABLES
     41          */
     42          
     43          /*******************************************************************************
     44          * LOCAL FUNCTIONS
     45          */
     46          #if ( OSAL_EN == DEF_ENABLED )
     47          #else
     48          static  void    AppTaskLed           (void *p_arg);
     49          #endif
     50          
     51          /*******************************************************************************
     52          * GLOBAL FUNCTIONS
     53          */
     54          
     55          /*******************************************************************************
     56          * EXTERN VARIABLES
     57          */
     58          
     59          /*******************************************************************************/
     60          
     61          /*******************************************************************************
     62          * 名    称： AppTaskLed
     63          * 功    能： 控制任务
     64          * 入口参数： p_arg - 由任务创建函数传入
     65          * 出口参数： 无
     66          * 作    者： wumingshen.
     67          * 创建日期： 2015-02-05
     68          * 修    改：
     69          * 修改日期：
     70          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     71          osalEvt  TaskLedEvtProcess(osalTid task_id, osalEvt task_event)
     72          {
   \                     TaskLedEvtProcess: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x000C             MOVS     R4,R1
     73              /***********************************************
     74              * 描述： 本任务看门狗标志置位
     75              */
     76              OSSetWdtFlag(( OS_FLAGS     ) WDT_FLAG_LED);
   \   00000004   0x2020             MOVS     R0,#+32
   \   00000006   0x.... 0x....      BL       OSSetWdtFlag
     77          
     78              if( task_event & OS_EVT_LED_TICKS ) {
   \   0000000A   0x07E0             LSLS     R0,R4,#+31
   \   0000000C   0xD52C             BPL.N    ??TaskLedEvtProcess_0
     79                  static  uint8   mode = 0;
     80                  
     81                  /***********************************************
     82                  * 描述： 开机显示
     83                  */
     84                  while( mode < 10) {
   \   0000000E   0x....             LDR.N    R0,??DataTable0
   \   00000010   0x7800             LDRB     R0,[R0, #+0]
   \   00000012   0x280A             CMP      R0,#+10
   \   00000014   0xDA1D             BGE.N    ??TaskLedEvtProcess_1
     85                      
     86                      if(mode==0 || mode == 9)    
   \   00000016   0x....             LDR.N    R0,??DataTable0
   \   00000018   0x7800             LDRB     R0,[R0, #+0]
   \   0000001A   0x2800             CMP      R0,#+0
   \   0000001C   0xD003             BEQ.N    ??TaskLedEvtProcess_2
   \   0000001E   0x....             LDR.N    R0,??DataTable0
   \   00000020   0x7800             LDRB     R0,[R0, #+0]
   \   00000022   0x2809             CMP      R0,#+9
   \   00000024   0xD103             BNE.N    ??TaskLedEvtProcess_3
     87                          BSP_LED_Off(0);         //指示灯全灭
   \                     ??TaskLedEvtProcess_2: (+1)
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0x.... 0x....      BL       BSP_LED_Off
   \   0000002C   0xE003             B.N      ??TaskLedEvtProcess_4
     88                      else
     89                      {
     90                          BSP_LED_On(mode);       //依次点亮指示灯
   \                     ??TaskLedEvtProcess_3: (+1)
   \   0000002E   0x....             LDR.N    R0,??DataTable0
   \   00000030   0x7800             LDRB     R0,[R0, #+0]
   \   00000032   0x.... 0x....      BL       BSP_LED_On
     91                      }
     92                      mode++;
   \                     ??TaskLedEvtProcess_4: (+1)
   \   00000036   0x....             LDR.N    R0,??DataTable0
   \   00000038   0x7800             LDRB     R0,[R0, #+0]
   \   0000003A   0x1C40             ADDS     R0,R0,#+1
   \   0000003C   0x....             LDR.N    R1,??DataTable0
   \   0000003E   0x7008             STRB     R0,[R1, #+0]
     93          
     94                      osal_start_timerEx( OS_TASK_ID_LED,
     95                                          OS_EVT_LED_TICKS,
     96                                          500);
   \   00000040   0xF44F 0x72FA      MOV      R2,#+500
   \   00000044   0x2101             MOVS     R1,#+1
   \   00000046   0x2005             MOVS     R0,#+5
   \   00000048   0x.... 0x....      BL       osal_start_timerEx
     97                      return ( task_event ^ OS_EVT_LED_TICKS );
   \   0000004C   0xF094 0x0001      EORS     R0,R4,#0x1
   \   00000050   0xE00B             B.N      ??TaskLedEvtProcess_5
     98                  }
     99                  
    100                  /***********************************************
    101                  * 描述：根据状态控制指示灯闪烁
    102                  */
    103          //        if( !Ctrl.Mtr.ConnCtrl[0].ErrFlg ){
    104          //            BSP_LED_Toggle(BSP_LED_DP1);                  //对应指示灯点亮
    105          //        }else{
    106          //            BSP_LED_Off(BSP_LED_DP1);                     //对应指示灯点关闭
    107          //        }      
    108               
    109                  
    110                  BSP_LED_Toggle(RUN_LED);                            //运行指示灯                    
   \                     ??TaskLedEvtProcess_1: (+1)
   \   00000052   0x2001             MOVS     R0,#+1
   \   00000054   0x.... 0x....      BL       BSP_LED_Toggle
    111                  /***********************************************
    112                  * 描述： 定时器重启
    113                  */
    114                  osal_start_timerEx( OS_TASK_ID_LED,
    115                                      OS_EVT_LED_TICKS,
    116                                      50);
   \   00000058   0x2232             MOVS     R2,#+50
   \   0000005A   0x2101             MOVS     R1,#+1
   \   0000005C   0x2005             MOVS     R0,#+5
   \   0000005E   0x.... 0x....      BL       osal_start_timerEx
    117                  return ( task_event ^ OS_EVT_LED_TICKS );
   \   00000062   0xF094 0x0001      EORS     R0,R4,#0x1
   \   00000066   0xE000             B.N      ??TaskLedEvtProcess_5
    118              }
    119              
    120              return 0;
   \                     ??TaskLedEvtProcess_0: (+1)
   \   00000068   0x2000             MOVS     R0,#+0
   \                     ??TaskLedEvtProcess_5: (+1)
   \   0000006A   0xBD10             POP      {R4,PC}          ;; return
    121          }

   \                                 In section .bss, align 1
   \                     ??mode:
   \   00000000                      DS8 1
    122          
    123          /*******************************************************************************
    124          * 名    称：APP_LedInit
    125          * 功    能：任务初始化
    126          * 入口参数：无
    127          * 出口参数：无
    128          * 作    者：redmorningcn.
    129          * 创建日期：2017-05-15
    130          * 修    改：
    131          * 修改日期：
    132          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    133          void TaskInitLed(void)
    134          {   
   \                     TaskInitLed: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    135              /***********************************************
    136              * 描述： 在看门狗标志组注册本任务的看门狗标志
    137              */
    138              OSRegWdtFlag(( OS_FLAGS     )WDT_FLAG_LED );
   \   00000002   0x2020             MOVS     R0,#+32
   \   00000004   0x.... 0x....      BL       OSRegWdtFlag
    139              
    140              /*************************************************
    141              * 描述：启动事件查询
    142              */   
    143              osal_start_timerEx( OS_TASK_ID_LED,
    144                                 OS_EVT_LED_TICKS,
    145                                 OS_TICKS_PER_SEC);
   \   00000008   0xF44F 0x727A      MOV      R2,#+1000
   \   0000000C   0x2101             MOVS     R1,#+1
   \   0000000E   0x2005             MOVS     R0,#+5
   \   00000010   0x.... 0x....      BL       osal_start_timerEx
    146          }
   \   00000014   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x........         DC32     ??mode
    147          
    148          /*******************************************************************************
    149          * 				                    end of file                                *
    150          *******************************************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   TaskInitLed
         8   -> OSRegWdtFlag
         8   -> osal_start_timerEx
       8   TaskLedEvtProcess
         8   -> BSP_LED_Off
         8   -> BSP_LED_On
         8   -> BSP_LED_Toggle
         8   -> OSSetWdtFlag
         8   -> osal_start_timerEx


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
      22  TaskInitLed
     108  TaskLedEvtProcess
       1  mode

 
   1 byte  in section .bss
 134 bytes in section .text
 
 134 bytes of CODE memory
   1 byte  of DATA memory

Errors: none
Warnings: none
