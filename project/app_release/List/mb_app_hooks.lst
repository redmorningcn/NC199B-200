###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       15/Jul/2018  10:36:22
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC210\NC210-200处理板\source\Software\uC-MB\Cfg\Template\mb_app_hooks.c
#    Command line =  
#        F:\iar\NC210\NC210-200处理板\source\Software\uC-MB\Cfg\Template\mb_app_hooks.c
#        -D USE_STDPERIPH_DRIVER -D APP_RELEASE -lCN
#        F:\iar\NC210\NC210-200处理板\project\app_release\List -o
#        F:\iar\NC210\NC210-200处理板\project\app_release\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M3 -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Full.h" -I
#        F:\iar\NC210\NC210-200处理板\project\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\config\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\task\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\user\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\OSAL\OS\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\OSAL\Ports\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\driver\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-LIB\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-CPU\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uCOS-III\Source\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\IAR\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\ST\STM32\inc\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\OS\uCOS-III\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-MB\OS\uCOS-III\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-MB\Ports\STM32\STM32F103\IAR\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-MB\Source\
#        -Ol --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC210\NC210-200处理板\project\app_release\List\mb_app_hooks.lst
#    Object file  =  
#        F:\iar\NC210\NC210-200处理板\project\app_release\Obj\mb_app_hooks.o
#
###############################################################################

F:\iar\NC210\NC210-200处理板\source\Software\uC-MB\Cfg\Template\mb_app_hooks.c
      1          /*
      2          ************************************************************************************************************************
      3          *                                                     uC/MB-III
      4          *                                                The Real-Time Kernel
      5          *
      6          *                                  (c) Copyright 2009-2010; Micrium, Inc.; Weston, FL
      7          *                          All rights reserved.  Protected by international copyright laws.
      8          *
      9          *                                                  APPLICATION HOOKS
     10          *
     11          * File    : MB_APP_HOOKS.C
     12          * By      : JJL
     13          * Version : V3.01.2
     14          *
     15          * LICENSING TERMS:
     16          * ---------------
     17          *               uC/MB-III is provided in source form to reg_baseistered licensees ONLY.  It is
     18          *               illegal to distribute this source code to any third party unless you receive
     19          *               written permission by an authorized Micrium representative.  Knowledge of
     20          *               the source code may NOT be used to develop a similar product.
     21          *
     22          *               Please help us continue to provide the Embedded community with the finest
     23          *               software available.  Your honesty is greatly appreciated.
     24          *
     25          *               You can contact us at www.micrium.com.
     26          ************************************************************************************************************************
     27          */
     28          
     29          #include <includes.h>
     30          
     31          
     32          /*$PAGE*/
     33          /*
     34          ************************************************************************************************************************
     35          *                                              SET ALL APPLICATION HOOKS
     36          *
     37          * Description: Set ALL application hooks.
     38          *
     39          * Arguments  : none.
     40          *
     41          * Note(s)    : none
     42          ************************************************************************************************************************
     43          */
     44          

   \                                 In section .text, align 2, keep-with-next
     45          void  App_MB_SetAllHooks (void)
     46          {
     47          #if MB_CFG_APP_HOOKS_EN > 0u
     48          
     49          #endif
     50          }
   \                     App_MB_SetAllHooks: (+1)
   \   00000000   0x4770             BX       LR               ;; return
     51          
     52          /*$PAGE*/
     53          /*
     54          ************************************************************************************************************************
     55          *                                             CLEAR ALL APPLICATION HOOKS
     56          *
     57          * Description: Clear ALL application hooks.
     58          *
     59          * Arguments  : none.
     60          *
     61          * Note(s)    : none
     62          ************************************************************************************************************************
     63          */

   \                                 In section .text, align 2, keep-with-next
     64          CPU_INT08U  App_MB_RdNRegsHook    ( CPU_INT16U  reg_base,
     65                                              CPU_INT16U *prx_data,
     66                                              CPU_INT16U  reg_nbr,
     67                                              CPU_INT16U *perr)
     68          {
     69          #if MB_CFG_APP_HOOKS_EN > 0u
     70              /***********************************************
     71              * 描述： 密码确认，通讯前先将MB_DATA_ACC_PASSWORD写入reg0
     72              */
     73              if ( Ctrl.Para.dat.Password != MB_DATA_ACC_PASSWORD ) {
     74                  *perr = MODBUS_ERR_ILLEGAL_DATA_ADDR;
     75                  return 1;
     76              }
     77              
     78              /***********************************************
     79              * 描述： 非浮点寄存器
     80              */
     81              if (reg_base < MODBUS_CFG_FP_START_IX) { 
     82                  CPU_INT16U *preg        = (CPU_INT16U *)&Ctrl.Para.buf2[0];
     83                  CPU_INT16U  reg         = reg_base + reg_nbr;
     84                  CPU_INT16U  reg_max     = sizeof(Ctrl) / 2;
     85                  /***********************************************
     86                  * 描述： 获取值
     87                  */
     88                  if ( reg < reg_max ) {
     89                      preg    += reg_base;
     90                      
     91                      CPU_SR_ALLOC();
     92                      CPU_CRITICAL_ENTER();
     93                      
     94                      for ( int i = 0; i < reg_nbr; i++,preg++ ) {
     95                          prx_data[i]   = SW_INT16U(*preg);
     96                      }
     97                      CPU_CRITICAL_EXIT();
     98                      *perr = MODBUS_ERR_NONE;
     99                      return TRUE;
    100                  } else {
    101                  }
    102              /***********************************************
    103              * 描述： 浮点寄存器
    104              */
    105              } else {
    106                  CPU_INT16U  *preg       = (CPU_INT16U *)&Ctrl.Sen.Para.buf2[0];
    107                  CPU_INT16U  reg         = reg_base + reg_nbr - MODBUS_CFG_FP_START_IX;
    108                  CPU_INT16U  reg_max     = sizeof(UnionSenPara) / 2;
    109                  /***********************************************
    110                  * 描述： 获取值
    111                  */
    112                  if ( reg < reg_max ) {
    113                      preg    += reg_base - MODBUS_CFG_FP_START_IX;
    114                      CPU_SR_ALLOC();
    115                      CPU_CRITICAL_ENTER();
    116                      
    117                      for ( int i = 0; i < reg_nbr; i++,preg++ ) {
    118                          prx_data[i]   = SW_INT16U(*preg);
    119                      }
    120                      
    121                      CPU_CRITICAL_EXIT();
    122                      *perr = MODBUS_ERR_NONE;
    123                      return TRUE;
    124                  } else {
    125                  }
    126              }
    127              #endif
    128              return 0;
   \                     App_MB_RdNRegsHook: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x4770             BX       LR               ;; return
    129          }
    130          
    131          /*$PAGE*/
    132          /*
    133          ************************************************************************************************************************
    134          *                                             CLEAR ALL APPLICATION HOOKS
    135          *
    136          * Description: Clear ALL application hooks.
    137          *
    138          * Arguments  : none.
    139          *
    140          * Note(s)    : none
    141          ************************************************************************************************************************
    142          */

   \                                 In section .text, align 2, keep-with-next
    143          CPU_INT08U  App_MB_WrNRegsHook    ( CPU_INT16U reg_base,
    144                                              CPU_INT16U *prx_data,
    145                                              CPU_INT16U reg_nbr,
    146                                              CPU_INT16U  *perr)
    147          {
    148          #if MB_CFG_APP_HOOKS_EN > 0u
    149          
    150              /***********************************************
    151              * 描述： 密码确认，通讯前先将MB_DATA_ACC_PASSWORD写入reg0
    152              */
    153              if ( ( Ctrl.Para.dat.Password == MB_DATA_ACC_PASSWORD ) ||
    154                   ( ( reg_base == 0 ) && ( *prx_data == MB_DATA_ACC_PASSWORD ) ) ) {
    155              } else {
    156                  *perr = MODBUS_ERR_ILLEGAL_DATA_ADDR;
    157                  return 1;
    158              }
    159              
    160              /***********************************************
    161              * 描述： 非浮点寄存器
    162              */
    163              if (reg_base < MODBUS_CFG_FP_START_IX) { 
    164                  CPU_INT16U *preg        = (CPU_INT16U *)&Ctrl.Para.buf2[0];
    165                  CPU_INT16U  reg         = reg_base + reg_nbr;
    166                  /***********************************************
    167                  * 描述： 写入值
    168                  */
    169                  if ( reg < sizeof(Ctrl) / 2 ) {
    170                      preg    += reg_base;
    171                      CPU_SR_ALLOC();
    172                      CPU_CRITICAL_ENTER();
    173                      for ( int i = 0; i < reg_nbr; i++,preg++ ) {
    174                          *preg = SW_INT16U(prx_data[i]);
    175                      }
    176                      CPU_CRITICAL_EXIT();
    177                      
    178                      /***********************************************
    179                      * 描述： 写入显示模块校准参数
    180                      */
    181                      CPU_INT16U __packed *pe     = &Ctrl.Para.buf2[127];
    182                      CPU_INT16U __packed *pe2    = &Ctrl.Sen.Para.buf2[127];
    183                      //CPU_INT16U __packed *pe3    = (CPU_INT16U *)&Ctrl.Tab.buf2;
    184                      
    185                      // 传感器模块参数
    186                      if ( ( preg >= Ctrl.Sen.Para.buf2 ) &&
    187                         ( ( preg <= ( pe2 - reg_nbr * 2 ) ) ) ) {
    188                          CPU_INT16U addr = 2 * ( preg - Ctrl.Sen.Para.buf2 );
    189                          //CPU_INT08U *pb  = (CPU_INT08U *)&Ctrl.Sen.Para.buf2 + addr;
    190                          
    191                          //if ( !App_SetParaToSensor(1, 0, NULL, 256) ) {
    192                          if ( !App_SetParaToSensor(1, addr, NULL, addr + reg_nbr<<1) ) {
    193                              *perr = MODBUS_ERR_ILLEGAL_DATA_VAL;
    194                              return TRUE;
    195                          }
    196                      // 测量模块参数
    197                      } else if ( ( preg >= Ctrl.Para.buf2 ) &&
    198                         ( ( preg <= ( pe - reg_nbr * 2 ) ) ) ) {
    199                          CPU_INT16U addr = 2 * ( preg - Ctrl.Para.buf2 );
    200                          //CPU_INT08U *pb  = (CPU_INT08U *)&Ctrl.Para.buf2 + addr;
    201                          //if ( !App_SetParaToSensor(2, 0, NULL, 256) ) {
    202                          if ( !App_SetParaToSensor(2, addr, NULL, addr + reg_nbr<<1) ) {
    203                              *perr = MODBUS_ERR_ILLEGAL_DATA_VAL;
    204                              return TRUE;
    205                          }
    206                      // 容积表
    207                      }// else if ( ( preg > (CPU_INT16U *)&Ctrl.Tab ) &&
    208                      //    ( ( preg <= ( pe3 - reg_nbr * 2 ) ) ) ) {
    209                      //    
    210                      //    CPU_INT16U addr = (preg - (CPU_INT16U *)&Ctrl.Tab)*2;
    211                      //    CPU_INT08U *pb  = (CPU_INT08U *)&Ctrl.Tab + addr;
    212                      //    //addr    += 256;
    213                      //    
    214                      //    if ( !App_SetParaToSensor(2, 256 + addr, NULL, addr + reg_nbr<<1) ) {
    215                      //        *perr = MODBUS_ERR_ILLEGAL_DATA_VAL;
    216                      //        return TRUE;
    217                      //    }
    218                      //}
    219                      
    220                      /***********************************************
    221                      * 描述： 
    222                      */
    223                      *perr = MODBUS_ERR_NONE;
    224                      return TRUE;
    225                  } else {
    226                      //reg_val = 0;
    227                      //*perr = MODBUS_ERR_ILLEGAL_DATA_ADDR;
    228                  }
    229              /***********************************************
    230              * 描述： 浮点寄存器
    231              */
    232              } else {
    233                  CPU_INT16U  *preg       = (CPU_INT16U *)&Ctrl.Sen.Para.buf2[0];
    234                  CPU_INT16U  reg         = reg_base + reg_nbr - MODBUS_CFG_FP_START_IX;
    235                  
    236                  /***********************************************
    237                  * 描述： 获取值
    238                  */
    239                  if ( reg < sizeof(UnionSenPara) / 2 ) {
    240                      preg    += reg_base - MODBUS_CFG_FP_START_IX;
    241                      CPU_SR_ALLOC();
    242                      CPU_CRITICAL_ENTER();
    243                      memcpy((CPU_INT16U *)&preg[reg_base], (CPU_INT16U *)&prx_data[0], reg_nbr);
    244                      CPU_CRITICAL_EXIT();
    245                      *perr = MODBUS_ERR_NONE;
    246                      return TRUE;
    247                  } else {
    248                      //reg_val = 0;
    249                      //*perr = MODBUS_ERR_ILLEGAL_DATA_ADDR;
    250                  }
    251              }
    252          #endif    
    253              return 0;
   \                     App_MB_WrNRegsHook: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x4770             BX       LR               ;; return
    254          }
    255          
    256          /*$PAGE*/
    257          /*
    258          ************************************************************************************************************************
    259          *                                                APPLICATION TICK HOOK
    260          *
    261          * Description: This function is called every tick.
    262          *
    263          * Arguments  : none
    264          *
    265          * Note(s)    : 1) This function is assumed to be called from the Tick ISR.
    266          ************************************************************************************************************************
    267          */
    268          

   \                                 In section .text, align 2, keep-with-next
    269          void  App_MB_TimeTickHook (void)
    270          {
    271          
    272          }
   \                     App_MB_TimeTickHook: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   App_MB_RdNRegsHook
       0   App_MB_SetAllHooks
       0   App_MB_TimeTickHook
       0   App_MB_WrNRegsHook


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  App_MB_RdNRegsHook
       2  App_MB_SetAllHooks
       2  App_MB_TimeTickHook
       4  App_MB_WrNRegsHook

 
 12 bytes in section .text
 
 12 bytes of CODE memory

Errors: none
Warnings: none
