###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       15/Jul/2018  10:36:14
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  F:\iar\NC210\NC210-200处理板\source\task\app_dtu_send.c
#    Command line =  
#        F:\iar\NC210\NC210-200处理板\source\task\app_dtu_send.c -D
#        USE_STDPERIPH_DRIVER -D APP_RELEASE -lCN
#        F:\iar\NC210\NC210-200处理板\project\app_release\List -o
#        F:\iar\NC210\NC210-200处理板\project\app_release\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M3 -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Full.h" -I
#        F:\iar\NC210\NC210-200处理板\project\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\config\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\task\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\user\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\OSAL\OS\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\OSAL\Ports\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\driver\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-LIB\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-CPU\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uCOS-III\Source\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\IAR\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\ST\STM32\inc\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\OS\uCOS-III\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-MB\OS\uCOS-III\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-MB\Ports\STM32\STM32F103\IAR\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-MB\Source\
#        -Ol --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC210\NC210-200处理板\project\app_release\List\app_dtu_send.lst
#    Object file  =  
#        F:\iar\NC210\NC210-200处理板\project\app_release\Obj\app_dtu_send.o
#
###############################################################################

F:\iar\NC210\NC210-200处理板\source\task\app_dtu_send.c
      1          /**************************************************************
      2          * Description  : 处理板和DTU通讯，数据发送部分
      3          * Author       : 2018/5/23 星期三, by redmorningcn
      4          */
      5          
      6          /*******************************************************************************
      7          * INCLUDES
      8          */
      9          #include    <includes.h>
     10          #include    <app_com_type.h>
     11          #include    <app_dtu_send.h>
     12          
     13          
     14          extern  void        app_ReadOneRecord(stcFlshRec *pRec,u32 num);
     15          
     16          /**************************************************************
     17          * Description  : 和DTU通讯，发送部分
     18          * Author       : 2018/5/23 星期三, by redmorningcn
     19          */

   \                                 In section .text, align 4, keep-with-next
     20          void    app_dtu_send(StrCOMCtrl *Com)
     21          {
   \                     app_dtu_send: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
     22              u8  conntype;               //数据通许、参数设置、IAP
     23              u8  enablesend = 0;         //数据发送标识
   \   00000004   0x2000             MOVS     R0,#+0
     24              u8  replylen;
     25              u8  iapcode;
     26              u32 recordnum;
     27              //地址设置
     28              Com->ConnCtrl.sCsnc.sourceaddr   = LKJ_MAINBOARD_ADDR;
   \   00000006   0x2184             MOVS     R1,#+132
   \   00000008   0xF884 0x142E      STRB     R1,[R4, #+1070]
     29              Com->ConnCtrl.sCsnc.destaddr     = DTU_ADDR;
   \   0000000C   0x21CA             MOVS     R1,#+202
   \   0000000E   0xF884 0x142F      STRB     R1,[R4, #+1071]
     30              Com->ConnCtrl.sCsnc.framcode     = Com->RxCtrl.sCsnc.framcode;
   \   00000012   0xF894 0x1409      LDRB     R1,[R4, #+1033]
   \   00000016   0xF884 0x1431      STRB     R1,[R4, #+1073]
     31              Com->ConnCtrl.sCsnc.framnum      = Com->RxCtrl.sCsnc.framnum;     //将接收到数据发送
   \   0000001A   0xF894 0x1408      LDRB     R1,[R4, #+1032]
   \   0000001E   0xF884 0x1430      STRB     R1,[R4, #+1072]
     32              
     33              conntype = Com->ConnCtrl.ConnType;
   \   00000022   0xF8D4 0x141E      LDR      R1,[R4, #+1054]
   \   00000026   0xF3C1 0x1142      UBFX     R1,R1,#+5,#+3
     34              
     35              switch(conntype){
   \   0000002A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000002C   0x2900             CMP      R1,#+0
   \   0000002E   0xD008             BEQ.N    ??app_dtu_send_0
   \   00000030   0x2901             CMP      R1,#+1
   \   00000032   0xD052             BEQ.N    ??app_dtu_send_1
   \   00000034   0x2902             CMP      R1,#+2
   \   00000036   0xF000 0x8088      BEQ.W    ??app_dtu_send_2
   \   0000003A   0x2904             CMP      R1,#+4
   \   0000003C   0xF000 0x80AE      BEQ.W    ??app_dtu_send_3
   \   00000040   0xE0C0             B.N      ??app_dtu_send_4
     36                  /**************************************************************
     37                  * Description  : 数据记录发送
     38                  * Author       : 2018/5/23 星期三, by redmorningcn
     39                  */
     40              case RECORD_SEND_COMM:     
     41                  
     42                  //debug2018 
     43                  if(Ctrl.sRecNumMgr.Current == 0)
   \                     ??app_dtu_send_0: (+1)
   \   00000042   0x487A             LDR.N    R0,??app_dtu_send_5
   \   00000044   0x6900             LDR      R0,[R0, #+16]
   \   00000046   0x2800             CMP      R0,#+0
   \   00000048   0xF000 0x80EF      BEQ.W    ??app_dtu_send_6
     44                      return;
     45                  
     46                  
     47                      
     48                  //取数据记录号
     49                  if(Ctrl.sRecNumMgr.Current <= Ctrl.sRecNumMgr.GrsRead )  {
   \                     ??app_dtu_send_7: (+1)
   \   0000004C   0x4877             LDR.N    R0,??app_dtu_send_5
   \   0000004E   0x6980             LDR      R0,[R0, #+24]
   \   00000050   0x4976             LDR.N    R1,??app_dtu_send_5
   \   00000052   0x6909             LDR      R1,[R1, #+16]
   \   00000054   0x4288             CMP      R0,R1
   \   00000056   0xD30B             BCC.N    ??app_dtu_send_8
     50                      Ctrl.sRecNumMgr.GrsRead = 0;
   \   00000058   0x2000             MOVS     R0,#+0
   \   0000005A   0x4974             LDR.N    R1,??app_dtu_send_5
   \   0000005C   0x6188             STR      R0,[R1, #+24]
     51                      if(Ctrl.sRecNumMgr.Current)
   \   0000005E   0x4873             LDR.N    R0,??app_dtu_send_5
   \   00000060   0x6900             LDR      R0,[R0, #+16]
   \   00000062   0x2800             CMP      R0,#+0
   \   00000064   0xD004             BEQ.N    ??app_dtu_send_8
     52                          Ctrl.sRecNumMgr.GrsRead = Ctrl.sRecNumMgr.Current - 1;        //最后有效记录赋值     
   \   00000066   0x4871             LDR.N    R0,??app_dtu_send_5
   \   00000068   0x6900             LDR      R0,[R0, #+16]
   \   0000006A   0x1E40             SUBS     R0,R0,#+1
   \   0000006C   0x496F             LDR.N    R1,??app_dtu_send_5
   \   0000006E   0x6188             STR      R0,[R1, #+24]
     53                  }
     54                  
     55                  //20180712 如果是读取指定数据，则不进行数据读取，直接读指定数据
     56                  //读取数据记录
     57                  recordnum = Ctrl.sRecNumMgr.GrsRead;
   \                     ??app_dtu_send_8: (+1)
   \   00000070   0x486E             LDR.N    R0,??app_dtu_send_5
   \   00000072   0x6981             LDR      R1,[R0, #+24]
     58                  if(Ctrl.sRecNumMgr.PointNum ){
   \   00000074   0x486D             LDR.N    R0,??app_dtu_send_5
   \   00000076   0x69C0             LDR      R0,[R0, #+28]
   \   00000078   0x2800             CMP      R0,#+0
   \   0000007A   0xD004             BEQ.N    ??app_dtu_send_9
     59                      recordnum = Ctrl.sRecNumMgr.PointNum;
   \   0000007C   0x486B             LDR.N    R0,??app_dtu_send_5
   \   0000007E   0x69C1             LDR      R1,[R0, #+28]
     60                      Ctrl.sRecNumMgr.PointNum = 0;
   \   00000080   0x2000             MOVS     R0,#+0
   \   00000082   0x4A6A             LDR.N    R2,??app_dtu_send_5
   \   00000084   0x61D0             STR      R0,[R2, #+28]
     61                  }
     62                  app_ReadOneRecord((stcFlshRec *)&Com->Wr,recordnum);     
   \                     ??app_dtu_send_9: (+1)
   \   00000086   0xF514 0x7000      ADDS     R0,R4,#+512
   \   0000008A   0x.... 0x....      BL       app_ReadOneRecord
     63                  
     64                  //数据记录按csnc协议打包 DataPackage_CSNC(strCsnrProtocolPara * sprotocolpara);
     65                  Com->ConnCtrl.sCsnc.framcode     = SET_FRAME_CODE;                   //新数据格式
   \   0000008E   0x2002             MOVS     R0,#+2
   \   00000090   0xF884 0x0431      STRB     R0,[R4, #+1073]
     66                  Com->ConnCtrl.sCsnc.framnum      = Com->ConnCtrl.SendRecordNum;     //发送记录号
   \   00000094   0xF894 0x042A      LDRB     R0,[R4, #+1066]
   \   00000098   0xF884 0x0430      STRB     R0,[R4, #+1072]
     67                  Com->ConnCtrl.RecordSendFlg      = 1;        
   \   0000009C   0xF8D4 0x041E      LDR      R0,[R4, #+1054]
   \   000000A0   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   000000A4   0xF8C4 0x041E      STR      R0,[R4, #+1054]
     68          
     69                  Com->ConnCtrl.sCsnc.datalen      = sizeof(stcFlshRec);
   \   000000A8   0x2080             MOVS     R0,#+128
   \   000000AA   0xF884 0x043A      STRB     R0,[R4, #+1082]
     70                  Com->ConnCtrl.sCsnc.databuf      = (u8 *)&Com->Wr;                  //数据内容
   \   000000AE   0xF514 0x7000      ADDS     R0,R4,#+512
   \   000000B2   0xF8C4 0x0432      STR      R0,[R4, #+1074]
     71                  Com->ConnCtrl.sCsnc.rxtxbuf      = Com->pch->TxBuf;                 //打包后的数据直接存入发送缓存
   \   000000B6   0xF8D4 0x0400      LDR      R0,[R4, #+1024]
   \   000000BA   0xF510 0x7011      ADDS     R0,R0,#+580
   \   000000BE   0xF8C4 0x0436      STR      R0,[R4, #+1078]
     72                  
     73                  DataPackage_CSNC((strCsnrProtocolPara *)&Com->ConnCtrl.sCsnc);       //数据打包
   \   000000C2   0xF204 0x402E      ADDW     R0,R4,#+1070
   \   000000C6   0x.... 0x....      BL       DataPackage_CSNC
     74                  Com->pch->TxBufByteCtr = Com->ConnCtrl.sCsnc.rxtxlen;               //数据长度准备
   \   000000CA   0xF894 0x043B      LDRB     R0,[R4, #+1083]
   \   000000CE   0xF8D4 0x1400      LDR      R1,[R4, #+1024]
   \   000000D2   0xF8A1 0x023C      STRH     R0,[R1, #+572]
     75                  
     76                  enablesend = 1;        //数据发送标识1
   \   000000D6   0x2001             MOVS     R0,#+1
     77                  break;  
   \   000000D8   0xE07A             B.N      ??app_dtu_send_10
     78                  
     79                  /**************************************************************
     80                  * Description  : 参数读写（发送数据应答信号，应答接收到的内容，buf[8]状态位）
     81                  * Author       : 2018/5/23 星期三, by redmorningcn
     82                  */
     83              case SET_COMM:
     84                  //数据记录按csnc协议打包 DataPackage_CSNC(strCsnrProtocolPara * sprotocolpara);
     85                  switch(Com->Rd.dtu.code){
   \                     ??app_dtu_send_1: (+1)
   \   000000DA   0x6820             LDR      R0,[R4, #+0]
   \   000000DC   0x4954             LDR.N    R1,??app_dtu_send_5+0x4  ;; 0x800001
   \   000000DE   0x4288             CMP      R0,R1
   \   000000E0   0xD00B             BEQ.N    ??app_dtu_send_11
   \   000000E2   0x4954             LDR.N    R1,??app_dtu_send_5+0x8  ;; 0x1000001
   \   000000E4   0x4288             CMP      R0,R1
   \   000000E6   0xD003             BEQ.N    ??app_dtu_send_12
   \   000000E8   0x4953             LDR.N    R1,??app_dtu_send_5+0xC  ;; 0x2000001
   \   000000EA   0x4288             CMP      R0,R1
   \   000000EC   0xD005             BEQ.N    ??app_dtu_send_11
   \   000000EE   0xE007             B.N      ??app_dtu_send_13
     86                  case CMD_RECORD_GET:
     87                      Com->ConnCtrl.sCsnc.framcode = SET_FRAME_CODE;                   //新数据格式
   \                     ??app_dtu_send_12: (+1)
   \   000000F0   0x2002             MOVS     R0,#+2
   \   000000F2   0xF884 0x0431      STRB     R0,[R4, #+1073]
     88                      replylen                        = sizeof(stcFlshRec);
   \   000000F6   0x2080             MOVS     R0,#+128
     89                      break;
   \   000000F8   0xE003             B.N      ??app_dtu_send_14
     90                  case CMD_PARA_GET:
     91                  case CMD_DETECT_GET:
     92                      replylen    =       (u8)Com->Rd.dtu.paralen 
     93                                      +   sizeof(Com->Rd.dtu.paralen ) 
     94                                      +   sizeof(Com->Rd.dtu.paraaddr )
     95                                      +   sizeof(Com->Rd.dtu.code );
   \                     ??app_dtu_send_11: (+1)
   \   000000FA   0x88E0             LDRH     R0,[R4, #+6]
   \   000000FC   0x3008             ADDS     R0,R0,#+8
     96                      break;
   \   000000FE   0xE000             B.N      ??app_dtu_send_14
     97                  default:
     98                      replylen    =   SET_REPLY_DATA_LEN;
   \                     ??app_dtu_send_13: (+1)
   \   00000100   0x2009             MOVS     R0,#+9
     99                      break;
    100                  }
    101                      
    102                  Com->ConnCtrl.sCsnc.sourceaddr   = Com->RxCtrl.sCsnc.destaddr;
   \                     ??app_dtu_send_14: (+1)
   \   00000102   0xF894 0x1407      LDRB     R1,[R4, #+1031]
   \   00000106   0xF884 0x142E      STRB     R1,[R4, #+1070]
    103                  Com->ConnCtrl.sCsnc.destaddr     = Com->RxCtrl.sCsnc.sourceaddr;
   \   0000010A   0xF894 0x1406      LDRB     R1,[R4, #+1030]
   \   0000010E   0xF884 0x142F      STRB     R1,[R4, #+1071]
    104                  Com->ConnCtrl.sCsnc.datalen      = replylen;                         //应答长度
   \   00000112   0xF884 0x043A      STRB     R0,[R4, #+1082]
    105          
    106                  Com->ConnCtrl.sCsnc.databuf      = (u8 *)&Com->Rd;                //数据内容
   \   00000116   0xF8C4 0x4432      STR      R4,[R4, #+1074]
    107                  Com->ConnCtrl.sCsnc.rxtxbuf      = Com->pch->TxBuf;               //打包后的数据直接存入发送缓存
   \   0000011A   0xF8D4 0x0400      LDR      R0,[R4, #+1024]
   \   0000011E   0xF510 0x7011      ADDS     R0,R0,#+580
   \   00000122   0xF8C4 0x0436      STR      R0,[R4, #+1078]
    108                  
    109                  DataPackage_CSNC((strCsnrProtocolPara *)&Com->ConnCtrl.sCsnc);       //数据打包
   \   00000126   0xF204 0x402E      ADDW     R0,R4,#+1070
   \   0000012A   0x.... 0x....      BL       DataPackage_CSNC
    110                  Com->pch->TxBufByteCtr = Com->ConnCtrl.sCsnc.rxtxlen;             //数据长度准备
   \   0000012E   0xF894 0x043B      LDRB     R0,[R4, #+1083]
   \   00000132   0xF8D4 0x1400      LDR      R1,[R4, #+1024]
   \   00000136   0xF8A1 0x023C      STRH     R0,[R1, #+572]
    111                  
    112                  enablesend = 1;                                                         //数据发送标识1
   \   0000013A   0x2001             MOVS     R0,#+1
    113                  Com->ConnCtrl.ConnType = RECORD_SEND_COMM;                           //应答完后，更改通讯类型
   \   0000013C   0xF8D4 0x141E      LDR      R1,[R4, #+1054]
   \   00000140   0xF031 0x01E0      BICS     R1,R1,#0xE0
   \   00000144   0xF8C4 0x141E      STR      R1,[R4, #+1054]
    114                  break;
   \   00000148   0xE042             B.N      ??app_dtu_send_10
    115                  
    116                  /**************************************************************
    117                  * Description  : 程序升级。应答升级的内容
    118                  * Author       : 2018/5/23 星期三, by redmorningcn
    119                  */
    120              case IAP_COMM:
    121                  iapcode = Com->Rd.dtu.iap.code;  //IAP指令位
   \                     ??app_dtu_send_2: (+1)
   \   0000014A   0x7825             LDRB     R5,[R4, #+0]
    122                  
    123                  switch(iapcode)
   \   0000014C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000014E   0x2D02             CMP      R5,#+2
   \   00000150   0xD103             BNE.N    ??app_dtu_send_15
    124                  {
    125                  case IAP_DATA:                      //IAP数据传输应答
    126                      Com->ConnCtrl.sCsnc.datalen  = IAP_REPLY_DATA_LEN;
   \   00000152   0x2004             MOVS     R0,#+4
   \   00000154   0xF884 0x043A      STRB     R0,[R4, #+1082]
    127                      break;
   \   00000158   0xE003             B.N      ??app_dtu_send_16
    128                  case IAP_START:                     //IAP启动及结束应答
    129                  case IAP_END:
    130                  default:
    131                      Com->ConnCtrl.sCsnc.datalen  = Com->RxCtrl.sCsnc.datalen;
   \                     ??app_dtu_send_15: (+1)
   \   0000015A   0xF894 0x0412      LDRB     R0,[R4, #+1042]
   \   0000015E   0xF884 0x043A      STRB     R0,[R4, #+1082]
    132                      break;
    133                  }
    134                  
    135                  Com->ConnCtrl.sCsnc.databuf      = (u8 *)&Com->Rd;                //数据内容
   \                     ??app_dtu_send_16: (+1)
   \   00000162   0xF8C4 0x4432      STR      R4,[R4, #+1074]
    136                  Com->ConnCtrl.sCsnc.rxtxbuf      = Com->pch->TxBuf;               //打包后的数据直接存入发送缓存
   \   00000166   0xF8D4 0x0400      LDR      R0,[R4, #+1024]
   \   0000016A   0xF510 0x7011      ADDS     R0,R0,#+580
   \   0000016E   0xF8C4 0x0436      STR      R0,[R4, #+1078]
    137                  
    138                  DataPackage_CSNC((strCsnrProtocolPara *)&Com->ConnCtrl.sCsnc);       //数据打包
   \   00000172   0xF204 0x402E      ADDW     R0,R4,#+1070
   \   00000176   0x.... 0x....      BL       DataPackage_CSNC
    139                  Com->pch->TxBufByteCtr = Com->ConnCtrl.sCsnc.rxtxlen;             //数据长度准备
   \   0000017A   0xF894 0x043B      LDRB     R0,[R4, #+1083]
   \   0000017E   0xF8D4 0x1400      LDR      R1,[R4, #+1024]
   \   00000182   0xF8A1 0x023C      STRH     R0,[R1, #+572]
    140                  enablesend = 1;                     //数据发送标识1
   \   00000186   0x2001             MOVS     R0,#+1
    141                  if(iapcode == IAP_END)
   \   00000188   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000018A   0x2D03             CMP      R5,#+3
   \   0000018C   0xD105             BNE.N    ??app_dtu_send_17
    142                      Com->ConnCtrl.ConnType = RECORD_SEND_COMM;                       //默认状态位数据发送
   \   0000018E   0xF8D4 0x141E      LDR      R1,[R4, #+1054]
   \   00000192   0xF031 0x01E0      BICS     R1,R1,#0xE0
   \   00000196   0xF8C4 0x141E      STR      R1,[R4, #+1054]
    143                  
    144                  break;
   \                     ??app_dtu_send_17: (+1)
   \   0000019A   0xE019             B.N      ??app_dtu_send_10
    145                  
    146              case GPS_COMM:                          //定位模块
    147          //        //debug2018
    148          //        return;
    149                  /**************************************************************
    150                  * Description  : 查询模块的信号强度
    151                  * Author       : 2018/6/4 星期一, by redmorningcn
    152                  */
    153                  strcpy((char *)Com->pch->TxBuf,(const char *)GPS_RSSI_ASK);
   \                     ??app_dtu_send_3: (+1)
   \   0000019C   0x4927             LDR.N    R1,??app_dtu_send_5+0x10
   \   0000019E   0xF8D4 0x0400      LDR      R0,[R4, #+1024]
   \   000001A2   0xF510 0x7011      ADDS     R0,R0,#+580
   \   000001A6   0x.... 0x....      BL       strcpy
    154                  Com->pch->TxBufByteCtr = strlen(GPS_RSSI_ASK);
   \   000001AA   0x2007             MOVS     R0,#+7
   \   000001AC   0xF8D4 0x1400      LDR      R1,[R4, #+1024]
   \   000001B0   0xF8A1 0x023C      STRH     R0,[R1, #+572]
    155                  
    156                  Com->ConnCtrl.ConnType = RECORD_SEND_COMM;                           //默认状态位数据发送
   \   000001B4   0xF8D4 0x041E      LDR      R0,[R4, #+1054]
   \   000001B8   0xF030 0x00E0      BICS     R0,R0,#0xE0
   \   000001BC   0xF8C4 0x041E      STR      R0,[R4, #+1054]
    157                  enablesend = 1;                     //数据发送标识1
   \   000001C0   0x2001             MOVS     R0,#+1
    158                  break;
   \   000001C2   0xE005             B.N      ??app_dtu_send_10
    159                  
    160              default:
    161                  Com->ConnCtrl.ConnType = RECORD_SEND_COMM;                           //默认状态位数据发送
   \                     ??app_dtu_send_4: (+1)
   \   000001C4   0xF8D4 0x141E      LDR      R1,[R4, #+1054]
   \   000001C8   0xF031 0x01E0      BICS     R1,R1,#0xE0
   \   000001CC   0xF8C4 0x141E      STR      R1,[R4, #+1054]
    162                  break;
    163              }
    164              
    165              if( enablesend == 1 )                   //有数据发送
   \                     ??app_dtu_send_10: (+1)
   \   000001D0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001D2   0x2801             CMP      R0,#+1
   \   000001D4   0xD129             BNE.N    ??app_dtu_send_18
    166              {
    167                  //数据发送状态准备
    168                  if(Com->pch->TxBufByteCtr == 0)                                      //如果数据异常，发送20字节
   \   000001D6   0xF8D4 0x0400      LDR      R0,[R4, #+1024]
   \   000001DA   0xF8B0 0x023C      LDRH     R0,[R0, #+572]
   \   000001DE   0x2800             CMP      R0,#+0
   \   000001E0   0xD104             BNE.N    ??app_dtu_send_19
    169                      Com->pch->TxBufByteCtr = 20;
   \   000001E2   0x2014             MOVS     R0,#+20
   \   000001E4   0xF8D4 0x1400      LDR      R1,[R4, #+1024]
   \   000001E8   0xF8A1 0x023C      STRH     R0,[R1, #+572]
    170                  
    171                  Com->ConnCtrl.protocol   = CSNC_PROTOCOL;    
   \                     ??app_dtu_send_19: (+1)
   \   000001EC   0x2001             MOVS     R0,#+1
   \   000001EE   0xF8D4 0x141E      LDR      R1,[R4, #+1054]
   \   000001F2   0xF360 0x2109      BFI      R1,R0,#+8,#+2
   \   000001F6   0xF8C4 0x141E      STR      R1,[R4, #+1054]
    172                  Com->ConnCtrl.RecvEndFlg = 0;                                        //如需要在规定时间内接收到应答是，协调处理。                                         
   \   000001FA   0xF8D4 0x041E      LDR      R0,[R4, #+1054]
   \   000001FE   0xF030 0x0002      BICS     R0,R0,#0x2
   \   00000202   0xF8C4 0x041E      STR      R0,[R4, #+1054]
    173                  Com->RxCtrl.RecvFlg      = 0;
   \   00000206   0xF894 0x0419      LDRB     R0,[R4, #+1049]
   \   0000020A   0xF010 0x00FE      ANDS     R0,R0,#0xFE
   \   0000020E   0xF884 0x0419      STRB     R0,[R4, #+1049]
    174                  //Com->ConnCtrl.sCsnc
    175                  
    176                  //数据发送
    177                  NMB_Tx(Com->pch,Com->pch->TxBuf,Com->pch->TxBufByteCtr);
   \   00000212   0xF8D4 0x0400      LDR      R0,[R4, #+1024]
   \   00000216   0xF8B0 0x223C      LDRH     R2,[R0, #+572]
   \   0000021A   0xF8D4 0x0400      LDR      R0,[R4, #+1024]
   \   0000021E   0xF510 0x7111      ADDS     R1,R0,#+580
   \   00000222   0xF8D4 0x0400      LDR      R0,[R4, #+1024]
   \   00000226   0x.... 0x....      BL       NMB_Tx
    178              }
    179          }
   \                     ??app_dtu_send_18: (+1)
   \                     ??app_dtu_send_6: (+1)
   \   0000022A   0xBD31             POP      {R0,R4,R5,PC}    ;; return
   \                     ??app_dtu_send_5:
   \   0000022C   0x........         DC32     Ctrl
   \   00000230   0x00800001         DC32     0x800001
   \   00000234   0x01000001         DC32     0x1000001
   \   00000238   0x02000001         DC32     0x2000001
   \   0000023C   0x........         DC32     ?_0

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x41 0x54          DC8 "AT*CSQ?"
   \              0x2A 0x43    
   \              0x53 0x51    
   \              0x3F 0x00    
    180          
    181          
    182          
    183          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   app_dtu_send
        16   -> DataPackage_CSNC
        16   -> NMB_Tx
        16   -> app_ReadOneRecord
        16   -> strcpy


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       8  ?_0
     576  app_dtu_send

 
   8 bytes in section .rodata
 576 bytes in section .text
 
 576 bytes of CODE  memory
   8 bytes of CONST memory

Errors: none
Warnings: none
