###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       15/Jul/2018  10:36:15
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  F:\iar\NC210\NC210-200处理板\source\task\app_task_com.c
#    Command line =  
#        F:\iar\NC210\NC210-200处理板\source\task\app_task_com.c -D
#        USE_STDPERIPH_DRIVER -D APP_RELEASE -lCN
#        F:\iar\NC210\NC210-200处理板\project\app_release\List -o
#        F:\iar\NC210\NC210-200处理板\project\app_release\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M3 -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Full.h" -I
#        F:\iar\NC210\NC210-200处理板\project\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\config\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\task\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\user\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\OSAL\OS\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\OSAL\Ports\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\driver\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-LIB\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-CPU\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uCOS-III\Source\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\IAR\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\ST\STM32\inc\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\OS\uCOS-III\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-MB\OS\uCOS-III\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-MB\Ports\STM32\STM32F103\IAR\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-MB\Source\
#        -Ol --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC210\NC210-200处理板\project\app_release\List\app_task_com.lst
#    Object file  =  
#        F:\iar\NC210\NC210-200处理板\project\app_release\Obj\app_task_com.o
#
###############################################################################

F:\iar\NC210\NC210-200处理板\source\task\app_task_com.c
      1          /*******************************************************************************
      2          * Description  : 串口通讯任务
      3          * Author       : 2018/5/18 星期五, by redmorningcn
      4          */
      5          
      6          /*******************************************************************************
      7          * INCLUDES
      8          */
      9          #include <includes.h>
     10          #include <app_dtu_send.h>
     11          
     12          
     13          #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
     14          const  CPU_CHAR  *app_task_comm__c = "$Id: $";
     15          #endif
     16          
     17          #define APP_TASK_COMM_EN     DEF_ENABLED
     18          #if APP_TASK_COMM_EN == DEF_ENABLED
     19          /*******************************************************************************
     20          * CONSTANTS
     21          */
     22          
     23          /*******************************************************************************
     24          * MACROS
     25          */
     26          #define CYCLE_TIME_TICKS            (OS_TICKS_PER_SEC * 1)
     27          
     28          /*******************************************************************************
     29          * TYPEDEFS
     30          */
     31          
     32          /*******************************************************************************
     33          * LOCAL VARIABLES
     34          */
     35          
     36          /*******************************************************************************
     37          * GLOBAL VARIABLES
     38          */
     39          /***********************************************
     40          * 描述： 任务控制块（TCB）
     41          */

   \                                 In section .bss, align 4
     42          static  OS_TCB      AppTaskCommTCB;
   \                     AppTaskCommTCB:
   \   00000000                      DS8 160
     43          
     44          /***********************************************
     45          * 描述： 任务堆栈（STACKS）
     46          */

   \                                 In section .bss, align 4
     47          static  CPU_STK     AppTaskCommStk[ APP_TASK_COMM_STK_SIZE ];
   \                     AppTaskCommStk:
   \   00000000                      DS8 2048
     48          

   \                                 In section .bss, align 4
     49          OS_Q                COM_RxQ;
   \                     COM_RxQ:
   \   00000000                      DS8 48
     50          
     51          /*******************************************************************************
     52          * LOCAL FUNCTIONS
     53          */
     54          static  void  AppTaskComm (void *p_arg);
     55          void APP_CommInit(void);
     56          
     57          /*******************************************************************************
     58          * GLOBAL FUNCTIONS
     59          */
     60          
     61          /*******************************************************************************
     62          * EXTERN VARIABLES
     63          */
     64          
     65          /*******************************************************************************
     66          * EXTERN FUNCTIONS
     67          */
     68          
     69          /*******************************************************************************/
     70          /**************************************************************
     71          * Description  : App_CommIdle(void)串口的200ms周期处理程序，
     72          * Author       : 2018/5/18 星期五, by redmorningcn
     73          */

   \                                 In section .text, align 2, keep-with-next
     74          void    App_CommIdle(void)
     75          {
   \                     App_CommIdle: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     76              OS_ERR      err;
     77          
     78              /**************************************************************
     79              * Description  : 连接状态判断
     80              * Author       : 2018/5/18 星期五, by redmorningcn
     81              */
     82              if( TaxCom->ConnectTimeOut){
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF8B0 0x0404      LDRH     R0,[R0, #+1028]
   \   0000000C   0x0480             LSLS     R0,R0,#+18       ;; ZeroExtS R0,R0,#+18,#+18
   \   0000000E   0x0C80             LSRS     R0,R0,#+18
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD026             BEQ.N    ??App_CommIdle_0
     83                  TaxCom->ConnectTimeOut--;
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0xF8B0 0x0404      LDRH     R0,[R0, #+1028]
   \   0000001E   0xF410 0x4140      ANDS     R1,R0,#0xC000
   \   00000022   0x0480             LSLS     R0,R0,#+18       ;; ZeroExtS R0,R0,#+18,#+18
   \   00000024   0x0C80             LSRS     R0,R0,#+18
   \   00000026   0x1E40             SUBS     R0,R0,#+1
   \   00000028   0x0480             LSLS     R0,R0,#+18       ;; ZeroExtS R0,R0,#+18,#+18
   \   0000002A   0x0C80             LSRS     R0,R0,#+18
   \   0000002C   0x4308             ORRS     R0,R0,R1
   \   0000002E   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000032   0x6809             LDR      R1,[R1, #+0]
   \   00000034   0xF8A1 0x0404      STRH     R0,[R1, #+1028]
     84                  if(TaxCom->ConnectTimeOut == 0)         //串口超时
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable3
   \   0000003C   0x6800             LDR      R0,[R0, #+0]
   \   0000003E   0xF8B0 0x0404      LDRH     R0,[R0, #+1028]
   \   00000042   0x0480             LSLS     R0,R0,#+18       ;; ZeroExtS R0,R0,#+18,#+18
   \   00000044   0x0C80             LSRS     R0,R0,#+18
   \   00000046   0x2800             CMP      R0,#+0
   \   00000048   0xD10B             BNE.N    ??App_CommIdle_0
     85                  {
     86                      TaxCom->ConnectFlag   = 0;          //连接失效
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable3
   \   0000004E   0x6800             LDR      R0,[R0, #+0]
   \   00000050   0xF8B0 0x0404      LDRH     R0,[R0, #+1028]
   \   00000054   0x0440             LSLS     R0,R0,#+17       ;; ZeroExtS R0,R0,#+17,#+17
   \   00000056   0x0C40             LSRS     R0,R0,#+17
   \   00000058   0x.... 0x....      LDR.W    R1,??DataTable3
   \   0000005C   0x6809             LDR      R1,[R1, #+0]
   \   0000005E   0xF8A1 0x0404      STRH     R0,[R1, #+1028]
     87                  }
     88              }
     89              
     90              if( MtrCom->ConnectTimeOut){
   \                     ??App_CommIdle_0: (+1)
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable3_1
   \   00000066   0x6800             LDR      R0,[R0, #+0]
   \   00000068   0xF8B0 0x0404      LDRH     R0,[R0, #+1028]
   \   0000006C   0x0480             LSLS     R0,R0,#+18       ;; ZeroExtS R0,R0,#+18,#+18
   \   0000006E   0x0C80             LSRS     R0,R0,#+18
   \   00000070   0x2800             CMP      R0,#+0
   \   00000072   0xD026             BEQ.N    ??App_CommIdle_1
     91                  MtrCom->ConnectTimeOut--;
   \   00000074   0x.... 0x....      LDR.W    R0,??DataTable3_1
   \   00000078   0x6800             LDR      R0,[R0, #+0]
   \   0000007A   0xF8B0 0x0404      LDRH     R0,[R0, #+1028]
   \   0000007E   0xF410 0x4140      ANDS     R1,R0,#0xC000
   \   00000082   0x0480             LSLS     R0,R0,#+18       ;; ZeroExtS R0,R0,#+18,#+18
   \   00000084   0x0C80             LSRS     R0,R0,#+18
   \   00000086   0x1E40             SUBS     R0,R0,#+1
   \   00000088   0x0480             LSLS     R0,R0,#+18       ;; ZeroExtS R0,R0,#+18,#+18
   \   0000008A   0x0C80             LSRS     R0,R0,#+18
   \   0000008C   0x4308             ORRS     R0,R0,R1
   \   0000008E   0x.... 0x....      LDR.W    R1,??DataTable3_1
   \   00000092   0x6809             LDR      R1,[R1, #+0]
   \   00000094   0xF8A1 0x0404      STRH     R0,[R1, #+1028]
     92                  if(MtrCom->ConnectTimeOut == 0)         //串口超时
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable3_1
   \   0000009C   0x6800             LDR      R0,[R0, #+0]
   \   0000009E   0xF8B0 0x0404      LDRH     R0,[R0, #+1028]
   \   000000A2   0x0480             LSLS     R0,R0,#+18       ;; ZeroExtS R0,R0,#+18,#+18
   \   000000A4   0x0C80             LSRS     R0,R0,#+18
   \   000000A6   0x2800             CMP      R0,#+0
   \   000000A8   0xD10B             BNE.N    ??App_CommIdle_1
     93                  {
     94                      MtrCom->ConnectFlag   = 0;          //连接失效
   \   000000AA   0x.... 0x....      LDR.W    R0,??DataTable3_1
   \   000000AE   0x6800             LDR      R0,[R0, #+0]
   \   000000B0   0xF8B0 0x0404      LDRH     R0,[R0, #+1028]
   \   000000B4   0x0440             LSLS     R0,R0,#+17       ;; ZeroExtS R0,R0,#+17,#+17
   \   000000B6   0x0C40             LSRS     R0,R0,#+17
   \   000000B8   0x.... 0x....      LDR.W    R1,??DataTable3_1
   \   000000BC   0x6809             LDR      R1,[R1, #+0]
   \   000000BE   0xF8A1 0x0404      STRH     R0,[R1, #+1028]
     95                  }
     96              }
     97              
     98              if( DtuCom->ConnectTimeOut){
   \                     ??App_CommIdle_1: (+1)
   \   000000C2   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   000000C6   0x6800             LDR      R0,[R0, #+0]
   \   000000C8   0xF8B0 0x0404      LDRH     R0,[R0, #+1028]
   \   000000CC   0x0480             LSLS     R0,R0,#+18       ;; ZeroExtS R0,R0,#+18,#+18
   \   000000CE   0x0C80             LSRS     R0,R0,#+18
   \   000000D0   0x2800             CMP      R0,#+0
   \   000000D2   0xD04D             BEQ.N    ??App_CommIdle_2
     99                  DtuCom->ConnectTimeOut--;
   \   000000D4   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   000000D8   0x6800             LDR      R0,[R0, #+0]
   \   000000DA   0xF8B0 0x0404      LDRH     R0,[R0, #+1028]
   \   000000DE   0xF410 0x4140      ANDS     R1,R0,#0xC000
   \   000000E2   0x0480             LSLS     R0,R0,#+18       ;; ZeroExtS R0,R0,#+18,#+18
   \   000000E4   0x0C80             LSRS     R0,R0,#+18
   \   000000E6   0x1E40             SUBS     R0,R0,#+1
   \   000000E8   0x0480             LSLS     R0,R0,#+18       ;; ZeroExtS R0,R0,#+18,#+18
   \   000000EA   0x0C80             LSRS     R0,R0,#+18
   \   000000EC   0x4308             ORRS     R0,R0,R1
   \   000000EE   0x.... 0x....      LDR.W    R1,??DataTable3_2
   \   000000F2   0x6809             LDR      R1,[R1, #+0]
   \   000000F4   0xF8A1 0x0404      STRH     R0,[R1, #+1028]
    100                  if(DtuCom->ConnectTimeOut == 0)         //串口超时
   \   000000F8   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   000000FC   0x6800             LDR      R0,[R0, #+0]
   \   000000FE   0xF8B0 0x0404      LDRH     R0,[R0, #+1028]
   \   00000102   0x0480             LSLS     R0,R0,#+18       ;; ZeroExtS R0,R0,#+18,#+18
   \   00000104   0x0C80             LSRS     R0,R0,#+18
   \   00000106   0x2800             CMP      R0,#+0
   \   00000108   0xD132             BNE.N    ??App_CommIdle_2
    101                  {
    102                      DtuCom->ConnectFlag   = 0;          //连接失效
   \   0000010A   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   0000010E   0x6800             LDR      R0,[R0, #+0]
   \   00000110   0xF8B0 0x0404      LDRH     R0,[R0, #+1028]
   \   00000114   0x0440             LSLS     R0,R0,#+17       ;; ZeroExtS R0,R0,#+17,#+17
   \   00000116   0x0C40             LSRS     R0,R0,#+17
   \   00000118   0x....             LDR.N    R1,??DataTable3_2
   \   0000011A   0x6809             LDR      R1,[R1, #+0]
   \   0000011C   0xF8A1 0x0404      STRH     R0,[R1, #+1028]
    103                      
    104                      /**************************************************************
    105                      * Description  : 超时后，连接状态置默认值
    106                      * Author       : 2018/5/21 星期一, by redmorningcn
    107                      */
    108                      DtuCom->ConnCtrl.EnableConnFlg  = 1;        //允许连接    
   \   00000120   0x....             LDR.N    R0,??DataTable3_2
   \   00000122   0x6800             LDR      R0,[R0, #+0]
   \   00000124   0xF8D0 0x041E      LDR      R0,[R0, #+1054]
   \   00000128   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   0000012C   0x....             LDR.N    R1,??DataTable3_2
   \   0000012E   0x6809             LDR      R1,[R1, #+0]
   \   00000130   0xF8C1 0x041E      STR      R0,[R1, #+1054]
    109                      DtuCom->ConnCtrl.RecvEndFlg     = 0;        //无数据接收
   \   00000134   0x....             LDR.N    R0,??DataTable3_2
   \   00000136   0x6800             LDR      R0,[R0, #+0]
   \   00000138   0xF8D0 0x041E      LDR      R0,[R0, #+1054]
   \   0000013C   0xF030 0x0002      BICS     R0,R0,#0x2
   \   00000140   0x....             LDR.N    R1,??DataTable3_2
   \   00000142   0x6809             LDR      R1,[R1, #+0]
   \   00000144   0xF8C1 0x041E      STR      R0,[R1, #+1054]
    110                      DtuCom->ConnCtrl.RecordSendFlg  = 0;        //无数发送
   \   00000148   0x....             LDR.N    R0,??DataTable3_2
   \   0000014A   0x6800             LDR      R0,[R0, #+0]
   \   0000014C   0xF8D0 0x041E      LDR      R0,[R0, #+1054]
   \   00000150   0xF030 0x0004      BICS     R0,R0,#0x4
   \   00000154   0x....             LDR.N    R1,??DataTable3_2
   \   00000156   0x6809             LDR      R1,[R1, #+0]
   \   00000158   0xF8C1 0x041E      STR      R0,[R1, #+1054]
    111                      DtuCom->ConnCtrl.ConnType       = RECORD_SEND_COMM;//传输数据  
   \   0000015C   0x....             LDR.N    R0,??DataTable3_2
   \   0000015E   0x6800             LDR      R0,[R0, #+0]
   \   00000160   0xF8D0 0x041E      LDR      R0,[R0, #+1054]
   \   00000164   0xF030 0x00E0      BICS     R0,R0,#0xE0
   \   00000168   0x....             LDR.N    R1,??DataTable3_2
   \   0000016A   0x6809             LDR      R1,[R1, #+0]
   \   0000016C   0xF8C1 0x041E      STR      R0,[R1, #+1054]
    112                  }
    113              }
    114              
    115              static  u16  recordtime = 0;
    116              static  u8   mod = 0;
    117              
    118              recordtime++;
   \                     ??App_CommIdle_2: (+1)
   \   00000170   0x....             LDR.N    R0,??DataTable3_3
   \   00000172   0x8800             LDRH     R0,[R0, #+0]
   \   00000174   0x1C40             ADDS     R0,R0,#+1
   \   00000176   0x....             LDR.N    R1,??DataTable3_3
   \   00000178   0x8008             STRH     R0,[R1, #+0]
    119              /**************************************************************
    120              * Description  : 数据发送判断（DTU）
    121              有数据没有发送。且串口不在发送状态，且串口在数据通讯状态，发送时间间隔。
    122              * Author       : 2018/5/18 星期五, by redmorningcn
    123              //2018.07.04   如果有参数正在设置，取消数据发送。
    124              */
    125              if(     Ctrl.sRecNumMgr.GrsRead < Ctrl.sRecNumMgr.Current
    126                 //&&   DtuCom->ConnCtrl[0].SendFlg     == 0  //(状态不好判断)
    127                 &&   DtuCom->ConnCtrl.ConnType       == RECORD_SEND_COMM
    128                 &&   (u16)Ctrl.sRunPara.StoreTime    == recordtime  
    129                 &&   Ctrl.sRunPara.SysSts.SetBitFlg         == 0        //未进行参数设置或iap。（在参数设置或IAP状态设置为清零）
    130                )       
   \   0000017A   0x....             LDR.N    R0,??DataTable3_4
   \   0000017C   0x6980             LDR      R0,[R0, #+24]
   \   0000017E   0x....             LDR.N    R1,??DataTable3_4
   \   00000180   0x6909             LDR      R1,[R1, #+16]
   \   00000182   0x4288             CMP      R0,R1
   \   00000184   0xD238             BCS.N    ??App_CommIdle_3
   \   00000186   0x....             LDR.N    R0,??DataTable3_2
   \   00000188   0x6800             LDR      R0,[R0, #+0]
   \   0000018A   0xF8D0 0x041E      LDR      R0,[R0, #+1054]
   \   0000018E   0xF3C0 0x1042      UBFX     R0,R0,#+5,#+3
   \   00000192   0x2800             CMP      R0,#+0
   \   00000194   0xD130             BNE.N    ??App_CommIdle_3
   \   00000196   0x....             LDR.N    R0,??DataTable3_4
   \   00000198   0xF8B0 0x0044      LDRH     R0,[R0, #+68]
   \   0000019C   0x....             LDR.N    R1,??DataTable3_3
   \   0000019E   0x8809             LDRH     R1,[R1, #+0]
   \   000001A0   0x4288             CMP      R0,R1
   \   000001A2   0xD129             BNE.N    ??App_CommIdle_3
   \   000001A4   0x....             LDR.N    R0,??DataTable3_4
   \   000001A6   0xF8B0 0x0056      LDRH     R0,[R0, #+86]
   \   000001AA   0xF3C0 0x20C0      UBFX     R0,R0,#+11,#+1
   \   000001AE   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001B0   0x2800             CMP      R0,#+0
   \   000001B2   0xD121             BNE.N    ??App_CommIdle_3
    131              {
    132                  recordtime = 0;
   \   000001B4   0x2000             MOVS     R0,#+0
   \   000001B6   0x....             LDR.N    R1,??DataTable3_3
   \   000001B8   0x8008             STRH     R0,[R1, #+0]
    133                  /**************************************************************
    134                  * Description  : 空隙时，循环发送数据和GPS查询
    135                  * Author       : 2018/6/4 星期一, by redmorningcn
    136                  */
    137                  mod++;
   \   000001BA   0x....             LDR.N    R0,??DataTable3_5
   \   000001BC   0x7800             LDRB     R0,[R0, #+0]
   \   000001BE   0x1C40             ADDS     R0,R0,#+1
   \   000001C0   0x....             LDR.N    R1,??DataTable3_5
   \   000001C2   0x7008             STRB     R0,[R1, #+0]
    138                  if(mod %2 == 0)
   \   000001C4   0x....             LDR.N    R0,??DataTable3_5
   \   000001C6   0x7800             LDRB     R0,[R0, #+0]
   \   000001C8   0x2102             MOVS     R1,#+2
   \   000001CA   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   000001CE   0xFB02 0x0211      MLS      R2,R2,R1,R0
   \   000001D2   0x2A00             CMP      R2,#+0
   \   000001D4   0xD10A             BNE.N    ??App_CommIdle_4
    139                      DtuCom->ConnCtrl.ConnType = GPS_COMM;               //查询gps
   \   000001D6   0x2004             MOVS     R0,#+4
   \   000001D8   0x....             LDR.N    R1,??DataTable3_2
   \   000001DA   0x6809             LDR      R1,[R1, #+0]
   \   000001DC   0xF8D1 0x141E      LDR      R1,[R1, #+1054]
   \   000001E0   0xF360 0x1147      BFI      R1,R0,#+5,#+3
   \   000001E4   0x....             LDR.N    R0,??DataTable3_2
   \   000001E6   0x6800             LDR      R0,[R0, #+0]
   \   000001E8   0xF8C0 0x141E      STR      R1,[R0, #+1054]
    140                          
    141                  OSFlagPost( ( OS_FLAG_GRP  *)&Ctrl.Os.CommEvtFlagGrp,   //通知DTU，可以进行数据发送
    142                             ( OS_FLAGS      )COMM_EVT_FLAG_DTU_TX,
    143                             ( OS_OPT        )OS_OPT_POST_FLAG_SET,
    144                             ( OS_ERR       *)&err);
   \                     ??App_CommIdle_4: (+1)
   \   000001EC   0x466B             MOV      R3,SP
   \   000001EE   0x2200             MOVS     R2,#+0
   \   000001F0   0x2110             MOVS     R1,#+16
   \   000001F2   0x....             LDR.N    R0,??DataTable3_6
   \   000001F4   0x.... 0x....      BL       OSFlagPost
    145              }
    146              
    147              if(Ctrl.sRunPara.SetOutTimes){                              //准备清除参数设置状态
   \                     ??App_CommIdle_3: (+1)
   \   000001F8   0x....             LDR.N    R0,??DataTable3_4
   \   000001FA   0xF890 0x0060      LDRB     R0,[R0, #+96]
   \   000001FE   0x2800             CMP      R0,#+0
   \   00000200   0xD014             BEQ.N    ??App_CommIdle_5
    148                  Ctrl.sRunPara.SetOutTimes--;
   \   00000202   0x....             LDR.N    R0,??DataTable3_4
   \   00000204   0xF890 0x0060      LDRB     R0,[R0, #+96]
   \   00000208   0x1E40             SUBS     R0,R0,#+1
   \   0000020A   0x....             LDR.N    R1,??DataTable3_4
   \   0000020C   0xF881 0x0060      STRB     R0,[R1, #+96]
    149                  if(Ctrl.sRunPara.SetOutTimes == 0)
   \   00000210   0x....             LDR.N    R0,??DataTable3_4
   \   00000212   0xF890 0x0060      LDRB     R0,[R0, #+96]
   \   00000216   0x2800             CMP      R0,#+0
   \   00000218   0xD108             BNE.N    ??App_CommIdle_5
    150                      Ctrl.sRunPara.SysSts.SetBitFlg = 0;
   \   0000021A   0x....             LDR.N    R0,??DataTable3_4
   \   0000021C   0xF8B0 0x0056      LDRH     R0,[R0, #+86]
   \   00000220   0xF24F 0x71FF      MOVW     R1,#+63487
   \   00000224   0x4008             ANDS     R0,R1,R0
   \   00000226   0x....             LDR.N    R1,??DataTable3_4
   \   00000228   0xF8A1 0x0056      STRH     R0,[R1, #+86]
    151              }
    152              
    153              static  u8  mtrtimes = 0;
    154              mtrtimes++;
   \                     ??App_CommIdle_5: (+1)
   \   0000022C   0x....             LDR.N    R0,??DataTable3_7
   \   0000022E   0x7800             LDRB     R0,[R0, #+0]
   \   00000230   0x1C40             ADDS     R0,R0,#+1
   \   00000232   0x....             LDR.N    R1,??DataTable3_7
   \   00000234   0x7008             STRB     R0,[R1, #+0]
    155              /**************************************************************
    156              * Description  : MTR数据通讯
    157              没有进行其他曹组时（读写sys或cali），周期性读检测板数据。
    158              * Author       : 2018/5/22 星期二, by redmorningcn
    159              */
    160              MtrCom->ConnCtrl.protocol = MODBUS_PROTOCOL;
   \   00000236   0x....             LDR.N    R0,??DataTable3_1
   \   00000238   0x6800             LDR      R0,[R0, #+0]
   \   0000023A   0xF8D0 0x041E      LDR      R0,[R0, #+1054]
   \   0000023E   0xF430 0x7040      BICS     R0,R0,#0x300
   \   00000242   0x....             LDR.N    R1,??DataTable3_1
   \   00000244   0x6809             LDR      R1,[R1, #+0]
   \   00000246   0xF8C1 0x041E      STR      R0,[R1, #+1054]
    161              if(
    162                      MtrCom->ConnCtrl.ConnType == MTR_RD_DETECT 
    163                 &&   MtrCom->ConnCtrl.protocol == MODBUS_PROTOCOL
    164                 &&   mtrtimes > 5) 
   \   0000024A   0x....             LDR.N    R0,??DataTable3_1
   \   0000024C   0x6800             LDR      R0,[R0, #+0]
   \   0000024E   0xF8D0 0x041E      LDR      R0,[R0, #+1054]
   \   00000252   0xF410 0x7F78      TST      R0,#0x3E0
   \   00000256   0xD127             BNE.N    ??App_CommIdle_6
   \   00000258   0x....             LDR.N    R0,??DataTable3_7
   \   0000025A   0x7800             LDRB     R0,[R0, #+0]
   \   0000025C   0x2806             CMP      R0,#+6
   \   0000025E   0xDB23             BLT.N    ??App_CommIdle_6
    165              {
    166                  static  u8 node = 0;
    167                  
    168                  mtrtimes = 0;
   \   00000260   0x2000             MOVS     R0,#+0
   \   00000262   0x....             LDR.N    R1,??DataTable3_7
   \   00000264   0x7008             STRB     R0,[R1, #+0]
    169                  node++;                     
   \   00000266   0x....             LDR.N    R0,??DataTable3_8
   \   00000268   0x7800             LDRB     R0,[R0, #+0]
   \   0000026A   0x1C40             ADDS     R0,R0,#+1
   \   0000026C   0x....             LDR.N    R1,??DataTable3_8
   \   0000026E   0x7008             STRB     R0,[R1, #+0]
    170                  node %= 4;
   \   00000270   0x....             LDR.N    R0,??DataTable3_8
   \   00000272   0x7800             LDRB     R0,[R0, #+0]
   \   00000274   0x2104             MOVS     R1,#+4
   \   00000276   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   0000027A   0xFB02 0x0211      MLS      R2,R2,R1,R0
   \   0000027E   0x....             LDR.N    R0,??DataTable3_8
   \   00000280   0x7002             STRB     R2,[R0, #+0]
    171                  MtrCom->ConnCtrl.MB_Node = node+1;                      //modbus协议的端口号
   \   00000282   0x....             LDR.N    R0,??DataTable3_8
   \   00000284   0x7800             LDRB     R0,[R0, #+0]
   \   00000286   0x1C40             ADDS     R0,R0,#+1
   \   00000288   0x....             LDR.N    R1,??DataTable3_1
   \   0000028A   0x6809             LDR      R1,[R1, #+0]
   \   0000028C   0xF8D1 0x141E      LDR      R1,[R1, #+1054]
   \   00000290   0xF360 0x4114      BFI      R1,R0,#+16,#+5
   \   00000294   0x....             LDR.N    R0,??DataTable3_1
   \   00000296   0x6800             LDR      R0,[R0, #+0]
   \   00000298   0xF8C0 0x141E      STR      R1,[R0, #+1054]
    172                  
    173                  OSFlagPost(( OS_FLAG_GRP  *)&Ctrl.Os.CommEvtFlagGrp,    //通知MTR，进行数据发送
    174                             ( OS_FLAGS      )COMM_EVT_FLAG_MTR_TX,
    175                             ( OS_OPT        )OS_OPT_POST_FLAG_SET,
    176                             ( OS_ERR       *)&err);
   \   0000029C   0x466B             MOV      R3,SP
   \   0000029E   0x2200             MOVS     R2,#+0
   \   000002A0   0x2108             MOVS     R1,#+8
   \   000002A2   0x....             LDR.N    R0,??DataTable3_6
   \   000002A4   0x.... 0x....      BL       OSFlagPost
    177              }
    178          }
   \                     ??App_CommIdle_6: (+1)
   \   000002A8   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .bss, align 2
   \                     ??recordtime:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
   \                     ??mod:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     ??mtrtimes:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     ??node:
   \   00000000                      DS8 1
    179          
    180          /**************************************************************
    181          * Description  : commTask任务
    182          * Author       : 2018/5/18 星期五, by redmorningcn
    183          */

   \                                 In section .text, align 2, keep-with-next
    184          void  App_TaskCommCreate(void)
    185          {
   \                     App_TaskCommCreate: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB08B             SUB      SP,SP,#+44
    186              OS_ERR  err;
    187              
    188              /***********************************************
    189              * 描述： 任务创建
    190              */
    191              OSTaskCreate((OS_TCB     *)&AppTaskCommTCB,                     // 任务控制块  （当前文件中定义）
    192                           (CPU_CHAR   *)"App Task Comm",                     // 任务名称
    193                           (OS_TASK_PTR ) AppTaskComm,                        // 任务函数指针（当前文件中定义）
    194                           (void       *) 0,                                  // 任务函数参数
    195                           (OS_PRIO     ) APP_TASK_COMM_PRIO,                 // 任务优先级，不同任务优先级可以相同，0 < 优先级 < OS_CFG_PRIO_MAX - 2（app_cfg.h中定义）
    196                           (CPU_STK    *)&AppTaskCommStk[0],                  // 任务栈顶
    197                           (CPU_STK_SIZE) APP_TASK_COMM_STK_SIZE / 10,        // 任务栈溢出报警值
    198                           (CPU_STK_SIZE) APP_TASK_COMM_STK_SIZE,             // 任务栈大小（CPU数据宽度 * 8 * size = 4 * 8 * size(字节)）（app_cfg.h中定义）
    199                           (OS_MSG_QTY  ) 5u,                                 // 可以发送给任务的最大消息队列数量
    200                           (OS_TICK     ) 0u,                                 // 相同优先级任务的轮循时间（ms），0为默认
    201                           (void       *) 0,                                  // 是一个指向它被用作一个TCB扩展用户提供的存储器位置
    202                           (OS_OPT      )(OS_OPT_TASK_STK_CHK |               // 允许堆栈检查该任务
    203                                          OS_OPT_TASK_STK_CLR),               // 创建任务时堆栈清零
    204                           (OS_ERR     *)&err);                               // 指向错误代码的指针，用于创建结果处理
   \   00000004   0xA809             ADD      R0,SP,#+36
   \   00000006   0x9008             STR      R0,[SP, #+32]
   \   00000008   0x2003             MOVS     R0,#+3
   \   0000000A   0x9007             STR      R0,[SP, #+28]
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x9006             STR      R0,[SP, #+24]
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x9005             STR      R0,[SP, #+20]
   \   00000014   0x2005             MOVS     R0,#+5
   \   00000016   0x9004             STR      R0,[SP, #+16]
   \   00000018   0xF44F 0x7000      MOV      R0,#+512
   \   0000001C   0x9003             STR      R0,[SP, #+12]
   \   0000001E   0x2033             MOVS     R0,#+51
   \   00000020   0x9002             STR      R0,[SP, #+8]
   \   00000022   0x....             LDR.N    R0,??DataTable3_9
   \   00000024   0x9001             STR      R0,[SP, #+4]
   \   00000026   0x2034             MOVS     R0,#+52
   \   00000028   0x9000             STR      R0,[SP, #+0]
   \   0000002A   0x2300             MOVS     R3,#+0
   \   0000002C   0x.... 0x....      ADR.W    R2,AppTaskComm
   \   00000030   0x....             LDR.N    R1,??DataTable3_10
   \   00000032   0x....             LDR.N    R0,??DataTable3_11
   \   00000034   0x.... 0x....      BL       OSTaskCreate
    205          }
   \   00000038   0xB00B             ADD      SP,SP,#+44
   \   0000003A   0xBD00             POP      {PC}             ;; return
    206          
    207          void NMB_Tx(MODBUS_CH    *pch,
    208                      CPU_INT08U   *p_reg_tbl,
    209                      CPU_INT16U   nbr_bytes);
    210          /*******************************************************************************
    211          * 名    称： AppTaskComm
    212          * 功    能： 控制任务
    213          * 入口参数： p_arg - 由任务创建函数传入
    214          * 出口参数： 无
    215          * 作    者： wumingshen.
    216          * 创建日期： 2015-02-05
    217          * 修    改：
    218          * 修改日期：
    219          *******************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    220          static  void  AppTaskComm (void *p_arg)
    221          {
   \                     AppTaskComm: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB084             SUB      SP,SP,#+16
    222              OS_ERR          err;
    223              OS_TICK         ticks;
    224              OS_TICK         dly     = CYCLE_TIME_TICKS;
   \   00000004   0xF44F 0x747A      MOV      R4,#+1000
    225              static         u8   times = 0;
    226              /***********************************************
    227              * 描述： 任务初始化
    228              */
    229              APP_CommInit();         
   \   00000008   0x.... 0x....      BL       APP_CommInit
   \   0000000C   0xE00A             B.N      ??AppTaskComm_0
    230              
    231              /***********************************************
    232              * 描述： Task body, always written as an infinite loop.
    233              */
    234              while (DEF_TRUE) { 
    235          
    236                  /***********************************************
    237                  * 描述： 本任务看门狗标志置位
    238                  */
    239                  OSSetWdtFlag(( OS_FLAGS     ) WDT_FLAG_COMM);
    240                  
    241                  /***********************************************
    242                  * 描述： 等待COMM的标识组
    243                  */
    244                  OS_FLAGS    flags = 
    245                  (OS_FLAGS) OSFlagPend(( OS_FLAG_GRP *)&Ctrl.Os.CommEvtFlagGrp,
    246                                 ( OS_FLAGS     ) Ctrl.Os.CommEvtFlag,
    247                                 ( OS_TICK      ) dly,
    248                                 ( OS_OPT       ) OS_OPT_PEND_FLAG_SET_ANY | 
    249                                                  OS_OPT_PEND_BLOCKING ,
    250                                 ( CPU_TS      *) NULL,
    251                                 ( OS_ERR      *)&err);
    252                  
    253                  OS_ERR      terr;
    254                  ticks       = OSTimeGet(&terr);                     // 获取当前OSTick
    255                  
    256                  /***********************************************
    257                  * 描述： 没有错误,有事件发生
    258                  */
    259                  if ( err == OS_ERR_NONE ) {
    260                      OS_FLAGS    flagClr = 0;
    261                     
    262                      /**************************************************************
    263                      * Description  : MTR收发
    264                      * Author       : 2018/5/18 星期五, by redmorningcn
    265                      */
    266                      if(    flags & COMM_EVT_FLAG_MTR_RX ) {
    267          
    268                          
    269                          if(flags &      COMM_EVT_FLAG_MTR_RX) {      
    270                              flagClr |=  COMM_EVT_FLAG_MTR_RX;   
    271                          }                
    272                      }
    273                      if(    flags & COMM_EVT_FLAG_MTR_TX ) {
    274                          
    275                          extern void app_mtr_com(void);
    276                          app_mtr_com();          //处理板和检测板通讯处理     
    277                          
    278                          if(flags &      COMM_EVT_FLAG_MTR_TX) {      
    279                              flagClr |=  COMM_EVT_FLAG_MTR_TX;   
    280                          }                
    281                      }            
    282              
    283                      /**************************************************************
    284                      * Description  : DTU通讯 收发
    285                      * Author       : 2018/5/18 星期五, by redmorningcn
    286                      */
    287                      if( flags   & COMM_EVT_FLAG_DTU_RX  ) {    
    288                          //app_comm_dtu(flags); 
    289                          
    290                          app_dtu_rec(DtuCom);                         //和DTU模块，接收部分。
    291                          DtuCom->ConnCtrl.Connflg = 1;               //连接成功
    292                          
    293                          if( flags &      COMM_EVT_FLAG_DTU_RX ) { 
    294                              flagClr |=   COMM_EVT_FLAG_DTU_RX;   
    295                          }
    296                      }
    297                      if(    flags & COMM_EVT_FLAG_DTU_TX ) {
    298                          
    299                          app_dtu_send(DtuCom);                     //和DTU模块，发送部分
    300                          
    301                          if(flags &      COMM_EVT_FLAG_DTU_TX) {      
    302                              flagClr |=  COMM_EVT_FLAG_DTU_TX;   
    303                          }                
    304                      }
    305          
    306                      /**************************************************************
    307                      * Description  : 扩展通讯口（TAX）收发
    308                      * Author       : 2018/5/18 星期五, by redmorningcn
    309                      */
    310                      if(    flags & COMM_EVT_FLAG_TAX_RX ) {
    311                          //app_comm_tax(flags);
    312                          //发送数据
    313             
    314                          app_dtu_rec(TaxCom);                         //和DTU模块，接收部分。
    315                          TaxCom->ConnCtrl.Connflg = 1;               //连接成功
    316                                          if(flags &      COMM_EVT_FLAG_TAX_RX) {      
    317                              flagClr |=  COMM_EVT_FLAG_TAX_RX;   
    318                          }                
    319                      }
    320                      if(    flags & COMM_EVT_FLAG_TAX_TX ) {
    321                          //app_comm_tax(flags);
    322                          app_dtu_send(TaxCom);                     //和DTU模块，发送部分
    323           
    324                          
    325                          if(flags &      COMM_EVT_FLAG_TAX_TX) {      
    326                              flagClr |=  COMM_EVT_FLAG_TAX_TX;   
    327                          }                
    328                      }
    329           
    330                      /***********************************************
    331                      * 描述： 清除标志
    332                      */
    333                      if ( !flagClr ) {
    334                          times++;
    335                          if(times > 1)   //容错
    336                              flagClr = flags;
    337                      }else{
    338                         times = 0; 
    339                      }
    340                      
    341                      /***********************************************
    342                      * 描述： 清除标志位
    343                      */
    344                      OSFlagPost( ( OS_FLAG_GRP  *)&Ctrl.Os.CommEvtFlagGrp,
    345                                 ( OS_FLAGS      )flagClr,
    346                                 ( OS_OPT        )OS_OPT_POST_FLAG_CLR,
    347                                 ( OS_ERR       *)&err);
    348                  }
    349                  
    350                  /***********************************************
    351                  * 描述： 计算剩余时间
    352                  */
    353                  dly   = CYCLE_TIME_TICKS - ( OSTimeGet(&err) - ticks );
    354                  if ( dly  < 1 ) {
    355                      dly = 1;
   \                     ??AppTaskComm_1: (+1)
   \   0000000E   0x2401             MOVS     R4,#+1
    356                      OSTimeDlyHMSM(0, 0, 0, 1,
    357                                OS_OPT_TIME_HMSM_STRICT,
    358                                &err);
   \   00000010   0xA802             ADD      R0,SP,#+8
   \   00000012   0x9001             STR      R0,[SP, #+4]
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x9000             STR      R0,[SP, #+0]
   \   00000018   0x2301             MOVS     R3,#+1
   \   0000001A   0x2200             MOVS     R2,#+0
   \   0000001C   0x2100             MOVS     R1,#+0
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0x.... 0x....      BL       OSTimeDlyHMSM
    359                                  //延时，执行其他任务
    360                  } else if ( dly > CYCLE_TIME_TICKS ) {
   \                     ??AppTaskComm_0: (+1)
   \   00000024   0x2001             MOVS     R0,#+1
   \   00000026   0x.... 0x....      BL       OSSetWdtFlag
   \   0000002A   0xA802             ADD      R0,SP,#+8
   \   0000002C   0x9001             STR      R0,[SP, #+4]
   \   0000002E   0x2000             MOVS     R0,#+0
   \   00000030   0x9000             STR      R0,[SP, #+0]
   \   00000032   0x2308             MOVS     R3,#+8
   \   00000034   0x0022             MOVS     R2,R4
   \   00000036   0x....             LDR.N    R0,??DataTable3_12
   \   00000038   0x6801             LDR      R1,[R0, #+0]
   \   0000003A   0x....             LDR.N    R0,??DataTable3_6
   \   0000003C   0x.... 0x....      BL       OSFlagPend
   \   00000040   0x0004             MOVS     R4,R0
   \   00000042   0xF10D 0x000A      ADD      R0,SP,#+10
   \   00000046   0x.... 0x....      BL       OSTimeGet
   \   0000004A   0x0005             MOVS     R5,R0
   \   0000004C   0xF8BD 0x0008      LDRH     R0,[SP, #+8]
   \   00000050   0x2800             CMP      R0,#+0
   \   00000052   0xD160             BNE.N    ??AppTaskComm_2
   \   00000054   0x2600             MOVS     R6,#+0
   \   00000056   0x07E0             LSLS     R0,R4,#+31
   \   00000058   0xD503             BPL.N    ??AppTaskComm_3
   \   0000005A   0x07E0             LSLS     R0,R4,#+31
   \   0000005C   0xD501             BPL.N    ??AppTaskComm_3
   \   0000005E   0xF056 0x0601      ORRS     R6,R6,#0x1
   \                     ??AppTaskComm_3: (+1)
   \   00000062   0x0720             LSLS     R0,R4,#+28
   \   00000064   0xD505             BPL.N    ??AppTaskComm_4
   \   00000066   0x.... 0x....      BL       app_mtr_com
   \   0000006A   0x0720             LSLS     R0,R4,#+28
   \   0000006C   0xD501             BPL.N    ??AppTaskComm_4
   \   0000006E   0xF056 0x0608      ORRS     R6,R6,#0x8
   \                     ??AppTaskComm_4: (+1)
   \   00000072   0x07A0             LSLS     R0,R4,#+30
   \   00000074   0xD511             BPL.N    ??AppTaskComm_5
   \   00000076   0x....             LDR.N    R0,??DataTable3_2
   \   00000078   0x6800             LDR      R0,[R0, #+0]
   \   0000007A   0x.... 0x....      BL       app_dtu_rec
   \   0000007E   0x....             LDR.N    R0,??DataTable3_2
   \   00000080   0x6800             LDR      R0,[R0, #+0]
   \   00000082   0xF8D0 0x041E      LDR      R0,[R0, #+1054]
   \   00000086   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   0000008A   0x....             LDR.N    R1,??DataTable3_2
   \   0000008C   0x6809             LDR      R1,[R1, #+0]
   \   0000008E   0xF8C1 0x041E      STR      R0,[R1, #+1054]
   \   00000092   0x07A0             LSLS     R0,R4,#+30
   \   00000094   0xD501             BPL.N    ??AppTaskComm_5
   \   00000096   0xF056 0x0602      ORRS     R6,R6,#0x2
   \                     ??AppTaskComm_5: (+1)
   \   0000009A   0x06E0             LSLS     R0,R4,#+27
   \   0000009C   0xD507             BPL.N    ??AppTaskComm_6
   \   0000009E   0x....             LDR.N    R0,??DataTable3_2
   \   000000A0   0x6800             LDR      R0,[R0, #+0]
   \   000000A2   0x.... 0x....      BL       app_dtu_send
   \   000000A6   0x06E0             LSLS     R0,R4,#+27
   \   000000A8   0xD501             BPL.N    ??AppTaskComm_6
   \   000000AA   0xF056 0x0610      ORRS     R6,R6,#0x10
   \                     ??AppTaskComm_6: (+1)
   \   000000AE   0x0760             LSLS     R0,R4,#+29
   \   000000B0   0xD511             BPL.N    ??AppTaskComm_7
   \   000000B2   0x....             LDR.N    R0,??DataTable3
   \   000000B4   0x6800             LDR      R0,[R0, #+0]
   \   000000B6   0x.... 0x....      BL       app_dtu_rec
   \   000000BA   0x....             LDR.N    R0,??DataTable3
   \   000000BC   0x6800             LDR      R0,[R0, #+0]
   \   000000BE   0xF8D0 0x041E      LDR      R0,[R0, #+1054]
   \   000000C2   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   000000C6   0x....             LDR.N    R1,??DataTable3
   \   000000C8   0x6809             LDR      R1,[R1, #+0]
   \   000000CA   0xF8C1 0x041E      STR      R0,[R1, #+1054]
   \   000000CE   0x0760             LSLS     R0,R4,#+29
   \   000000D0   0xD501             BPL.N    ??AppTaskComm_7
   \   000000D2   0xF056 0x0604      ORRS     R6,R6,#0x4
   \                     ??AppTaskComm_7: (+1)
   \   000000D6   0x06A0             LSLS     R0,R4,#+26
   \   000000D8   0xD507             BPL.N    ??AppTaskComm_8
   \   000000DA   0x....             LDR.N    R0,??DataTable3
   \   000000DC   0x6800             LDR      R0,[R0, #+0]
   \   000000DE   0x.... 0x....      BL       app_dtu_send
   \   000000E2   0x06A0             LSLS     R0,R4,#+26
   \   000000E4   0xD501             BPL.N    ??AppTaskComm_8
   \   000000E6   0xF056 0x0620      ORRS     R6,R6,#0x20
   \                     ??AppTaskComm_8: (+1)
   \   000000EA   0x2E00             CMP      R6,#+0
   \   000000EC   0xD10A             BNE.N    ??AppTaskComm_9
   \   000000EE   0x....             LDR.N    R0,??DataTable3_13
   \   000000F0   0x7800             LDRB     R0,[R0, #+0]
   \   000000F2   0x1C40             ADDS     R0,R0,#+1
   \   000000F4   0x....             LDR.N    R1,??DataTable3_13
   \   000000F6   0x7008             STRB     R0,[R1, #+0]
   \   000000F8   0x....             LDR.N    R0,??DataTable3_13
   \   000000FA   0x7800             LDRB     R0,[R0, #+0]
   \   000000FC   0x2802             CMP      R0,#+2
   \   000000FE   0xDB04             BLT.N    ??AppTaskComm_10
   \   00000100   0x0026             MOVS     R6,R4
   \   00000102   0xE002             B.N      ??AppTaskComm_10
   \                     ??AppTaskComm_9: (+1)
   \   00000104   0x2000             MOVS     R0,#+0
   \   00000106   0x....             LDR.N    R1,??DataTable3_13
   \   00000108   0x7008             STRB     R0,[R1, #+0]
   \                     ??AppTaskComm_10: (+1)
   \   0000010A   0xAB02             ADD      R3,SP,#+8
   \   0000010C   0x2201             MOVS     R2,#+1
   \   0000010E   0x0031             MOVS     R1,R6
   \   00000110   0x....             LDR.N    R0,??DataTable3_6
   \   00000112   0x.... 0x....      BL       OSFlagPost
   \                     ??AppTaskComm_2: (+1)
   \   00000116   0xA802             ADD      R0,SP,#+8
   \   00000118   0x.... 0x....      BL       OSTimeGet
   \   0000011C   0xF5D0 0x707A      RSBS     R0,R0,#+1000
   \   00000120   0x182C             ADDS     R4,R5,R0
   \   00000122   0x2C00             CMP      R4,#+0
   \   00000124   0xF43F 0xAF73      BEQ.W    ??AppTaskComm_1
   \   00000128   0xF5B4 0x7F7A      CMP      R4,#+1000
   \   0000012C   0xF67F 0xAF7A      BLS.W    ??AppTaskComm_0
    361                      dly = CYCLE_TIME_TICKS;
   \   00000130   0xF44F 0x747A      MOV      R4,#+1000
   \   00000134   0xE776             B.N      ??AppTaskComm_0
    362                  }
    363              }
    364          }

   \                                 In section .bss, align 1
   \                     ??times:
   \   00000000                      DS8 1
    365          
    366          /*******************************************************************************
    367          * 名    称： APP_CommInit
    368          * 功    能： 任务初始化
    369          * 入口参数： 无
    370          * 出口参数： 无
    371          * 作    者： wumingshen.
    372          * 创建日期： 2015-03-28
    373          * 修    改：
    374          * 修改日期：
    375          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    376          void APP_CommInit(void)
    377          {
   \                     APP_CommInit: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    378              OS_ERR err;
    379              
    380                  /***********************************************
    381              * 描述： 创建事件标志组,协调comm收发
    382              */
    383              OSFlagCreate(( OS_FLAG_GRP  *)&Ctrl.Os.CommEvtFlagGrp,
    384                           ( CPU_CHAR     *)"App_CommFlag",
    385                           ( OS_FLAGS      )0,
    386                           ( OS_ERR       *)&err);
   \   00000002   0x466B             MOV      R3,SP
   \   00000004   0x2200             MOVS     R2,#+0
   \   00000006   0x....             LDR.N    R1,??DataTable3_14
   \   00000008   0x....             LDR.N    R0,??DataTable3_6
   \   0000000A   0x.... 0x....      BL       OSFlagCreate
    387              
    388              Ctrl.Os.CommEvtFlag =     COMM_EVT_FLAG_MTR_RX              // MTR 接收事件
    389                                      + COMM_EVT_FLAG_DTU_RX              // DTU 接收事件
    390                                      + COMM_EVT_FLAG_TAX_RX              // OTR 接收事件
    391                                      + COMM_EVT_FLAG_MTR_TX              
    392                                      + COMM_EVT_FLAG_DTU_TX              
    393                                      + COMM_EVT_FLAG_TAX_TX              
    394                                      ;
   \   0000000E   0x203F             MOVS     R0,#+63
   \   00000010   0x....             LDR.N    R1,??DataTable3_12
   \   00000012   0x6008             STR      R0,[R1, #+0]
    395              
    396          
    397              /***********************************************
    398              * 描述： 初始化MODBUS通信(已在hook.c中处理 redmorningcn)
    399              */        
    400              //App_ModbusInit();
    401              
    402              /***********************************************
    403              * 描述： 在看门狗标志组注册本任务的看门狗标志
    404              */
    405              OSRegWdtFlag(( OS_FLAGS     ) WDT_FLAG_COMM);
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0x.... 0x....      BL       OSRegWdtFlag
    406          }
   \   0000001A   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     TaxCom

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     MtrCom

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     DtuCom

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x........         DC32     ??recordtime

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     Ctrl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x........         DC32     ??mod

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x........         DC32     Ctrl+0x11E0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x........         DC32     ??mtrtimes

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x........         DC32     ??node

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x........         DC32     AppTaskCommStk

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \   00000000   0x........         DC32     AppTaskCommTCB

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_12:
   \   00000000   0x........         DC32     Ctrl+0x1208

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_13:
   \   00000000   0x........         DC32     ??times

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_14:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x41 0x70          DC8 "App Task Comm"
   \              0x70 0x20    
   \              0x54 0x61    
   \              0x73 0x6B    
   \              0x20 0x43    
   \              0x6F 0x6D    
   \              0x6D 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x41 0x70          DC8 "App_CommFlag"
   \              0x70 0x5F    
   \              0x43 0x6F    
   \              0x6D 0x6D    
   \              0x46 0x6C    
   \              0x61 0x67    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         
    407          
    408          /*******************************************************************************
    409          * 				end of file
    410          *******************************************************************************/
    411          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   APP_CommInit
         8   -> OSFlagCreate
         8   -> OSRegWdtFlag
      32   AppTaskComm
        32   -> APP_CommInit
        32   -> OSFlagPend
        32   -> OSFlagPost
        32   -> OSSetWdtFlag
        32   -> OSTimeDlyHMSM
        32   -> OSTimeGet
        32   -> app_dtu_rec
        32   -> app_dtu_send
        32   -> app_mtr_com
       8   App_CommIdle
         8   -> OSFlagPost
      48   App_TaskCommCreate
        48   -> OSTaskCreate


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_12
       4  ??DataTable3_13
       4  ??DataTable3_14
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
      16  ?_0
      16  ?_1
      28  APP_CommInit
     310  AppTaskComm
    2048  AppTaskCommStk
     160  AppTaskCommTCB
     682  App_CommIdle
      60  App_TaskCommCreate
      48  COM_RxQ
       1  mod
       1  mtrtimes
       1  node
       2  recordtime
       1  times

 
 2 262 bytes in section .bss
    32 bytes in section .rodata
 1 140 bytes in section .text
 
 1 140 bytes of CODE  memory
    32 bytes of CONST memory
 2 262 bytes of DATA  memory

Errors: none
Warnings: none
