###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       11/Jul/2018  11:13:10
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC210\NC210-200处理板\source\Software\uCOS-III\Source\os_prio.c
#    Command line =  
#        F:\iar\NC210\NC210-200处理板\source\Software\uCOS-III\Source\os_prio.c
#        -D USE_STDPERIPH_DRIVER -D APP_RELEASE -lCN
#        F:\iar\NC210\NC210-200处理板\project\app_release\List -o
#        F:\iar\NC210\NC210-200处理板\project\app_release\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M3 -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Full.h" -I
#        F:\iar\NC210\NC210-200处理板\project\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\config\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\task\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\user\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\OSAL\OS\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\OSAL\Ports\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\driver\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-LIB\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-CPU\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uCOS-III\Source\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\IAR\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\ST\STM32\inc\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\OS\uCOS-III\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-MB\OS\uCOS-III\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-MB\Ports\STM32\STM32F103\IAR\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-MB\Source\
#        -Ol --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC210\NC210-200处理板\project\app_release\List\os_prio.lst
#    Object file  =  
#        F:\iar\NC210\NC210-200处理板\project\app_release\Obj\os_prio.o
#
###############################################################################

F:\iar\NC210\NC210-200处理板\source\Software\uCOS-III\Source\os_prio.c
      1          /*
      2          ************************************************************************************************************************
      3          *                                                      uC/OS-III
      4          *                                                 The Real-Time Kernel
      5          *
      6          *                                  (c) Copyright 2009-2016; Micrium, Inc.; Weston, FL
      7          *                           All rights reserved.  Protected by international copyright laws.
      8          *
      9          *                                                 PRIORITY MANAGEMENT
     10          *
     11          * File    : OS_PRIO.C
     12          * By      : JJL
     13          * Version : V3.06.00
     14          *
     15          * LICENSING TERMS:
     16          * ---------------
     17          *           uC/OS-III is provided in source form for FREE short-term evaluation, for educational use or
     18          *           for peaceful research.  If you plan or intend to use uC/OS-III in a commercial application/
     19          *           product then, you need to contact Micrium to properly license uC/OS-III for its use in your
     20          *           application/product.   We provide ALL the source code for your convenience and to help you
     21          *           experience uC/OS-III.  The fact that the source is provided does NOT mean that you can use
     22          *           it commercially without paying a licensing fee.
     23          *
     24          *           Knowledge of the source code may NOT be used to develop a similar product.
     25          *
     26          *           Please help us continue to provide the embedded community with the finest software available.
     27          *           Your honesty is greatly appreciated.
     28          *
     29          *           You can find our product's user manual, API reference, release notes and
     30          *           more information at https://doc.micrium.com.
     31          *           You can contact us at www.micrium.com.
     32          ************************************************************************************************************************
     33          */
     34          
     35          #define  MICRIUM_SOURCE
     36          #include "os.h"
     37          
     38          #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
     39          const  CPU_CHAR  *os_prio__c = "$Id: $";
     40          #endif
     41          
     42          

   \                                 In section .bss, align 4
     43          CPU_DATA   OSPrioTbl[OS_PRIO_TBL_SIZE];                         /* Declare the array local to this file to allow for  ...*/
   \                     OSPrioTbl:
   \   00000000                      DS8 8
     44                                                                          /* ... optimization.  In other words, this allows the ...*/
     45                                                                          /* ... table to be located in fast memory                */
     46          
     47          /*
     48          ************************************************************************************************************************
     49          *                                               INITIALIZE THE PRIORITY LIST
     50          *
     51          * Description: This function is called by uC/OS-III to initialize the list of ready priorities.
     52          *
     53          * Arguments  : none
     54          *
     55          * Returns    : none
     56          *
     57          * Note       : This function is INTERNAL to uC/OS-III and your application should not call it.
     58          ************************************************************************************************************************
     59          */
     60          

   \                                 In section .text, align 2, keep-with-next
     61          void  OS_PrioInit (void)
     62          {
     63              CPU_DATA  i;
     64          
     65          
     66                                                                          /* Clear the bitmap table ... no task is ready          */
     67              for (i = 0u; i < OS_PRIO_TBL_SIZE; i++) {
   \                     OS_PrioInit: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0xE004             B.N      ??OS_PrioInit_0
     68                   OSPrioTbl[i] = 0u;
   \                     ??OS_PrioInit_1: (+1)
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x....             LDR.N    R2,??DataTable3
   \   00000008   0xF842 0x1020      STR      R1,[R2, R0, LSL #+2]
     69              }
   \   0000000C   0x1C40             ADDS     R0,R0,#+1
   \                     ??OS_PrioInit_0: (+1)
   \   0000000E   0x2802             CMP      R0,#+2
   \   00000010   0xD3F8             BCC.N    ??OS_PrioInit_1
     70          
     71          #if (OS_CFG_TASK_IDLE_EN == DEF_DISABLED)
     72              OS_PrioInsert ((OS_CFG_PRIO_MAX - 1u));                     /* Insert what would be the idle task                   */
     73          #endif
     74          }
   \   00000012   0x4770             BX       LR               ;; return
     75          
     76          /*
     77          ************************************************************************************************************************
     78          *                                           GET HIGHEST PRIORITY TASK WAITING
     79          *
     80          * Description: This function is called by other uC/OS-III services to determine the highest priority task
     81          *              waiting on the event.
     82          *
     83          * Arguments  : none
     84          *
     85          * Returns    : The priority of the Highest Priority Task (HPT) waiting for the event
     86          *
     87          * Note(s)    : 1) This function is INTERNAL to uC/OS-III and your application MUST NOT call it.
     88          ************************************************************************************************************************
     89          */
     90          

   \                                 In section .text, align 2, keep-with-next
     91          OS_PRIO  OS_PrioGetHighest (void)
     92          {
   \                     OS_PrioGetHighest: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     93              CPU_DATA  *p_tbl;
     94              OS_PRIO    prio;
     95          
     96          
     97              prio  = 0u;
   \   00000002   0x2400             MOVS     R4,#+0
     98              p_tbl = &OSPrioTbl[0];
   \   00000004   0x....             LDR.N    R0,??DataTable3
   \   00000006   0xE001             B.N      ??OS_PrioGetHighest_0
     99          #if (OS_CFG_PRIO_MAX > DEF_INT_CPU_NBR_BITS)
    100              while (*p_tbl == 0u) {                                      /* Search the bitmap table for the highest priority     */
    101                  prio += (OS_PRIO)DEF_INT_CPU_NBR_BITS;                  /* Compute the step of each CPU_DATA entry              */
   \                     ??OS_PrioGetHighest_1: (+1)
   \   00000008   0x3420             ADDS     R4,R4,#+32
    102                  p_tbl++;
   \   0000000A   0x1D00             ADDS     R0,R0,#+4
    103              }
   \                     ??OS_PrioGetHighest_0: (+1)
   \   0000000C   0x6801             LDR      R1,[R0, #+0]
   \   0000000E   0x2900             CMP      R1,#+0
   \   00000010   0xD0FA             BEQ.N    ??OS_PrioGetHighest_1
    104          #endif
    105              prio += (OS_PRIO)CPU_CntLeadZeros(*p_tbl);                  /* Find the position of the first bit set at the entry  */
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0x.... 0x....      BL       CPU_CntLeadZeros
   \   00000018   0x1904             ADDS     R4,R0,R4
    106          
    107              return (prio);
   \   0000001A   0x0020             MOVS     R0,R4
   \   0000001C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001E   0xBD10             POP      {R4,PC}          ;; return
    108          }
    109          
    110          /*
    111          ************************************************************************************************************************
    112          *                                                  INSERT PRIORITY
    113          *
    114          * Description: This function is called to insert a priority in the priority table.
    115          *
    116          * Arguments  : prio     is the priority to insert
    117          *
    118          * Returns    : none
    119          *
    120          * Note(s)    : 1) This function is INTERNAL to uC/OS-III and your application MUST NOT call it.
    121          ************************************************************************************************************************
    122          */
    123          

   \                                 In section .text, align 2, keep-with-next
    124          void  OS_PrioInsert (OS_PRIO  prio)
    125          {
    126              CPU_DATA  bit;
    127              CPU_DATA  bit_nbr;
    128              OS_PRIO   ix;
    129          
    130          #if (OS_CFG_PRIO_MAX > DEF_INT_CPU_NBR_BITS)
    131              ix             = prio / (OS_PRIO)DEF_INT_CPU_NBR_BITS;
   \                     OS_PrioInsert: (+1)
   \   00000000   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000002   0x2120             MOVS     R1,#+32
   \   00000004   0xFB90 0xF2F1      SDIV     R2,R0,R1
    132              bit_nbr        = (CPU_DATA)prio & (DEF_INT_CPU_NBR_BITS - 1u);
   \   00000008   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000A   0xF010 0x011F      ANDS     R1,R0,#0x1F
    133          #else
    134              ix             = 0u;
    135              bit_nbr        = prio;
    136          #endif
    137              bit            = 1u;
   \   0000000E   0x2001             MOVS     R0,#+1
    138              bit          <<= (DEF_INT_CPU_NBR_BITS - 1u) - bit_nbr;
   \   00000010   0xF1D1 0x011F      RSBS     R1,R1,#+31
   \   00000014   0x4088             LSLS     R0,R0,R1
    139              OSPrioTbl[ix] |= bit;
   \   00000016   0x....             LDR.N    R1,??DataTable3
   \   00000018   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000001A   0xF851 0x1022      LDR      R1,[R1, R2, LSL #+2]
   \   0000001E   0x4308             ORRS     R0,R0,R1
   \   00000020   0x....             LDR.N    R1,??DataTable3
   \   00000022   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000024   0xF841 0x0022      STR      R0,[R1, R2, LSL #+2]
    140          }
   \   00000028   0x4770             BX       LR               ;; return
    141          
    142          /*
    143          ************************************************************************************************************************
    144          *                                                   REMOVE PRIORITY
    145          *
    146          * Description: This function is called to remove a priority in the priority table.
    147          *
    148          * Arguments  : prio     is the priority to remove
    149          *
    150          * Returns    : none
    151          *
    152          * Note(s)    : 1) This function is INTERNAL to uC/OS-III and your application MUST NOT call it.
    153          ************************************************************************************************************************
    154          */
    155          

   \                                 In section .text, align 2, keep-with-next
    156          void  OS_PrioRemove (OS_PRIO  prio)
    157          {
    158              CPU_DATA  bit;
    159              CPU_DATA  bit_nbr;
    160              OS_PRIO   ix;
    161          
    162          #if (OS_CFG_PRIO_MAX > DEF_INT_CPU_NBR_BITS)
    163              ix             = prio / (OS_PRIO)DEF_INT_CPU_NBR_BITS;
   \                     OS_PrioRemove: (+1)
   \   00000000   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000002   0x2120             MOVS     R1,#+32
   \   00000004   0xFB90 0xF2F1      SDIV     R2,R0,R1
    164              bit_nbr        = (CPU_DATA)prio & (DEF_INT_CPU_NBR_BITS - 1u);
   \   00000008   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000A   0xF010 0x011F      ANDS     R1,R0,#0x1F
    165          #else
    166              ix             = 0u;
    167              bit_nbr        = prio;
    168          #endif
    169              bit            = 1u;
   \   0000000E   0x2001             MOVS     R0,#+1
    170              bit          <<= (DEF_INT_CPU_NBR_BITS - 1u) - bit_nbr;
   \   00000010   0xF1D1 0x011F      RSBS     R1,R1,#+31
   \   00000014   0x4088             LSLS     R0,R0,R1
    171              OSPrioTbl[ix] &= ~bit;
   \   00000016   0x....             LDR.N    R1,??DataTable3
   \   00000018   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000001A   0xF851 0x1022      LDR      R1,[R1, R2, LSL #+2]
   \   0000001E   0xEA31 0x0000      BICS     R0,R1,R0
   \   00000022   0x....             LDR.N    R1,??DataTable3
   \   00000024   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000026   0xF841 0x0022      STR      R0,[R1, R2, LSL #+2]
    172          }
   \   0000002A   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     OSPrioTbl

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   OS_PrioGetHighest
         8   -> CPU_CntLeadZeros
       0   OS_PrioInit
       0   OS_PrioInsert
       0   OS_PrioRemove


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       8  OSPrioTbl
      32  OS_PrioGetHighest
      20  OS_PrioInit
      42  OS_PrioInsert
      44  OS_PrioRemove

 
   8 bytes in section .bss
 142 bytes in section .text
 
 142 bytes of CODE memory
   8 bytes of DATA memory

Errors: none
Warnings: none
