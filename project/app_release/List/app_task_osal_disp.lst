###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       15/Jul/2018  10:36:15
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC210\NC210-200处理板\source\task\app_task_osal_disp.c
#    Command line =  
#        F:\iar\NC210\NC210-200处理板\source\task\app_task_osal_disp.c -D
#        USE_STDPERIPH_DRIVER -D APP_RELEASE -lCN
#        F:\iar\NC210\NC210-200处理板\project\app_release\List -o
#        F:\iar\NC210\NC210-200处理板\project\app_release\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M3 -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Full.h" -I
#        F:\iar\NC210\NC210-200处理板\project\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\config\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\task\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\user\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\OSAL\OS\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\OSAL\Ports\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\driver\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-LIB\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-CPU\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uCOS-III\Source\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\IAR\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\ST\STM32\inc\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\OS\uCOS-III\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-MB\OS\uCOS-III\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-MB\Ports\STM32\STM32F103\IAR\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-MB\Source\
#        -Ol --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC210\NC210-200处理板\project\app_release\List\app_task_osal_disp.lst
#    Object file  =  
#        F:\iar\NC210\NC210-200处理板\project\app_release\Obj\app_task_osal_disp.o
#
###############################################################################

F:\iar\NC210\NC210-200处理板\source\task\app_task_osal_disp.c
      1          /*******************************************************************************
      2          * Description  : 数码管显示任务
      3          * Author       : 2018/5/16 星期三, by redmorningcn
      4          *******************************************************************************/
      5          
      6          /*******************************************************************************
      7           * INCLUDES
      8           */
      9          #include <includes.h>
     10          
     11          #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
     12          const  CPU_CHAR  *app_task_disp__c = "$Id: $";
     13          #endif
     14          
     15          #define APP_TASK_DISP_EN     DEF_ENABLED
     16          #if APP_TASK_DISP_EN == DEF_ENABLED
     17          /*******************************************************************************
     18           * CONSTANTS
     19           */
     20          #define CYCLE_TIME_TICKS     (OS_CFG_TICK_RATE_HZ * 1u)
     21          
     22          /*******************************************************************************
     23           * MACROS
     24           */
     25          
     26          /*******************************************************************************
     27           * TYPEDEFS
     28           */
     29          
     30          /*******************************************************************************
     31           * LOCAL VARIABLES
     32           */
     33          #if ( OSAL_EN == DEF_ENABLED )
     34          #else
     35          /***********************************************
     36          * 描述： 任务控制块（TCB）
     37          */
     38          
     39          /***********************************************
     40          * 描述： 任务堆栈（STACKS）
     41          */
     42          
     43          #endif     
     44               

   \                                 In section .bss, align 1
     45          static  uint8       dis_mode    =   0;
   \                     dis_mode:
   \   00000000                      DS8 1

   \                                 In section .bss, align 2
     46                   uint16      ErrCode     =   0;
   \                     ErrCode:
   \   00000000                      DS8 2
     47          
     48          /*******************************************************************************
     49           * GLOBAL VARIABLES
     50           */
     51          
     52          /*******************************************************************************
     53           * LOCAL FUNCTIONS
     54           */
     55               
     56          #if ( OSAL_EN == DEF_ENABLED )
     57          #else
     58          static  void                AppTaskDisp           (void *p_arg);
     59          #endif
     60          
     61          /*******************************************************************************
     62           * GLOBAL FUNCTIONS
     63           */
     64          
     65          
     66          /*******************************************************************************
     67           * EXTERN VARIABLES
     68           */
     69          
     70          #define     DIS_INFO_NUM        9
     71          #define     DIS_MAX_ERR_NUM     3      
     72          /*******************************************************************************
     73          * Description  : 装置正常运行时，循环显示的内容。
     74                           如果有故障，则显示故障代码。
     75          * Author       : 2018/5/16 星期三, by redmorningcn
     76          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     77          void    LkjDisplayInfo(void)
     78          {
   \                     LkjDisplayInfo: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
     79              static  u8     times = 0;
     80              u8              mod = DIS_INFO_NUM + DIS_MAX_ERR_NUM;
   \   00000004   0x240C             MOVS     R4,#+12
     81              u8              groupstring[]= "ABC";
   \   00000006   0xA801             ADD      R0,SP,#+4
   \   00000008   0x....             LDR.N    R1,??DataTable2
   \   0000000A   0x680A             LDR      R2,[R1, #0]
   \   0000000C   0x6002             STR      R2,[R0, #+0]
     82              u8              groupunm;
     83              u8              chnum;
     84              u8              phasenum;
     85              u8              disbuf[10];
     86              
     87              //计算占空比的组及通道号
     88              if(     times > (DIS_MAX_ERR_NUM-1) 
     89                 &&   times < DIS_MAX_ERR_NUM + 6){
   \   0000000E   0x....             LDR.N    R0,??DataTable2_1
   \   00000010   0x7800             LDRB     R0,[R0, #+0]
   \   00000012   0x1EC0             SUBS     R0,R0,#+3
   \   00000014   0x2806             CMP      R0,#+6
   \   00000016   0xD215             BCS.N    ??LkjDisplayInfo_0
     90                  groupunm = (times - (DIS_MAX_ERR_NUM  ))/2;     //DIS_MAX_ERR_NUM  +1 是由于 times++的
   \   00000018   0x....             LDR.N    R0,??DataTable2_1
   \   0000001A   0x7800             LDRB     R0,[R0, #+0]
   \   0000001C   0x1EC0             SUBS     R0,R0,#+3
   \   0000001E   0x2102             MOVS     R1,#+2
   \   00000020   0xFB90 0xF5F1      SDIV     R5,R0,R1
     91                  chnum    = (times - (DIS_MAX_ERR_NUM ))%2;
   \   00000024   0x....             LDR.N    R0,??DataTable2_1
   \   00000026   0x7800             LDRB     R0,[R0, #+0]
   \   00000028   0x1EC0             SUBS     R0,R0,#+3
   \   0000002A   0x2102             MOVS     R1,#+2
   \   0000002C   0xFB90 0xF6F1      SDIV     R6,R0,R1
   \   00000030   0xFB06 0x0611      MLS      R6,R6,R1,R0
     92                  
     93                  if(groupunm > 2)        //防越界
   \   00000034   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000036   0x2D03             CMP      R5,#+3
   \   00000038   0xDB00             BLT.N    ??LkjDisplayInfo_1
     94                      groupunm = 0;
   \   0000003A   0x2500             MOVS     R5,#+0
     95                  if(chnum > 1)
   \                     ??LkjDisplayInfo_1: (+1)
   \   0000003C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000003E   0x2E02             CMP      R6,#+2
   \   00000040   0xDB00             BLT.N    ??LkjDisplayInfo_0
     96                      chnum = 0;
   \   00000042   0x2600             MOVS     R6,#+0
     97          
     98              }
     99              //计算相位差组号
    100              if(times > (DIS_MAX_ERR_NUM + 6 -1)){
   \                     ??LkjDisplayInfo_0: (+1)
   \   00000044   0x....             LDR.N    R0,??DataTable2_1
   \   00000046   0x7800             LDRB     R0,[R0, #+0]
   \   00000048   0x2809             CMP      R0,#+9
   \   0000004A   0xDB07             BLT.N    ??LkjDisplayInfo_2
    101                  phasenum = (times - DIS_MAX_ERR_NUM -6);
   \   0000004C   0x....             LDR.N    R0,??DataTable2_1
   \   0000004E   0x7800             LDRB     R0,[R0, #+0]
   \   00000050   0xF1B0 0x0709      SUBS     R7,R0,#+9
    102                  
    103                  if(phasenum  > 2)      //防越界
   \   00000054   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000056   0x2F03             CMP      R7,#+3
   \   00000058   0xDB00             BLT.N    ??LkjDisplayInfo_2
    104                      phasenum = 0;
   \   0000005A   0x2700             MOVS     R7,#+0
    105              }
    106          
    107              switch(times % mod)
   \                     ??LkjDisplayInfo_2: (+1)
   \   0000005C   0x....             LDR.N    R0,??DataTable2_1
   \   0000005E   0x7800             LDRB     R0,[R0, #+0]
   \   00000060   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000062   0xFB90 0xF1F4      SDIV     R1,R0,R4
   \   00000066   0xFB04 0x0011      MLS      R0,R4,R1,R0
   \   0000006A   0x2800             CMP      R0,#+0
   \   0000006C   0xD00A             BEQ.N    ??LkjDisplayInfo_3
   \   0000006E   0x1E40             SUBS     R0,R0,#+1
   \   00000070   0xD00D             BEQ.N    ??LkjDisplayInfo_4
   \   00000072   0x1E40             SUBS     R0,R0,#+1
   \   00000074   0xD010             BEQ.N    ??LkjDisplayInfo_5
   \   00000076   0x1E40             SUBS     R0,R0,#+1
   \   00000078   0x2805             CMP      R0,#+5
   \   0000007A   0xD913             BLS.N    ??LkjDisplayInfo_6
   \   0000007C   0x1F80             SUBS     R0,R0,#+6
   \   0000007E   0x2802             CMP      R0,#+2
   \   00000080   0xD946             BLS.N    ??LkjDisplayInfo_7
   \   00000082   0xE079             B.N      ??LkjDisplayInfo_8
    108              {
    109                  case 0:
    110                      times++;
   \                     ??LkjDisplayInfo_3: (+1)
   \   00000084   0x....             LDR.N    R0,??DataTable2_1
   \   00000086   0x7800             LDRB     R0,[R0, #+0]
   \   00000088   0x1C40             ADDS     R0,R0,#+1
   \   0000008A   0x....             LDR.N    R1,??DataTable2_1
   \   0000008C   0x7008             STRB     R0,[R1, #+0]
    111                      //if()      //有故障，显示故障
    112                      //break;
    113                  case 1:
    114                      times++;
   \                     ??LkjDisplayInfo_4: (+1)
   \   0000008E   0x....             LDR.N    R0,??DataTable2_1
   \   00000090   0x7800             LDRB     R0,[R0, #+0]
   \   00000092   0x1C40             ADDS     R0,R0,#+1
   \   00000094   0x....             LDR.N    R1,??DataTable2_1
   \   00000096   0x7008             STRB     R0,[R1, #+0]
    115                      //if()      //有故障，显示故障
    116                      //break;
    117                  case 2:
    118                      times++;
   \                     ??LkjDisplayInfo_5: (+1)
   \   00000098   0x....             LDR.N    R0,??DataTable2_1
   \   0000009A   0x7800             LDRB     R0,[R0, #+0]
   \   0000009C   0x1C40             ADDS     R0,R0,#+1
   \   0000009E   0x....             LDR.N    R1,??DataTable2_1
   \   000000A0   0x7008             STRB     R0,[R1, #+0]
    119                      //if()      //有故障，显示故障
    120                      break;     
   \   000000A2   0xE06C             B.N      ??LkjDisplayInfo_9
    121                  case 3:         //通道1，占空比
    122                  case 4:         //通道2，占空比
    123                  case 5:         //通道3，占空比
    124                  case 6:         //通道4，占空比
    125                  case 7:         //通道5，占空比 
    126                  case 8:         //通道5，占空比 
    127                      times++;
   \                     ??LkjDisplayInfo_6: (+1)
   \   000000A4   0x....             LDR.N    R0,??DataTable2_1
   \   000000A6   0x7800             LDRB     R0,[R0, #+0]
   \   000000A8   0x1C40             ADDS     R0,R0,#+1
   \   000000AA   0x....             LDR.N    R1,??DataTable2_1
   \   000000AC   0x7008             STRB     R0,[R1, #+0]
    128                      snprintf((char *)disbuf,6,"%3d.%1d",Ctrl.Rec.speed[groupunm].ch[chnum].ratio/100,(Ctrl.Rec.speed[groupunm].ch[chnum].ratio%100)/10);
   \   000000AE   0x....             LDR.N    R0,??DataTable2_2
   \   000000B0   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000B2   0x211C             MOVS     R1,#+28
   \   000000B4   0xFB01 0x0005      MLA      R0,R1,R5,R0
   \   000000B8   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000BA   0x210A             MOVS     R1,#+10
   \   000000BC   0xFB01 0x0006      MLA      R0,R1,R6,R0
   \   000000C0   0xF8B0 0x0082      LDRH     R0,[R0, #+130]
   \   000000C4   0x2164             MOVS     R1,#+100
   \   000000C6   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   000000CA   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   000000CE   0x210A             MOVS     R1,#+10
   \   000000D0   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000D4   0x9000             STR      R0,[SP, #+0]
   \   000000D6   0x....             LDR.N    R0,??DataTable2_2
   \   000000D8   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000DA   0x211C             MOVS     R1,#+28
   \   000000DC   0xFB01 0x0005      MLA      R0,R1,R5,R0
   \   000000E0   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000E2   0x210A             MOVS     R1,#+10
   \   000000E4   0xFB01 0x0006      MLA      R0,R1,R6,R0
   \   000000E8   0xF8B0 0x0082      LDRH     R0,[R0, #+130]
   \   000000EC   0x2164             MOVS     R1,#+100
   \   000000EE   0xFB90 0xF3F1      SDIV     R3,R0,R1
   \   000000F2   0x....             LDR.N    R2,??DataTable2_3
   \   000000F4   0x2106             MOVS     R1,#+6
   \   000000F6   0xA802             ADD      R0,SP,#+8
   \   000000F8   0x.... 0x....      BL       snprintf
    129                      uprintf("CH%d-%s",(groupunm*2 + chnum +1),disbuf);
   \   000000FC   0xAA02             ADD      R2,SP,#+8
   \   000000FE   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000100   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000102   0xEB16 0x0045      ADDS     R0,R6,R5, LSL #+1
   \   00000106   0x1C41             ADDS     R1,R0,#+1
   \   00000108   0x....             LDR.N    R0,??DataTable2_4
   \   0000010A   0x.... 0x....      BL       uprintf
    130                      break;  
   \   0000010E   0xE036             B.N      ??LkjDisplayInfo_9
    131                      
    132                  case 9:         //A组，相位差
    133                  case 10:        //B组，相位差
    134                  case 11:        //C组，相位差
    135                      times++;
   \                     ??LkjDisplayInfo_7: (+1)
   \   00000110   0x....             LDR.N    R0,??DataTable2_1
   \   00000112   0x7800             LDRB     R0,[R0, #+0]
   \   00000114   0x1C40             ADDS     R0,R0,#+1
   \   00000116   0x....             LDR.N    R1,??DataTable2_1
   \   00000118   0x7008             STRB     R0,[R1, #+0]
    136                      
    137                      snprintf((char *)disbuf,6,"%3d.%1d",Ctrl.Rec.speed[phasenum].phase/100,(Ctrl.Rec.speed[phasenum].phase%100)/10);
   \   0000011A   0x....             LDR.N    R0,??DataTable2_2
   \   0000011C   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000011E   0x211C             MOVS     R1,#+28
   \   00000120   0xFB01 0x0007      MLA      R0,R1,R7,R0
   \   00000124   0xF8B0 0x0078      LDRH     R0,[R0, #+120]
   \   00000128   0x2164             MOVS     R1,#+100
   \   0000012A   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   0000012E   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000132   0x210A             MOVS     R1,#+10
   \   00000134   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000138   0x9000             STR      R0,[SP, #+0]
   \   0000013A   0x....             LDR.N    R0,??DataTable2_2
   \   0000013C   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000013E   0x211C             MOVS     R1,#+28
   \   00000140   0xFB01 0x0007      MLA      R0,R1,R7,R0
   \   00000144   0xF8B0 0x0078      LDRH     R0,[R0, #+120]
   \   00000148   0x2164             MOVS     R1,#+100
   \   0000014A   0xFB90 0xF3F1      SDIV     R3,R0,R1
   \   0000014E   0x....             LDR.N    R2,??DataTable2_3
   \   00000150   0x2106             MOVS     R1,#+6
   \   00000152   0xA802             ADD      R0,SP,#+8
   \   00000154   0x.... 0x....      BL       snprintf
    138                      uprintf("CH%c-%s",groupstring[phasenum],disbuf);
   \   00000158   0xAA02             ADD      R2,SP,#+8
   \   0000015A   0xA801             ADD      R0,SP,#+4
   \   0000015C   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000015E   0x5C39             LDRB     R1,[R7, R0]
   \   00000160   0x....             LDR.N    R0,??DataTable2_5
   \   00000162   0x.... 0x....      BL       uprintf
    139                      
    140                      if(times == mod)  //重新循环
   \   00000166   0x....             LDR.N    R0,??DataTable2_1
   \   00000168   0x7800             LDRB     R0,[R0, #+0]
   \   0000016A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000016C   0x42A0             CMP      R0,R4
   \   0000016E   0xD102             BNE.N    ??LkjDisplayInfo_10
    141                          times = 0;
   \   00000170   0x2000             MOVS     R0,#+0
   \   00000172   0x....             LDR.N    R1,??DataTable2_1
   \   00000174   0x7008             STRB     R0,[R1, #+0]
    142                      break;  
   \                     ??LkjDisplayInfo_10: (+1)
   \   00000176   0xE002             B.N      ??LkjDisplayInfo_9
    143                      
    144                  default:
    145                      times = 0;
   \                     ??LkjDisplayInfo_8: (+1)
   \   00000178   0x2000             MOVS     R0,#+0
   \   0000017A   0x....             LDR.N    R1,??DataTable2_1
   \   0000017C   0x7008             STRB     R0,[R1, #+0]
    146                      break;
    147              }
    148          }
   \                     ??LkjDisplayInfo_9: (+1)
   \   0000017E   0xB005             ADD      SP,SP,#+20
   \   00000180   0xBDF0             POP      {R4-R7,PC}       ;; return

   \                                 In section .bss, align 1
   \                     ??times:
   \   00000000                      DS8 1
    149          
    150          /*******************************************************************************
    151           * 名    称： TaskDispEvtProcess
    152           * 功    能： 
    153           * 入口参数： 无
    154           * 出口参数： 无
    155           * 作    者： 无名沈
    156           * 创建日期： 2017/12/5
    157           * 修    改： 
    158           * 修改日期： 
    159           * 备    注： 
    160           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    161          osalEvt  TaskDispEvtProcess(osalTid task_id, osalEvt task_event)
    162          {
   \                     TaskDispEvtProcess: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB08D             SUB      SP,SP,#+52
   \   00000004   0x000C             MOVS     R4,R1
    163              /***********************************************
    164              * 描述： 本任务看门狗标志置位
    165              */
    166              OSSetWdtFlag(( OS_FLAGS     ) WDT_FLAG_DISP);
   \   00000006   0x2008             MOVS     R0,#+8
   \   00000008   0x.... 0x....      BL       OSSetWdtFlag
    167              
    168              /***********************************************
    169              * 描述： 2017/11/27,无名沈：
    170              */
    171              if( task_event & OS_EVT_DISP_TICKS ) {
   \   0000000C   0x07E0             LSLS     R0,R4,#+31
   \   0000000E   0xF140 0x8083      BPL.W    ??TaskDispEvtProcess_0
    172                  OS_TICK         dly;
    173                  OS_TICK         ticks;
    174                  OS_ERR          err;
    175                  
    176                  /***********************************************
    177                  * 描述： 得到系统当前时间
    178                  */
    179                  ticks = OSTimeGet(&err);
   \   00000012   0x4668             MOV      R0,SP
   \   00000014   0x.... 0x....      BL       OSTimeGet
   \   00000018   0x0005             MOVS     R5,R0
    180                  
    181                  /***********************************************
    182                  * 描述： 根据显示模式显示
    183                  */
    184                  switch(dis_mode) {
   \   0000001A   0x....             LDR.N    R0,??DataTable2_6
   \   0000001C   0x7800             LDRB     R0,[R0, #+0]
   \   0000001E   0x2800             CMP      R0,#+0
   \   00000020   0xD005             BEQ.N    ??TaskDispEvtProcess_1
   \   00000022   0x2802             CMP      R0,#+2
   \   00000024   0xD025             BEQ.N    ??TaskDispEvtProcess_2
   \   00000026   0xD30B             BCC.N    ??TaskDispEvtProcess_3
   \   00000028   0x2803             CMP      R0,#+3
   \   0000002A   0xD031             BEQ.N    ??TaskDispEvtProcess_4
   \   0000002C   0xE045             B.N      ??TaskDispEvtProcess_5
    185                      /*******************************************************************
    186                      * 描述： 全亮
    187                      */
    188                  case 0:                                            
    189                      dis_mode++;
   \                     ??TaskDispEvtProcess_1: (+1)
   \   0000002E   0x....             LDR.N    R0,??DataTable2_6
   \   00000030   0x7800             LDRB     R0,[R0, #+0]
   \   00000032   0x1C40             ADDS     R0,R0,#+1
   \   00000034   0x....             LDR.N    R1,??DataTable2_6
   \   00000036   0x7008             STRB     R0,[R1, #+0]
    190                      uprintf("8.8.8.8.8.8.8.8.");
   \   00000038   0x....             LDR.N    R0,??DataTable2_7
   \   0000003A   0x.... 0x....      BL       uprintf
    191          
    192                      break;
   \   0000003E   0xE03E             B.N      ??TaskDispEvtProcess_6
    193                      /*******************************************************************
    194                      * 描述： 显示装置时间:时分秒
    195                      */            
    196                  case 1: 
    197                      dis_mode++;
   \                     ??TaskDispEvtProcess_3: (+1)
   \   00000040   0x....             LDR.N    R0,??DataTable2_6
   \   00000042   0x7800             LDRB     R0,[R0, #+0]
   \   00000044   0x1C40             ADDS     R0,R0,#+1
   \   00000046   0x....             LDR.N    R1,??DataTable2_6
   \   00000048   0x7008             STRB     R0,[R1, #+0]
    198          
    199                      tm_now  = TIME_GetCalendarTime(); 
   \   0000004A   0xA801             ADD      R0,SP,#+4
   \   0000004C   0x.... 0x....      BL       TIME_GetCalendarTime
   \   00000050   0x....             LDR.N    R0,??DataTable2_8
   \   00000052   0xA901             ADD      R1,SP,#+4
   \   00000054   0x222C             MOVS     R2,#+44
   \   00000056   0x.... 0x....      BL       __aeabi_memcpy4
    200                      uprintf("%02d-%02d-%02d",
    201                              tm_now.tm_year-2000,
    202                              tm_now.tm_mon,
    203                              tm_now.tm_mday );
   \   0000005A   0x....             LDR.N    R0,??DataTable2_8
   \   0000005C   0x68C3             LDR      R3,[R0, #+12]
   \   0000005E   0x....             LDR.N    R0,??DataTable2_8
   \   00000060   0x6902             LDR      R2,[R0, #+16]
   \   00000062   0x....             LDR.N    R0,??DataTable2_8
   \   00000064   0x6940             LDR      R0,[R0, #+20]
   \   00000066   0xF5B0 0x61FA      SUBS     R1,R0,#+2000
   \   0000006A   0x....             LDR.N    R0,??DataTable2_9
   \   0000006C   0x.... 0x....      BL       uprintf
    204                      break;
   \   00000070   0xE025             B.N      ??TaskDispEvtProcess_6
    205                      /*******************************************************************
    206                      * 描述： 显示装置时间:时分秒
    207                      */
    208                  case 2: 
    209                      dis_mode++;
   \                     ??TaskDispEvtProcess_2: (+1)
   \   00000072   0x....             LDR.N    R0,??DataTable2_6
   \   00000074   0x7800             LDRB     R0,[R0, #+0]
   \   00000076   0x1C40             ADDS     R0,R0,#+1
   \   00000078   0x....             LDR.N    R1,??DataTable2_6
   \   0000007A   0x7008             STRB     R0,[R1, #+0]
    210                      
    211                      uprintf("%02d-%02d-%02d",
    212                              tm_now.tm_hour,
    213                              tm_now.tm_min,
    214                              tm_now.tm_sec);  
   \   0000007C   0x....             LDR.N    R0,??DataTable2_8
   \   0000007E   0x6803             LDR      R3,[R0, #+0]
   \   00000080   0x....             LDR.N    R0,??DataTable2_8
   \   00000082   0x6842             LDR      R2,[R0, #+4]
   \   00000084   0x....             LDR.N    R0,??DataTable2_8
   \   00000086   0x6881             LDR      R1,[R0, #+8]
   \   00000088   0x....             LDR.N    R0,??DataTable2_9
   \   0000008A   0x.... 0x....      BL       uprintf
    215                      break;
   \   0000008E   0xE016             B.N      ??TaskDispEvtProcess_6
    216                      /*******************************************************************
    217                      * 描述： 显示软件版本
    218                      *        
    219                      */
    220                  case 3: 
    221                      dis_mode++;
   \                     ??TaskDispEvtProcess_4: (+1)
   \   00000090   0x....             LDR.N    R0,??DataTable2_6
   \   00000092   0x7800             LDRB     R0,[R0, #+0]
   \   00000094   0x1C40             ADDS     R0,R0,#+1
   \   00000096   0x....             LDR.N    R1,??DataTable2_6
   \   00000098   0x7008             STRB     R0,[R1, #+0]
    222                          uprintf("SV_%2d.%02d",Ctrl.sProductInfo.SwVer/100,Ctrl.sProductInfo.SwVer%100);  
   \   0000009A   0x....             LDR.N    R0,??DataTable2_2
   \   0000009C   0x8DC0             LDRH     R0,[R0, #+46]
   \   0000009E   0x2164             MOVS     R1,#+100
   \   000000A0   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   000000A4   0xFB01 0x0212      MLS      R2,R1,R2,R0
   \   000000A8   0x....             LDR.N    R0,??DataTable2_2
   \   000000AA   0x8DC0             LDRH     R0,[R0, #+46]
   \   000000AC   0x2164             MOVS     R1,#+100
   \   000000AE   0xFB90 0xF1F1      SDIV     R1,R0,R1
   \   000000B2   0x....             LDR.N    R0,??DataTable2_10
   \   000000B4   0x.... 0x....      BL       uprintf
    223                      break;
   \   000000B8   0xE001             B.N      ??TaskDispEvtProcess_6
    224          
    225                  default: 
    226                      
    227                      LkjDisplayInfo();       //正常运行时显示内容
   \                     ??TaskDispEvtProcess_5: (+1)
   \   000000BA   0x.... 0x....      BL       LkjDisplayInfo
    228                      break;
    229                  }
    230                  /***********************************************
    231                  * 描述： 2018/1/30,无名沈：增加亮度调节,亮度值改变，调整亮度。 
    232                  */
    233                  static  int displevel = 10;  
    234                  if(Ctrl.sRunPara.SysSts.DispLevel != displevel)
   \                     ??TaskDispEvtProcess_6: (+1)
   \   000000BE   0x....             LDR.N    R0,??DataTable2_2
   \   000000C0   0xF890 0x0056      LDRB     R0,[R0, #+86]
   \   000000C4   0xF010 0x000F      ANDS     R0,R0,#0xF
   \   000000C8   0x....             LDR.N    R1,??DataTable2_11
   \   000000CA   0x6809             LDR      R1,[R1, #+0]
   \   000000CC   0x4288             CMP      R0,R1
   \   000000CE   0xD00D             BEQ.N    ??TaskDispEvtProcess_7
    235                  {
    236                      BSP_DispSetBrightness(Ctrl.sRunPara.SysSts.DispLevel); 
   \   000000D0   0x....             LDR.N    R0,??DataTable2_2
   \   000000D2   0xF890 0x0056      LDRB     R0,[R0, #+86]
   \   000000D6   0xF010 0x000F      ANDS     R0,R0,#0xF
   \   000000DA   0x.... 0x....      BL       BSP_DispSetBrightness
    237                      displevel = Ctrl.sRunPara.SysSts.DispLevel;
   \   000000DE   0x....             LDR.N    R0,??DataTable2_2
   \   000000E0   0xF890 0x0056      LDRB     R0,[R0, #+86]
   \   000000E4   0xF010 0x000F      ANDS     R0,R0,#0xF
   \   000000E8   0x....             LDR.N    R1,??DataTable2_11
   \   000000EA   0x6008             STR      R0,[R1, #+0]
    238                  }
    239                  /***********************************************
    240                  * 描述： 去除任务运行的时间，等到一个控制周期里剩余需要延时的时间
    241                  */
    242                  dly   = CYCLE_TIME_TICKS - ( OSTimeGet(&err) - ticks );
   \                     ??TaskDispEvtProcess_7: (+1)
   \   000000EC   0x4668             MOV      R0,SP
   \   000000EE   0x.... 0x....      BL       OSTimeGet
   \   000000F2   0xF5D0 0x707A      RSBS     R0,R0,#+1000
   \   000000F6   0x182A             ADDS     R2,R5,R0
    243                  if ( dly  < 1 ) {
   \   000000F8   0x2A00             CMP      R2,#+0
   \   000000FA   0xD101             BNE.N    ??TaskDispEvtProcess_8
    244                      dly = 1;
   \   000000FC   0x2201             MOVS     R2,#+1
   \   000000FE   0xE004             B.N      ??TaskDispEvtProcess_9
    245                  } else if ( dly > CYCLE_TIME_TICKS ) {
   \                     ??TaskDispEvtProcess_8: (+1)
   \   00000100   0xF5B2 0x7F7A      CMP      R2,#+1000
   \   00000104   0xD901             BLS.N    ??TaskDispEvtProcess_9
    246                      dly = CYCLE_TIME_TICKS;
   \   00000106   0xF44F 0x727A      MOV      R2,#+1000
    247                  } 
    248                  
    249                  osal_start_timerEx( OS_TASK_ID_DISP,
    250                                     OS_EVT_DISP_TICKS,
    251                                     dly);
   \                     ??TaskDispEvtProcess_9: (+1)
   \   0000010A   0x2101             MOVS     R1,#+1
   \   0000010C   0x2003             MOVS     R0,#+3
   \   0000010E   0x.... 0x....      BL       osal_start_timerEx
    252                  
    253                  return ( task_event ^ OS_EVT_DISP_TICKS );
   \   00000112   0xF094 0x0001      EORS     R0,R4,#0x1
   \   00000116   0xE000             B.N      ??TaskDispEvtProcess_10
    254              }
    255              
    256              return 0;
   \                     ??TaskDispEvtProcess_0: (+1)
   \   00000118   0x2000             MOVS     R0,#+0
   \                     ??TaskDispEvtProcess_10: (+1)
   \   0000011A   0xB00D             ADD      SP,SP,#+52
   \   0000011C   0xBD30             POP      {R4,R5,PC}       ;; return
    257          }

   \                                 In section .data, align 4
   \                     ??displevel:
   \   00000000   0x0000000A         DC32 10
    258          
    259          /*******************************************************************************
    260           * 名    称： App_DispDelay
    261           * 功    能： 将显示任务挂起一段时间，用来显示其他内容
    262           * 入口参数： 无
    263           * 出口参数： 无
    264           * 作    者： 无名沈
    265           * 创建日期： 2017/12/20
    266           * 修    改： 
    267           * 修改日期： 
    268           * 备    注： 
    269           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    270          void App_DispDelay( osalTime dly)
    271          {    
   \                     App_DispDelay: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    272              osal_start_timerEx( OS_TASK_ID_DISP,
    273                                  OS_EVT_DISP_TICKS,
    274                                  dly);
   \   00000002   0x0002             MOVS     R2,R0
   \   00000004   0x2101             MOVS     R1,#+1
   \   00000006   0x2003             MOVS     R0,#+3
   \   00000008   0x.... 0x....      BL       osal_start_timerEx
    275          }
   \   0000000C   0xBD01             POP      {R0,PC}          ;; return
    276          
    277          /*******************************************************************************
    278           * 名    称： APP_DispInit
    279           * 功    能： 任务初始化
    280           * 入口参数： 无
    281           * 出口参数： 无
    282           * 作　 　者： wumingshen.
    283           * 创建日期： 2015-12-08
    284           * 修    改：
    285           * 修改日期：
    286           *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    287          void TaskInitDisp(void)
    288          {    
   \                     TaskInitDisp: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    289              /***********************************************
    290              * 描述： 初始化本任务用到的相关硬件
    291              */
    292              BSP_DispInit();
   \   00000002   0x.... 0x....      BL       BSP_DispInit
    293              /***********************************************
    294              * 描述： 2017/12/3,无名沈：关闭显示
    295              */
    296              BSP_DispOff();
   \   00000006   0x.... 0x....      BL       BSP_DispOff
    297              /***********************************************
    298              * 描述： 2018/1/30,无名沈：增加亮度调节默认参数
    299              */
    300              if ( Ctrl.sRunPara.SysSts.DispLevel == 0 )
   \   0000000A   0x....             LDR.N    R0,??DataTable2_2
   \   0000000C   0xF890 0x0056      LDRB     R0,[R0, #+86]
   \   00000010   0xF010 0x000F      ANDS     R0,R0,#0xF
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD108             BNE.N    ??TaskInitDisp_0
    301                   Ctrl.sRunPara.SysSts.DispLevel = 10;
   \   00000018   0x200A             MOVS     R0,#+10
   \   0000001A   0x....             LDR.N    R1,??DataTable2_2
   \   0000001C   0xF8B1 0x1056      LDRH     R1,[R1, #+86]
   \   00000020   0xF360 0x0103      BFI      R1,R0,#+0,#+4
   \   00000024   0x....             LDR.N    R0,??DataTable2_2
   \   00000026   0xF8A0 0x1056      STRH     R1,[R0, #+86]
    302              /***********************************************
    303              * 描述： 2017/12/3,无名沈：设置显示亮度
    304              */
    305              BSP_DispSetBrightness(Ctrl.sRunPara.SysSts.DispLevel);
   \                     ??TaskInitDisp_0: (+1)
   \   0000002A   0x....             LDR.N    R0,??DataTable2_2
   \   0000002C   0xF890 0x0056      LDRB     R0,[R0, #+86]
   \   00000030   0xF010 0x000F      ANDS     R0,R0,#0xF
   \   00000034   0x.... 0x....      BL       BSP_DispSetBrightness
    306              /***********************************************
    307              * 描述： 2017/12/3,无名沈：清除所有显示
    308              */
    309              BSP_DispClrAll();
   \   00000038   0x.... 0x....      BL       BSP_DispClrAll
    310              /***********************************************
    311              * 描述： 2017/12/3,无名沈：开机所有数码管显示8
    312              */
    313              uprintf("8.8.8.8.8.8.8.8."); 
   \   0000003C   0x....             LDR.N    R0,??DataTable2_7
   \   0000003E   0x.... 0x....      BL       uprintf
    314              BSP_DispEvtProcess(); 
   \   00000042   0x.... 0x....      BL       BSP_DispEvtProcess
    315              
    316              /***********************************************
    317              * 描述： 在看门狗标志组注册本任务的看门狗标志
    318              */
    319              OSRegWdtFlag(( OS_FLAGS     )WDT_FLAG_DISP );
   \   00000046   0x2008             MOVS     R0,#+8
   \   00000048   0x.... 0x....      BL       OSRegWdtFlag
    320              
    321              /*************************************************
    322              * 描述：启动事件查询
    323              */
    324              osal_start_timerEx( OS_TASK_ID_DISP,
    325                                  OS_EVT_DISP_TICKS,
    326                                  OS_TICKS_PER_SEC);
   \   0000004C   0xF44F 0x727A      MOV      R2,#+1000
   \   00000050   0x2101             MOVS     R1,#+1
   \   00000052   0x2003             MOVS     R0,#+3
   \   00000054   0x.... 0x....      BL       osal_start_timerEx
    327              
    328          }
   \   00000058   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     ??times

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     Ctrl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x........         DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x........         DC32     dis_mode

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x........         DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0x........         DC32     tm_now

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_9:
   \   00000000   0x........         DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_10:
   \   00000000   0x........         DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_11:
   \   00000000   0x........         DC32     ??displevel

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x41 0x42          DC8 "ABC"
   \              0x43 0x00    

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x25 0x33          DC8 "%3d.%1d"
   \              0x64 0x2E    
   \              0x25 0x31    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x43 0x48          DC8 "CH%d-%s"
   \              0x25 0x64    
   \              0x2D 0x25    
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0x43 0x48          DC8 "CH%c-%s"
   \              0x25 0x63    
   \              0x2D 0x25    
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     ?_4:
   \   00000000   0x38 0x2E          DC8 "8.8.8.8.8.8.8.8."
   \              0x38 0x2E    
   \              0x38 0x2E    
   \              0x38 0x2E    
   \              0x38 0x2E    
   \              0x38 0x2E    
   \              0x38 0x2E    
   \              0x38 0x2E    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_5:
   \   00000000   0x25 0x30          DC8 "%02d-%02d-%02d"
   \              0x32 0x64    
   \              0x2D 0x25    
   \              0x30 0x32    
   \              0x64 0x2D    
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_6:
   \   00000000   0x53 0x56          DC8 "SV_%2d.%02d"
   \              0x5F 0x25    
   \              0x32 0x64    
   \              0x2E 0x25    
   \              0x30 0x32    
   \              0x64 0x00    
    329          
    330          
    331          /*******************************************************************************
    332           * 				                    end of file                                *
    333           *******************************************************************************/
    334          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   App_DispDelay
         8   -> osal_start_timerEx
      40   LkjDisplayInfo
        40   -> snprintf
        40   -> uprintf
      64   TaskDispEvtProcess
        64   -> BSP_DispSetBrightness
        64   -> LkjDisplayInfo
        64   -> OSSetWdtFlag
        64   -> OSTimeGet
        64   -> TIME_GetCalendarTime
        64   -> __aeabi_memcpy4
        64   -> osal_start_timerEx
        64   -> uprintf
       8   TaskInitDisp
         8   -> BSP_DispClrAll
         8   -> BSP_DispEvtProcess
         8   -> BSP_DispInit
         8   -> BSP_DispOff
         8   -> BSP_DispSetBrightness
         8   -> OSRegWdtFlag
         8   -> osal_start_timerEx
         8   -> uprintf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_10
       4  ??DataTable2_11
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  ??DataTable2_9
       4  ?_0
       8  ?_1
       8  ?_2
       8  ?_3
      20  ?_4
      16  ?_5
      12  ?_6
      14  App_DispDelay
       2  ErrCode
     386  LkjDisplayInfo
     286  TaskDispEvtProcess
      90  TaskInitDisp
       1  dis_mode
       4  displevel
       1  times

 
   4 bytes in section .bss
   4 bytes in section .data
  76 bytes in section .rodata
 824 bytes in section .text
 
 824 bytes of CODE  memory
  76 bytes of CONST memory
   8 bytes of DATA  memory

Errors: none
Warnings: none
