###############################################################################
#
# IAR ANSI C/C++ Compiler V7.50.1.10123/W32 for ARM       15/Jul/2018  10:36:16
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\iar\NC210\NC210-200处理板\source\task\APP_task_osal_store.c
#    Command line =  
#        F:\iar\NC210\NC210-200处理板\source\task\APP_task_osal_store.c -D
#        USE_STDPERIPH_DRIVER -D APP_RELEASE -lCN
#        F:\iar\NC210\NC210-200处理板\project\app_release\List -o
#        F:\iar\NC210\NC210-200处理板\project\app_release\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M3 -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.3\arm\INC\c\DLib_Config_Full.h" -I
#        F:\iar\NC210\NC210-200处理板\project\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\config\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\task\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\user\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\OSAL\OS\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\OSAL\Ports\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\driver\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-LIB\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-CPU\ -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uCOS-III\Source\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\IAR\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\ST\STM32\inc\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\OS\uCOS-III\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\EvalBoards\Micrium\uC-Eval-STM32F107\BSP\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-MB\Cfg\Template\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-MB\OS\uCOS-III\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-MB\Ports\STM32\STM32F103\IAR\
#        -I
#        F:\iar\NC210\NC210-200处理板\project\..\source\Software\uC-MB\Source\
#        -Ol --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.3\arm\CMSIS\Include\"
#    List file    =  
#        F:\iar\NC210\NC210-200处理板\project\app_release\List\APP_task_osal_store.lst
#    Object file  =  
#        F:\iar\NC210\NC210-200处理板\project\app_release\Obj\APP_task_osal_store.o
#
###############################################################################

F:\iar\NC210\NC210-200处理板\source\task\APP_task_osal_store.c
      1          /*******************************************************************************
      2          * Description  : 数据记录存储及读取操作
      3          * Author       : 2018/5/15 星期二, by redmorningcn
      4          *******************************************************************************/
      5          
      6          
      7          /*******************************************************************************
      8          * INCLUDES
      9          */
     10          #include <includes.h>
     11          #include <string.h>
     12          
     13          #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
     14          const  CPU_CHAR  *app_task_store__c = "$Id: $";
     15          #endif
     16          
     17          #define APP_TASK_STORE_EN     DEF_ENABLED
     18          #if APP_TASK_STORE_EN == DEF_ENABLED
     19          /*******************************************************************************
     20          * CONSTANTS
     21          */
     22          
     23          /*******************************************************************************
     24          * MACROS
     25          */
     26          #define	START_EVT		        31
     27          #define MAX_STORE_TYPE          10
     28          
     29          /*******************************************************************************
     30          * TYPEDEFS
     31          */
     32          
     33          /*******************************************************************************
     34          * LOCAL VARIABLES
     35          */
     36          
     37          /*******************************************************************************
     38          * GLOBAL VARIABLES
     39          */
     40          
     41          /*******************************************************************************
     42          * LOCAL FUNCTIONS
     43          */
     44          
     45          
     46          /*******************************************************************************
     47          * GLOBAL FUNCTIONS
     48          */
     49          
     50          /*******************************************************************************
     51          * EXTERN VARIABLES
     52          */
     53          
     54          
     55          #if (UCOS_EN     == DEF_ENABLED)
     56          
     57          #if OS_VERSION > 30000U

   \                                 In section .bss, align 4
     58          static  OS_SEM			Bsp_FlashSem;    	//信号量
   \                     Bsp_FlashSem:
   \   00000000                      DS8 40
     59          #else
     60          static  OS_EVENT      *Bsp_FlashSem;       //信号量
     61          #endif
     62          
     63          /*******************************************************************************
     64          * 名    称： BSP_FlashWaitEvent
     65          * 功    能： 等待信号量
     66          * 入口参数： 无
     67          * 出口参数： 0（操作有误），1（操作成功）
     68          * 作    者： redmorningcn
     69          * 创建日期： 2017-05-15
     70          * 修    改：
     71          * 修改日期：
     72          * 备    注： 仅在使用UCOS操作系统时使用
     73          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     74          u8 BSP_FlashOsInit(void)
     75          {    
   \                     BSP_FlashOsInit: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     76              /***********************************************
     77              * 描述： OS接口
     78              */
     79          #if (UCOS_EN     == DEF_ENABLED)
     80          #if OS_VERSION > 30000U
     81              BSP_OS_SemCreate(&Bsp_FlashSem,1, "Bsp_FlashSem");      // 创建信号量
   \   00000002   0x.... 0x....      LDR.W    R2,??DataTable7
   \   00000006   0x2101             MOVS     R1,#+1
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable7_1
   \   0000000C   0x.... 0x....      BL       BSP_OS_SemCreate
     82          #else
     83              Bsp_FramSem     = OSSemCreate(1);                       // 创建信号量
     84          #endif
     85          #endif 
     86              return TRUE;
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0xBD02             POP      {R1,PC}          ;; return
     87          }
     88          
     89          /*******************************************************************************
     90          * 名    称： BSP_FlashWaitEvent
     91          * 功    能： 等待信号量
     92          * 入口参数： 无
     93          * 出口参数： 0（操作有误），1（操作成功）
     94          * 作    者： redmorningcn
     95          * 创建日期： 2017-05-15
     96          * 修    改：
     97          * 修改日期：
     98          * 备    注： 仅在使用UCOS操作系统时使用
     99          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    100          static u8 BSP_FlashWaitEvent(void)
    101          {
   \                     BSP_FlashWaitEvent: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    102              /***********************************************
    103              * 描述： OS接口
    104              */
    105              return BSP_OS_SemWait(&Bsp_FlashSem,0); 
   \   00000002   0x2100             MOVS     R1,#+0
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable7_1
   \   00000008   0x.... 0x....      BL       BSP_OS_SemWait
   \   0000000C   0xBD02             POP      {R1,PC}          ;; return
    106          }
    107          /*******************************************************************************
    108          * 名    称： FRAM_SendEvent
    109          * 功    能： 释放信号量
    110          * 入口参数： 无
    111          * 出口参数： 无
    112          * 作    者： redmorningcn
    113          * 创建日期： 2017-05-15
    114          * 修    改：
    115          * 修改日期：
    116          * 备    注： 仅在使用UCOS操作系统时使用
    117          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    118          static void BSP_FlashSendEvent(void)
    119          {
   \                     BSP_FlashSendEvent: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    120              BSP_OS_SemPost(&Bsp_FlashSem);                        	// 发送信号量
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable7_1
   \   00000006   0x.... 0x....      BL       BSP_OS_SemPost
    121          }
   \   0000000A   0xBD01             POP      {R0,PC}          ;; return
    122          #endif
    123          /*******************************************************************************/
    124          
    125          u8	    WriteFlshRec(u32 FlshAddr,stcFlshRec *sFlshRec);
    126          void	ReadFlshRec(stcFlshRec * sFlshRec,u32 FlshRecNum);
    127          
    128          /*******************************************************************************
    129          * 名    称： GetRecFlashAddr
    130          * 功    能： 取数据记录地址。
    131          * 入口参数： 存储记录号
    132          * 出口参数： flash存储地址
    133          * 作    者： redmornigcn
    134          * 创建日期： 2017-05-15
    135          * 修    改：
    136          * 修改日期：
    137          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    138          static u32  GetRecFlashAddr(u32 FlshRecNum)
    139          {				
    140              return  (u32)(((FlshRecNum * sizeof(stcFlshRec)) % FLSH_MAX_SIZE)); 			
   \                     GetRecFlashAddr: (+1)
   \   00000000   0x2180             MOVS     R1,#+128
   \   00000002   0xFB01 0xF100      MUL      R1,R1,R0
   \   00000006   0xF05F 0x7200      MOVS     R2,#+33554432
   \   0000000A   0xFBB1 0xF0F2      UDIV     R0,R1,R2
   \   0000000E   0xFB00 0x1012      MLS      R0,R0,R2,R1
   \   00000012   0x4770             BX       LR               ;; return
    141          }
    142          
    143          /*******************************************************************************
    144          * Description  : 数据记录赋值（部分数据在各任务中赋值）
    145          * Author       : 2018/5/17 星期四, by redmorningcn
    146          */

   \                                 In section .text, align 2, keep-with-next
    147          static  void    FmtRecord(void)
    148          {
   \                     FmtRecord: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB08B             SUB      SP,SP,#+44
    149              
    150              if(Ctrl.sRunPara.SysSts.StartFlg    == 1){
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   00000008   0xF8B0 0x0056      LDRH     R0,[R0, #+86]
   \   0000000C   0xF3C0 0x2000      UBFX     R0,R0,#+8,#+1
   \   00000010   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000012   0x2800             CMP      R0,#+0
   \   00000014   0xD00F             BEQ.N    ??FmtRecord_0
    151                  Ctrl.sRunPara.SysSts.StartFlg   = 0;
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   0000001A   0xF8B0 0x0056      LDRH     R0,[R0, #+86]
   \   0000001E   0xF64F 0x61FF      MOVW     R1,#+65279
   \   00000022   0x4008             ANDS     R0,R1,R0
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   00000028   0xF8A1 0x0056      STRH     R0,[R1, #+86]
    152                  Ctrl.Rec.EvtType =  START_EVT;                              //开机事件
   \   0000002C   0x201F             MOVS     R0,#+31
   \   0000002E   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   00000032   0xF881 0x0069      STRB     R0,[R1, #+105]
    153              }
    154              
    155              time_s t_tm  = TIME_GetCalendarTime();                          //取记录时间
   \                     ??FmtRecord_0: (+1)
   \   00000036   0x4668             MOV      R0,SP
   \   00000038   0x.... 0x....      BL       TIME_GetCalendarTime
    156              
    157              Ctrl.Rec.Year   = t_tm.tm_year-2000;
   \   0000003C   0x9805             LDR      R0,[SP, #+20]
   \   0000003E   0xF5B0 0x60FA      SUBS     R0,R0,#+2000
   \   00000042   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   00000046   0xF8D1 0x1072      LDR      R1,[R1, #+114]
   \   0000004A   0xF360 0x619F      BFI      R1,R0,#+26,#+6
   \   0000004E   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   00000052   0xF8C0 0x1072      STR      R1,[R0, #+114]
    158              Ctrl.Rec.Mon    = t_tm.tm_mon;
   \   00000056   0x9804             LDR      R0,[SP, #+16]
   \   00000058   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   0000005C   0xF8D1 0x1072      LDR      R1,[R1, #+114]
   \   00000060   0xF360 0x5199      BFI      R1,R0,#+22,#+4
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   00000068   0xF8C0 0x1072      STR      R1,[R0, #+114]
    159              Ctrl.Rec.Day    = t_tm.tm_mday;	
   \   0000006C   0x9803             LDR      R0,[SP, #+12]
   \   0000006E   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   00000072   0xF8D1 0x1072      LDR      R1,[R1, #+114]
   \   00000076   0xF360 0x4155      BFI      R1,R0,#+17,#+5
   \   0000007A   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   0000007E   0xF8C0 0x1072      STR      R1,[R0, #+114]
    160              Ctrl.Rec.Hour   = t_tm.tm_hour;	
   \   00000082   0x9802             LDR      R0,[SP, #+8]
   \   00000084   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   00000088   0xF8D1 0x1072      LDR      R1,[R1, #+114]
   \   0000008C   0xF360 0x3110      BFI      R1,R0,#+12,#+5
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   00000094   0xF8C0 0x1072      STR      R1,[R0, #+114]
    161              Ctrl.Rec.Min    = t_tm.tm_min;	
   \   00000098   0x9801             LDR      R0,[SP, #+4]
   \   0000009A   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   0000009E   0xF8D1 0x1072      LDR      R1,[R1, #+114]
   \   000000A2   0xF360 0x118B      BFI      R1,R0,#+6,#+6
   \   000000A6   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   000000AA   0xF8C0 0x1072      STR      R1,[R0, #+114]
    162              Ctrl.Rec.Sec    = t_tm.tm_sec;   
   \   000000AE   0x9800             LDR      R0,[SP, #+0]
   \   000000B0   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   000000B4   0xF8D1 0x1072      LDR      R1,[R1, #+114]
   \   000000B8   0xF360 0x0105      BFI      R1,R0,#+0,#+6
   \   000000BC   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   000000C0   0xF8C0 0x1072      STR      R1,[R0, #+114]
    163              
    164              Ctrl.Rec.LocoNbr = Ctrl.sProductInfo.LocoId.Nbr;                //机车信息
   \   000000C4   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   000000C8   0x8D40             LDRH     R0,[R0, #+42]
   \   000000CA   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   000000CE   0xF8A1 0x006C      STRH     R0,[R1, #+108]
    165              Ctrl.Rec.LocoType= Ctrl.sProductInfo.LocoId.Type;                
   \   000000D2   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   000000D6   0x8D00             LDRH     R0,[R0, #+40]
   \   000000D8   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   000000DC   0xF8A1 0x006A      STRH     R0,[R1, #+106]
    166              
    167          }
   \   000000E0   0xB00B             ADD      SP,SP,#+44
   \   000000E2   0xBD00             POP      {PC}             ;; return
    168          
    169          /*******************************************************************************
    170          * 名    称：RoadNum;        		StoreData
    171          * 功    能：RelRoadNum;     		数据存储。根据数据记录号将数据存储到指定
    172          StationNum;    		flash地址;更新记录号等信息。大部分数据记录的
    173          E_StationNum;  		内容在其他任务直接对sCtrl.sRec 中更新。少部分数据内容在该函数中跟新。
    174          * 入口参数：SignalTyp;      	无
    175          * 出口参数：LocoSign;       	无
    176          * 作    者        ： 	redmornigcn
    177          * 创建日期：LocoWorkState;  	2017-05-15
    178          * 修    改：LocoState;     
    179          * 修改日期：
    180          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    181          u8 App_SaveRecord(void)
    182          {	
   \                     App_SaveRecord: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB0A0             SUB      SP,SP,#+128
    183              u32         addr ;	
    184              u16         CRC_sum1;
    185              u16         CRC_sum2;
    186              u16         CRC_sum3;
    187              u16         retrys;
    188              u8          ret;
    189          
    190              stcFlshRec  sRectmp;        //数据记录，临时存储
    191          
    192              /*******************************************************************************
    193              * Description  : 设置记录值
    194              * Author       : 2018/5/17 星期四, by redmorningcn
    195              */
    196              FmtRecord();
   \   00000004   0x.... 0x....      BL       FmtRecord
    197              
    198              retrys = 3;                                                             //错误允许错误次数
   \   00000008   0x2403             MOVS     R4,#+3
    199              
    200              do {
    201                  /*******************************************************************************
    202                  * Description  : 计算flash地址；循环存储
    203                  * Author       : 2018/5/16 星期三, by redmorningcn
    204                  */
    205                  addr = GetRecFlashAddr(Ctrl.sRecNumMgr.Current);
   \                     ??App_SaveRecord_0: (+1)
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   0000000E   0x6900             LDR      R0,[R0, #+16]
   \   00000010   0x.... 0x....      BL       GetRecFlashAddr
   \   00000014   0x0005             MOVS     R5,R0
    206          
    207                  memcpy((u8 *)&sRectmp,(u8 *)&Ctrl.Rec,sizeof(Ctrl.Rec));            //数据拷贝，全局数据变更
   \   00000016   0x2280             MOVS     R2,#+128
   \   00000018   0x.... 0x....      LDR.W    R1,??DataTable7_3
   \   0000001C   0x466E             MOV      R6,SP
   \   0000001E   0x0030             MOVS     R0,R6
   \   00000020   0x.... 0x....      BL       __aeabi_memcpy
    208                  sRectmp.CrcCheck = GetCrc16Chk((u8*)&sRectmp,sizeof(stcFlshRec)-2); //计算校验
   \   00000024   0x217E             MOVS     R1,#+126
   \   00000026   0x4668             MOV      R0,SP
   \   00000028   0x.... 0x....      BL       GetCrc16Chk
   \   0000002C   0xF8AD 0x007E      STRH     R0,[SP, #+126]
    209                  CRC_sum1 = sRectmp.CrcCheck;
   \   00000030   0xF8BD 0x607E      LDRH     R6,[SP, #+126]
    210                  // 数据存储到flash
    211                  ret = WriteFlshRec(addr, (stcFlshRec *)&sRectmp);
   \   00000034   0x4669             MOV      R1,SP
   \   00000036   0x0028             MOVS     R0,R5
   \   00000038   0x.... 0x....      BL       WriteFlshRec
   \   0000003C   0x0005             MOVS     R5,R0
    212                  // 从FLASH中读取出来进行对比
    213                  ReadFlshRec((stcFlshRec *)&sRectmp, Ctrl.sRecNumMgr.Current);
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   00000042   0x6901             LDR      R1,[R0, #+16]
   \   00000044   0x4668             MOV      R0,SP
   \   00000046   0x.... 0x....      BL       ReadFlshRec
    214                  /**************************************************
    215                  * 描述： 数据校验
    216                  */
    217                  CRC_sum2 = GetCrc16Chk((u8*)&sRectmp,sizeof(stcFlshRec)-2);
   \   0000004A   0x217E             MOVS     R1,#+126
   \   0000004C   0x4668             MOV      R0,SP
   \   0000004E   0x.... 0x....      BL       GetCrc16Chk
    218                  CRC_sum3 = sRectmp.CrcCheck; 
   \   00000052   0xF8BD 0x107E      LDRH     R1,[SP, #+126]
    219                  
    220                  if(CRC_sum1 == CRC_sum2 && CRC_sum1 == CRC_sum3) {                                          //数据记录正确,记录编号增加
   \   00000056   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000058   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000005A   0x4286             CMP      R6,R0
   \   0000005C   0xD118             BNE.N    ??App_SaveRecord_1
   \   0000005E   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000060   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000062   0x428E             CMP      R6,R1
   \   00000064   0xD114             BNE.N    ??App_SaveRecord_1
    221                      Ctrl.sRecNumMgr.Current++;          
   \   00000066   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   0000006A   0x6900             LDR      R0,[R0, #+16]
   \   0000006C   0x1C40             ADDS     R0,R0,#+1
   \   0000006E   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   00000072   0x6108             STR      R0,[R1, #+16]
    222                      Ctrl.sRecNumMgr.Record++;
   \   00000074   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   00000078   0x6940             LDR      R0,[R0, #+20]
   \   0000007A   0x1C40             ADDS     R0,R0,#+1
   \   0000007C   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   00000080   0x6148             STR      R0,[R1, #+20]
    223                      Ctrl.Rec.RecordId = Ctrl.sRecNumMgr.Current;                
   \   00000082   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   00000086   0x6900             LDR      R0,[R0, #+16]
   \   00000088   0x....             LDR.N    R1,??DataTable7_2
   \   0000008A   0xF8C1 0x006E      STR      R0,[R1, #+110]
    224                      break;
   \   0000008E   0xE019             B.N      ??App_SaveRecord_2
    225                  }else{
    226                      Ctrl.sRecNumMgr.Current++;                                      //记录跳转  
   \                     ??App_SaveRecord_1: (+1)
   \   00000090   0x....             LDR.N    R0,??DataTable7_2
   \   00000092   0x6900             LDR      R0,[R0, #+16]
   \   00000094   0x1C40             ADDS     R0,R0,#+1
   \   00000096   0x....             LDR.N    R1,??DataTable7_2
   \   00000098   0x6108             STR      R0,[R1, #+16]
    227                      if( retrys == 2 )                                       
   \   0000009A   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000009C   0x2C02             CMP      R4,#+2
   \   0000009E   0xD10D             BNE.N    ??App_SaveRecord_3
    228                      {
    229                          if(Ctrl.sRecNumMgr.Current % (4096/128) != 0)           //翻转一页，再试一次。
   \   000000A0   0x....             LDR.N    R0,??DataTable7_2
   \   000000A2   0x6900             LDR      R0,[R0, #+16]
   \   000000A4   0x2120             MOVS     R1,#+32
   \   000000A6   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   000000AA   0xFB02 0x0211      MLS      R2,R2,R1,R0
   \   000000AE   0x2A00             CMP      R2,#+0
   \   000000B0   0xD004             BEQ.N    ??App_SaveRecord_3
    230                              Ctrl.sRecNumMgr.Current++; 
   \   000000B2   0x....             LDR.N    R0,??DataTable7_2
   \   000000B4   0x6900             LDR      R0,[R0, #+16]
   \   000000B6   0x1C40             ADDS     R0,R0,#+1
   \   000000B8   0x....             LDR.N    R1,??DataTable7_2
   \   000000BA   0x6108             STR      R0,[R1, #+16]
    231                      }
    232                  }
    233              } while ( --retrys );
   \                     ??App_SaveRecord_3: (+1)
   \   000000BC   0x1E64             SUBS     R4,R4,#+1
   \   000000BE   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000C0   0x2C00             CMP      R4,#+0
   \   000000C2   0xD1A2             BNE.N    ??App_SaveRecord_0
    234          
    235              if ( ret == DEF_FALSE || retrys == 0) {                             //报flash错误
   \                     ??App_SaveRecord_2: (+1)
   \   000000C4   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000C6   0x2D00             CMP      R5,#+0
   \   000000C8   0xD002             BEQ.N    ??App_SaveRecord_4
   \   000000CA   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000CC   0x2C00             CMP      R4,#+0
   \   000000CE   0xD108             BNE.N    ??App_SaveRecord_5
    236                  Ctrl.sRunPara.Err.FlashErr     = FALSE;                         //D14=1：存储器故障
   \                     ??App_SaveRecord_4: (+1)
   \   000000D0   0x....             LDR.N    R0,??DataTable7_2
   \   000000D2   0xF8B0 0x0058      LDRH     R0,[R0, #+88]
   \   000000D6   0xF64F 0x31FF      MOVW     R1,#+64511
   \   000000DA   0x4008             ANDS     R0,R1,R0
   \   000000DC   0x....             LDR.N    R1,??DataTable7_2
   \   000000DE   0xF8A1 0x0058      STRH     R0,[R1, #+88]
    237              }
    238          
    239              Ctrl.sRunPara.FramFlg.WrNumMgr = 1;         
   \                     ??App_SaveRecord_5: (+1)
   \   000000E2   0x....             LDR.N    R0,??DataTable7_2
   \   000000E4   0xF8B0 0x004C      LDRH     R0,[R0, #+76]
   \   000000E8   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   000000EC   0x....             LDR.N    R1,??DataTable7_2
   \   000000EE   0xF8A1 0x004C      STRH     R0,[R1, #+76]
    240              osal_set_event( OS_TASK_ID_STORE, OS_EVT_STORE_FRAM);               //通知存参数FRAM
   \   000000F2   0x2102             MOVS     R1,#+2
   \   000000F4   0x2004             MOVS     R0,#+4
   \   000000F6   0x.... 0x....      BL       osal_set_event
    241          
    242              return ret;
   \   000000FA   0x0028             MOVS     R0,R5
   \   000000FC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000FE   0xB020             ADD      SP,SP,#+128
   \   00000100   0xBD70             POP      {R4-R6,PC}       ;; return
    243          }
    244          
    245          /*******************************************************************************
    246          * 名    称： ReadFlshRec
    247          * 功    能： 根据记录号，取数据记录
    248          * 入口参数： 无
    249          * 出口参数： 无
    250          * 作    者： redmornigcn
    251          * 创建日期： 2017-05-15
    252          * 修    改：
    253          * 修改日期：
    254          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    255          void	ReadFlshRec(stcFlshRec * sFlshRec,u32 FlshRecNum)
    256          {
   \                     ReadFlshRec: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    257          	u32		FlshAddr;
    258          	BSP_FlashWaitEvent();
   \   00000006   0x.... 0x....      BL       BSP_FlashWaitEvent
    259              
    260          	FlshAddr = GetRecFlashAddr( FlshRecNum );
   \   0000000A   0x0028             MOVS     R0,R5
   \   0000000C   0x.... 0x....      BL       GetRecFlashAddr
    261          	
    262          	ReadFlsh(FlshAddr,( INT08U * )sFlshRec,sizeof( stcFlshRec ));
   \   00000010   0x2280             MOVS     R2,#+128
   \   00000012   0x0021             MOVS     R1,R4
   \   00000014   0x.... 0x....      BL       ReadFlsh
    263          	
    264          	BSP_FlashSendEvent();
   \   00000018   0x.... 0x....      BL       BSP_FlashSendEvent
    265              
    266          	return	;
   \   0000001C   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    267          }
    268          
    269          /*******************************************************************************
    270          * 名    称： ReadFlshRec
    271          * 功    能： 根据记录号，取数据记录
    272          * 入口参数： 无
    273          * 出口参数： 无
    274          * 作    者： redmornigcn
    275          * 创建日期： 2017-05-15
    276          * 修    改：
    277          * 修改日期：
    278          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    279          u8	WriteFlshRec(u32 FlshAddr,stcFlshRec *sFlshRec)
    280          {
   \                     WriteFlshRec: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    281          	BSP_FlashWaitEvent();
   \   00000006   0x.... 0x....      BL       BSP_FlashWaitEvent
    282              
    283          	u8 ret = WriteFlsh(FlshAddr,(INT08U *)sFlshRec, sizeof(stcFlshRec));
   \   0000000A   0x2280             MOVS     R2,#+128
   \   0000000C   0x0029             MOVS     R1,R5
   \   0000000E   0x0020             MOVS     R0,R4
   \   00000010   0x.... 0x....      BL       WriteFlsh
   \   00000014   0x0004             MOVS     R4,R0
    284          	
    285          	BSP_FlashSendEvent();
   \   00000016   0x.... 0x....      BL       BSP_FlashSendEvent
    286              
    287          	return	ret;
   \   0000001A   0x0020             MOVS     R0,R4
   \   0000001C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001E   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    288          }
    289          
    290          /*******************************************************************************
    291          * 名    称：  TaskInitStore
    292          * 功    能：  任务初始化
    293          * 入口参数： 	无
    294          * 出口参数： 	无
    295          * 作    者： 	redmornigcn
    296          * 创建日期： 	2017-05-15
    297          * 修    改：
    298          * 修改日期：
    299          */

   \                                 In section .text, align 2, keep-with-next
    300          void    BSP_StoreInit(void)
    301          {    
   \                     BSP_StoreInit: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    302              SPI_FLASH_Init();                       //初始化mx25 spi接口
   \   00000002   0x.... 0x....      BL       SPI_FLASH_Init
    303          }
   \   00000006   0xBD01             POP      {R0,PC}          ;; return
    304          
    305          /*******************************************************************************
    306          * Description  : 保存参数
    307          * Author       : 2018/5/16 星期三, by redmorningcn
    308          */

   \                                 In section .text, align 2, keep-with-next
    309          void App_FramPara(void)
    310          {
   \                     App_FramPara: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    311              int     add;
    312              
    313              if(Ctrl.sRunPara.FramFlg.Flags)                                        
   \   00000002   0x....             LDR.N    R0,??DataTable7_2
   \   00000004   0xF8B0 0x004C      LDRH     R0,[R0, #+76]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xF000 0x80C7      BEQ.W    ??App_FramPara_0
    314              {
    315                  /***********************************************************************
    316                  * Description  : 存HEAD
    317                  * Author       : 2018/5/16 星期三, by redmorningcn
    318                  */
    319                  if(Ctrl.sRunPara.FramFlg.WrHead == 1)                               
   \   0000000E   0x....             LDR.N    R0,??DataTable7_2
   \   00000010   0xF890 0x004C      LDRB     R0,[R0, #+76]
   \   00000014   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   00000018   0x2800             CMP      R0,#+0
   \   0000001A   0xD010             BEQ.N    ??App_FramPara_1
    320                  {
    321                      Ctrl.sRunPara.FramFlg.WrHead = 0;
   \   0000001C   0x....             LDR.N    R0,??DataTable7_2
   \   0000001E   0xF8B0 0x004C      LDRH     R0,[R0, #+76]
   \   00000022   0xF64F 0x71FE      MOVW     R1,#+65534
   \   00000026   0x4008             ANDS     R0,R1,R0
   \   00000028   0x....             LDR.N    R1,??DataTable7_2
   \   0000002A   0xF8A1 0x004C      STRH     R0,[R1, #+76]
    322                      add = (int)&Ctrl.sHeadInfo - (int)&Ctrl;                                
   \   0000002E   0x....             LDR.N    R0,??DataTable7_2
   \   00000030   0x....             LDR.N    R1,??DataTable7_2
   \   00000032   0x1A40             SUBS     R0,R0,R1
    323                      
    324                      WriteFM24CL64(add,(u8 *)&Ctrl.sHeadInfo,sizeof(Ctrl.sHeadInfo));  
   \   00000034   0x2210             MOVS     R2,#+16
   \   00000036   0x....             LDR.N    R1,??DataTable7_2
   \   00000038   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000003A   0x.... 0x....      BL       WriteFM24CL64
    325                  }
    326                  /***********************************************************************
    327                  * Description  : 读HEAD
    328                  * Author       : 2018/5/16 星期三, by redmorningcn
    329                  */
    330                  if(Ctrl.sRunPara.FramFlg.RdHead == 1)                               
   \                     ??App_FramPara_1: (+1)
   \   0000003E   0x....             LDR.N    R0,??DataTable7_2
   \   00000040   0xF8B0 0x004C      LDRH     R0,[R0, #+76]
   \   00000044   0xF3C0 0x1000      UBFX     R0,R0,#+4,#+1
   \   00000048   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000004A   0x2800             CMP      R0,#+0
   \   0000004C   0xD010             BEQ.N    ??App_FramPara_2
    331                  {
    332                      Ctrl.sRunPara.FramFlg.RdHead = 0;
   \   0000004E   0x....             LDR.N    R0,??DataTable7_2
   \   00000050   0xF8B0 0x004C      LDRH     R0,[R0, #+76]
   \   00000054   0xF64F 0x71EF      MOVW     R1,#+65519
   \   00000058   0x4008             ANDS     R0,R1,R0
   \   0000005A   0x....             LDR.N    R1,??DataTable7_2
   \   0000005C   0xF8A1 0x004C      STRH     R0,[R1, #+76]
    333                      add = (int)&Ctrl.sHeadInfo - (int)&Ctrl;                                
   \   00000060   0x....             LDR.N    R0,??DataTable7_2
   \   00000062   0x....             LDR.N    R1,??DataTable7_2
   \   00000064   0x1A40             SUBS     R0,R0,R1
    334                      
    335                      ReadFM24CL64(add,(u8 *)&Ctrl.sHeadInfo,sizeof(Ctrl.sHeadInfo));  
   \   00000066   0x2210             MOVS     R2,#+16
   \   00000068   0x....             LDR.N    R1,??DataTable7_2
   \   0000006A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000006C   0x.... 0x....      BL       ReadFM24CL64
    336                  }
    337                  
    338                  /***********************************************************************
    339                  * Description  : 存NumMgr
    340                  * Author       : 2018/5/16 星期三, by redmorningcn
    341                  */
    342                  if(Ctrl.sRunPara.FramFlg.WrNumMgr == 1)
   \                     ??App_FramPara_2: (+1)
   \   00000070   0x....             LDR.N    R0,??DataTable7_2
   \   00000072   0xF8B0 0x004C      LDRH     R0,[R0, #+76]
   \   00000076   0xF3C0 0x0040      UBFX     R0,R0,#+1,#+1
   \   0000007A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000007C   0x2800             CMP      R0,#+0
   \   0000007E   0xD010             BEQ.N    ??App_FramPara_3
    343                  {
    344                      Ctrl.sRunPara.FramFlg.WrNumMgr = 0;
   \   00000080   0x....             LDR.N    R0,??DataTable7_2
   \   00000082   0xF8B0 0x004C      LDRH     R0,[R0, #+76]
   \   00000086   0xF64F 0x71FD      MOVW     R1,#+65533
   \   0000008A   0x4008             ANDS     R0,R1,R0
   \   0000008C   0x....             LDR.N    R1,??DataTable7_2
   \   0000008E   0xF8A1 0x004C      STRH     R0,[R1, #+76]
    345                      add = (int)&Ctrl.sRecNumMgr - (int)&Ctrl;
   \   00000092   0x....             LDR.N    R0,??DataTable7_4
   \   00000094   0x....             LDR.N    R1,??DataTable7_2
   \   00000096   0x1A40             SUBS     R0,R0,R1
    346                      
    347                      WriteFM24CL64(add,(u8 *)&Ctrl.sRecNumMgr,sizeof(Ctrl.sRecNumMgr));
   \   00000098   0x2210             MOVS     R2,#+16
   \   0000009A   0x....             LDR.N    R1,??DataTable7_4
   \   0000009C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000009E   0x.... 0x....      BL       WriteFM24CL64
    348                  }
    349                  /***********************************************************************
    350                  * Description  : 读NumMgr
    351                  * Author       : 2018/5/16 星期三, by redmorningcn
    352                  */
    353                  if(Ctrl.sRunPara.FramFlg.RdNumMgr == 1)
   \                     ??App_FramPara_3: (+1)
   \   000000A2   0x....             LDR.N    R0,??DataTable7_2
   \   000000A4   0xF8B0 0x004C      LDRH     R0,[R0, #+76]
   \   000000A8   0xF3C0 0x1040      UBFX     R0,R0,#+5,#+1
   \   000000AC   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000AE   0x2800             CMP      R0,#+0
   \   000000B0   0xD010             BEQ.N    ??App_FramPara_4
    354                  {
    355                      Ctrl.sRunPara.FramFlg.RdNumMgr = 0;
   \   000000B2   0x....             LDR.N    R0,??DataTable7_2
   \   000000B4   0xF8B0 0x004C      LDRH     R0,[R0, #+76]
   \   000000B8   0xF64F 0x71DF      MOVW     R1,#+65503
   \   000000BC   0x4008             ANDS     R0,R1,R0
   \   000000BE   0x....             LDR.N    R1,??DataTable7_2
   \   000000C0   0xF8A1 0x004C      STRH     R0,[R1, #+76]
    356                      add = (int)&Ctrl.sRecNumMgr - (int)&Ctrl;
   \   000000C4   0x....             LDR.N    R0,??DataTable7_4
   \   000000C6   0x....             LDR.N    R1,??DataTable7_2
   \   000000C8   0x1A40             SUBS     R0,R0,R1
    357                      
    358                      ReadFM24CL64(add,(u8 *)&Ctrl.sRecNumMgr,sizeof(Ctrl.sRecNumMgr));
   \   000000CA   0x2210             MOVS     R2,#+16
   \   000000CC   0x....             LDR.N    R1,??DataTable7_4
   \   000000CE   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000D0   0x.... 0x....      BL       ReadFM24CL64
    359                  }
    360                  
    361                  /***********************************************************************
    362                  * Description  : 存产品信息
    363                  * Author       : 2018/5/16 星期三, by redmorningcn
    364                  */
    365                  if(Ctrl.sRunPara.FramFlg.WrProduct == 1)
   \                     ??App_FramPara_4: (+1)
   \   000000D4   0x....             LDR.N    R0,??DataTable7_2
   \   000000D6   0xF8B0 0x004C      LDRH     R0,[R0, #+76]
   \   000000DA   0xF3C0 0x0080      UBFX     R0,R0,#+2,#+1
   \   000000DE   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000E0   0x2800             CMP      R0,#+0
   \   000000E2   0xD010             BEQ.N    ??App_FramPara_5
    366                  {
    367                      Ctrl.sRunPara.FramFlg.WrProduct = 0;
   \   000000E4   0x....             LDR.N    R0,??DataTable7_2
   \   000000E6   0xF8B0 0x004C      LDRH     R0,[R0, #+76]
   \   000000EA   0xF64F 0x71FB      MOVW     R1,#+65531
   \   000000EE   0x4008             ANDS     R0,R1,R0
   \   000000F0   0x....             LDR.N    R1,??DataTable7_2
   \   000000F2   0xF8A1 0x004C      STRH     R0,[R1, #+76]
    368                      add = (int)&Ctrl.sProductInfo - (int)&Ctrl;
   \   000000F6   0x....             LDR.N    R0,??DataTable7_5
   \   000000F8   0x....             LDR.N    R1,??DataTable7_2
   \   000000FA   0x1A40             SUBS     R0,R0,R1
    369                      
    370                      WriteFM24CL64(add,(u8 *)&Ctrl.sProductInfo,sizeof(Ctrl.sProductInfo));
   \   000000FC   0x2224             MOVS     R2,#+36
   \   000000FE   0x....             LDR.N    R1,??DataTable7_5
   \   00000100   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000102   0x.... 0x....      BL       WriteFM24CL64
    371                  }
    372                  
    373                  /***********************************************************************
    374                  * Description  : 读产品信息
    375                  * Author       : 2018/5/16 星期三, by redmorningcn
    376                  */
    377                  if(Ctrl.sRunPara.FramFlg.RdProduct == 1)
   \                     ??App_FramPara_5: (+1)
   \   00000106   0x....             LDR.N    R0,??DataTable7_2
   \   00000108   0xF8B0 0x004C      LDRH     R0,[R0, #+76]
   \   0000010C   0xF3C0 0x1080      UBFX     R0,R0,#+6,#+1
   \   00000110   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000112   0x2800             CMP      R0,#+0
   \   00000114   0xD010             BEQ.N    ??App_FramPara_6
    378                  {
    379                      Ctrl.sRunPara.FramFlg.RdProduct = 0;
   \   00000116   0x....             LDR.N    R0,??DataTable7_2
   \   00000118   0xF8B0 0x004C      LDRH     R0,[R0, #+76]
   \   0000011C   0xF64F 0x71BF      MOVW     R1,#+65471
   \   00000120   0x4008             ANDS     R0,R1,R0
   \   00000122   0x....             LDR.N    R1,??DataTable7_2
   \   00000124   0xF8A1 0x004C      STRH     R0,[R1, #+76]
    380                      add = (int)&Ctrl.sProductInfo - (int)&Ctrl;
   \   00000128   0x....             LDR.N    R0,??DataTable7_5
   \   0000012A   0x....             LDR.N    R1,??DataTable7_2
   \   0000012C   0x1A40             SUBS     R0,R0,R1
    381                      
    382                      ReadFM24CL64(add,(u8 *)&Ctrl.sProductInfo,sizeof(Ctrl.sProductInfo));
   \   0000012E   0x2224             MOVS     R2,#+36
   \   00000130   0x....             LDR.N    R1,??DataTable7_5
   \   00000132   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000134   0x.... 0x....      BL       ReadFM24CL64
    383                  }        
    384                  
    385                  /***********************************************************************
    386                  * Description  : 存运行信息
    387                  * Author       : 2018/5/16 星期三, by redmorningcn
    388                  */
    389                  if(Ctrl.sRunPara.FramFlg.WrRunPara == 1)
   \                     ??App_FramPara_6: (+1)
   \   00000138   0x....             LDR.N    R0,??DataTable7_2
   \   0000013A   0xF8B0 0x004C      LDRH     R0,[R0, #+76]
   \   0000013E   0xF3C0 0x00C0      UBFX     R0,R0,#+3,#+1
   \   00000142   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000144   0x2800             CMP      R0,#+0
   \   00000146   0xD010             BEQ.N    ??App_FramPara_7
    390                  {
    391                      Ctrl.sRunPara.FramFlg.WrRunPara = 0;
   \   00000148   0x....             LDR.N    R0,??DataTable7_2
   \   0000014A   0xF8B0 0x004C      LDRH     R0,[R0, #+76]
   \   0000014E   0xF64F 0x71F7      MOVW     R1,#+65527
   \   00000152   0x4008             ANDS     R0,R1,R0
   \   00000154   0x....             LDR.N    R1,??DataTable7_2
   \   00000156   0xF8A1 0x004C      STRH     R0,[R1, #+76]
    392                      add = (int)&Ctrl.sProductInfo - (int)&Ctrl;
   \   0000015A   0x....             LDR.N    R0,??DataTable7_5
   \   0000015C   0x....             LDR.N    R1,??DataTable7_2
   \   0000015E   0x1A40             SUBS     R0,R0,R1
    393                      
    394                      WriteFM24CL64(add,(u8 *)&Ctrl.sRunPara,sizeof(Ctrl.sRunPara));
   \   00000160   0x2224             MOVS     R2,#+36
   \   00000162   0x....             LDR.N    R1,??DataTable7_6
   \   00000164   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000166   0x.... 0x....      BL       WriteFM24CL64
    395                  } 
    396                  
    397                  /***********************************************************************
    398                  * Description  : 读运行信息
    399                  * Author       : 2018/5/16 星期三, by redmorningcn
    400                  */
    401                  if(Ctrl.sRunPara.FramFlg.RdRunPara == 1)
   \                     ??App_FramPara_7: (+1)
   \   0000016A   0x....             LDR.N    R0,??DataTable7_2
   \   0000016C   0xF8B0 0x004C      LDRH     R0,[R0, #+76]
   \   00000170   0xF3C0 0x10C0      UBFX     R0,R0,#+7,#+1
   \   00000174   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000176   0x2800             CMP      R0,#+0
   \   00000178   0xD010             BEQ.N    ??App_FramPara_0
    402                  {
    403                      Ctrl.sRunPara.FramFlg.RdRunPara = 0;
   \   0000017A   0x....             LDR.N    R0,??DataTable7_2
   \   0000017C   0xF8B0 0x004C      LDRH     R0,[R0, #+76]
   \   00000180   0xF64F 0x717F      MOVW     R1,#+65407
   \   00000184   0x4008             ANDS     R0,R1,R0
   \   00000186   0x....             LDR.N    R1,??DataTable7_2
   \   00000188   0xF8A1 0x004C      STRH     R0,[R1, #+76]
    404                      add = (int)&Ctrl.sProductInfo - (int)&Ctrl;
   \   0000018C   0x....             LDR.N    R0,??DataTable7_5
   \   0000018E   0x....             LDR.N    R1,??DataTable7_2
   \   00000190   0x1A40             SUBS     R0,R0,R1
    405                      
    406                      ReadFM24CL64(add,(u8 *)&Ctrl.sRunPara,sizeof(Ctrl.sRunPara));
   \   00000192   0x2224             MOVS     R2,#+36
   \   00000194   0x....             LDR.N    R1,??DataTable7_6
   \   00000196   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000198   0x.... 0x....      BL       ReadFM24CL64
    407                  }    
    408              }
    409                  
    410              Ctrl.sRunPara.FramFlg.Flags = 0;               //清标识
   \                     ??App_FramPara_0: (+1)
   \   0000019C   0x2000             MOVS     R0,#+0
   \   0000019E   0x....             LDR.N    R1,??DataTable7_2
   \   000001A0   0xF8A1 0x004C      STRH     R0,[R1, #+76]
    411          }
   \   000001A4   0xBD01             POP      {R0,PC}          ;; return
    412          
    413          /*******************************************************************************
    414          * 名    称： 		AppTaskStore
    415          * 功    能： 		控制任务
    416          * 入口参数： 	p_arg - 由任务创建函数传入
    417          * 出口参数： 	无
    418          * 作    者： 	redmorningcn.
    419          * 创建日期： 	2017-05-15
    420          * 修    改：
    421          * 修改日期：
    422          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    423          osalEvt  TaskStoreEvtProcess(osalTid task_id, osalEvt task_event)
    424          {
   \                     TaskStoreEvtProcess: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x000C             MOVS     R4,R1
    425              /***********************************************
    426              * 描述： 本任务看门狗标志置位
    427              */
    428              //OSSetWdtFlag(( OS_FLAGS     ) WDT_FLAG_STORE);
    429              static  u8     cnts;
    430              u8              base = 3;
   \   00000004   0x2503             MOVS     R5,#+3
    431              
    432              /*******************************************************************************
    433              * Description  : 保存数据记录（按Ctrl.sRunPara.StoreTime时间间隔进行数据保存）
    434              * Author       : 2018/5/15 星期二, by redmorningcn
    435              *******************************************************************************/
    436              if( task_event & OS_EVT_STORE_TICKS ) {
   \   00000006   0x07E0             LSLS     R0,R4,#+31
   \   00000008   0xD524             BPL.N    ??TaskStoreEvtProcess_0
    437                  osal_start_timerRl( OS_TASK_ID_STORE,
    438                                      OS_EVT_STORE_TICKS,
    439                                      OS_TICKS_PER_SEC * Ctrl.sRunPara.StoreTime/base);       //防止长时间未喂狗
   \   0000000A   0x....             LDR.N    R0,??DataTable7_2
   \   0000000C   0xF8B0 0x0044      LDRH     R0,[R0, #+68]
   \   00000010   0xF44F 0x717A      MOV      R1,#+1000
   \   00000014   0x4348             MULS     R0,R1,R0
   \   00000016   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000018   0xFBB0 0xF2F5      UDIV     R2,R0,R5
   \   0000001C   0x2101             MOVS     R1,#+1
   \   0000001E   0x2004             MOVS     R0,#+4
   \   00000020   0x.... 0x....      BL       osal_start_timerRl
    440                  /***************************************************
    441                  * 描述： 置位保存数据标志位，启动数据保存FLASH
    442                  */
    443                  cnts++;
   \   00000024   0x....             LDR.N    R0,??DataTable7_7
   \   00000026   0x7800             LDRB     R0,[R0, #+0]
   \   00000028   0x1C40             ADDS     R0,R0,#+1
   \   0000002A   0x....             LDR.N    R1,??DataTable7_7
   \   0000002C   0x7008             STRB     R0,[R1, #+0]
    444                  if(cnts > base){
   \   0000002E   0x....             LDR.N    R0,??DataTable7_7
   \   00000030   0x7800             LDRB     R0,[R0, #+0]
   \   00000032   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000034   0x4285             CMP      R5,R0
   \   00000036   0xD204             BCS.N    ??TaskStoreEvtProcess_1
    445                      cnts = 0;
   \   00000038   0x2000             MOVS     R0,#+0
   \   0000003A   0x....             LDR.N    R1,??DataTable7_7
   \   0000003C   0x7008             STRB     R0,[R1, #+0]
    446                      App_SaveRecord();                                                       //保存数据记录
   \   0000003E   0x.... 0x....      BL       App_SaveRecord
    447                  }
    448                                                          
    449                  OS_ERR      err;
    450                  OSFlagPost( ( OS_FLAG_GRP  *)&Ctrl.Os.CommEvtFlagGrp,                       //通知DTU，可以进行数据发送
    451                             ( OS_FLAGS      )COMM_EVT_FLAG_DTU_TX,
    452                             ( OS_OPT        )OS_OPT_POST_FLAG_SET,
    453                             ( OS_ERR       *)&err);
   \                     ??TaskStoreEvtProcess_1: (+1)
   \   00000042   0x466B             MOV      R3,SP
   \   00000044   0x2200             MOVS     R2,#+0
   \   00000046   0x2110             MOVS     R1,#+16
   \   00000048   0x....             LDR.N    R0,??DataTable7_8
   \   0000004A   0x.... 0x....      BL       OSFlagPost
    454                  
    455                  return ( task_event ^ OS_EVT_STORE_TICKS );
   \   0000004E   0xF094 0x0001      EORS     R0,R4,#0x1
   \   00000052   0xE007             B.N      ??TaskStoreEvtProcess_2
    456              }
    457              
    458              /*******************************************************************************
    459              * Description  : 保存参数（按标识位保存。标识位1，保存对应参数）
    460              * Author       : 2018/5/15 星期二, by redmorningcn
    461              *******************************************************************************/
    462              if( task_event & OS_EVT_STORE_FRAM ) {
   \                     ??TaskStoreEvtProcess_0: (+1)
   \   00000054   0x07A0             LSLS     R0,R4,#+30
   \   00000056   0xD504             BPL.N    ??TaskStoreEvtProcess_3
    463                  /***************************************************
    464                  * 描述： 铁电参数存储或读取
    465                  */
    466                  App_FramPara();
   \   00000058   0x.... 0x....      BL       App_FramPara
    467                  
    468                  return ( task_event ^ OS_EVT_STORE_FRAM );
   \   0000005C   0xF094 0x0002      EORS     R0,R4,#0x2
   \   00000060   0xE000             B.N      ??TaskStoreEvtProcess_2
    469              }
    470              
    471          
    472              return 0;
   \                     ??TaskStoreEvtProcess_3: (+1)
   \   00000062   0x2000             MOVS     R0,#+0
   \                     ??TaskStoreEvtProcess_2: (+1)
   \   00000064   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    473          }

   \                                 In section .bss, align 1
   \                     ??cnts:
   \   00000000                      DS8 1
    474          
    475          /*******************************************************************************
    476          * 名    称： TaskInitStore
    477          * 功    能： 任务初始化
    478          * 入口参数： 无
    479          * 出口参数： 无
    480          * 作    者： redmornigcn
    481          * 创建日期： 2017-05-15
    482          * 修    改：
    483          * 修改日期：
    484          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    485          void TaskInitStore(void)
    486          {    
   \                     TaskInitStore: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    487              /***********************************************
    488              * 描述： 初始化Flash底层相关函数
    489              */
    490              BSP_StoreInit();
   \   00000002   0x.... 0x....      BL       BSP_StoreInit
    491              
    492          //    /***********************************************
    493          //    * 描述： 在看门狗标志组注册本任务的看门狗标志
    494          //    */
    495          //    OSRegWdtFlag(( OS_FLAGS     )WDT_FLAG_STORE );
    496          //    
    497              /***********************************************
    498              * 描述： 2017/12/3,无名沈：设置存储周期为60秒
    499              */
    500              osal_start_timerRl( OS_TASK_ID_STORE,
    501                                  OS_EVT_STORE_TICKS,
    502                                  //OS_TICKS_PER_SEC * 60);
    503                                  OS_TICKS_PER_SEC * 6);
   \   00000006   0xF241 0x7270      MOVW     R2,#+6000
   \   0000000A   0x2101             MOVS     R1,#+1
   \   0000000C   0x2004             MOVS     R0,#+4
   \   0000000E   0x.... 0x....      BL       osal_start_timerRl
    504          }
   \   00000012   0xBD01             POP      {R0,PC}          ;; return
    505          
    506          
    507          /**************************************************************
    508          * Description  : 根据指定记录号，读取数据记录
    509          如果数据记录读取错误，重新赋值机车信息，数据记录信息，故障状态信息及校验。
    510          * Author       : 2018/5/23 星期三, by redmorningcn
    511          */

   \                                 In section .text, align 2, keep-with-next
    512          void    app_ReadOneRecord(stcFlshRec *pRec,u32 num)
    513          {
   \                     app_ReadOneRecord: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    514              u16         crc1;
    515              u16         crc2;
    516              u8          retrys = 2;
   \   00000006   0x2602             MOVS     R6,#+2
    517              
    518              do {
    519                  ReadFlshRec(pRec, num);     //读取指定记录号的数据
   \                     ??app_ReadOneRecord_0: (+1)
   \   00000008   0x0029             MOVS     R1,R5
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0x.... 0x....      BL       ReadFlshRec
    520                  
    521                  crc1 = GetCrc16Chk((u8 *)pRec,sizeof(stcFlshRec)-2); 
   \   00000010   0x217E             MOVS     R1,#+126
   \   00000012   0x0020             MOVS     R0,R4
   \   00000014   0x.... 0x....      BL       GetCrc16Chk
    522                  crc2 = pRec->CrcCheck;
   \   00000018   0xF8B4 0x107E      LDRH     R1,[R4, #+126]
    523                  
    524                  if(crc1 == crc2) {          //如果校验通过，数据读取完成，退出
   \   0000001C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000001E   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000020   0x4288             CMP      R0,R1
   \   00000022   0xD011             BEQ.N    ??app_ReadOneRecord_1
    525                      return;
    526                  }
    527              } while ( --retrys );
   \                     ??app_ReadOneRecord_2: (+1)
   \   00000024   0x1E76             SUBS     R6,R6,#+1
   \   00000026   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000028   0x2E00             CMP      R6,#+0
   \   0000002A   0xD1ED             BNE.N    ??app_ReadOneRecord_0
    528              
    529              /**************************************************
    530              * 描述： 重新赋值机车信息，数据记录信息，故障状态信息及校验
    531              */ 
    532              
    533              pRec->RecordId    = num;         //记录号
   \   0000002C   0xF8C4 0x5006      STR      R5,[R4, #+6]
    534              pRec->LocoType    = Ctrl.sProductInfo.LocoId.Type  ;//机车型号       2  
   \   00000030   0x....             LDR.N    R0,??DataTable7_2
   \   00000032   0x8D00             LDRH     R0,[R0, #+40]
   \   00000034   0x8060             STRH     R0,[R4, #+2]
    535              pRec->LocoNbr     = Ctrl.sProductInfo.LocoId.Nbr   ;//机 车 号       2 
   \   00000036   0x....             LDR.N    R0,??DataTable7_2
   \   00000038   0x8D40             LDRH     R0,[R0, #+42]
   \   0000003A   0x80A0             STRH     R0,[R4, #+4]
    536              //pRec->Err.= 1;        //flash故障
    537              crc1              = GetCrc16Chk((u8 *)pRec,sizeof(stcFlshRec)-2);
   \   0000003C   0x217E             MOVS     R1,#+126
   \   0000003E   0x0020             MOVS     R0,R4
   \   00000040   0x.... 0x....      BL       GetCrc16Chk
    538              pRec->CrcCheck    = crc1;
   \   00000044   0xF8A4 0x007E      STRH     R0,[R4, #+126]
    539              
    540          }
   \                     ??app_ReadOneRecord_1: (+1)
   \   00000048   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   0x........         DC32     Bsp_FlashSem

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   0x........         DC32     Ctrl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \   00000000   0x........         DC32     Ctrl+0x68

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_4:
   \   00000000   0x........         DC32     Ctrl+0x10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_5:
   \   00000000   0x........         DC32     Ctrl+0x20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_6:
   \   00000000   0x........         DC32     Ctrl+0x44

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_7:
   \   00000000   0x........         DC32     ??cnts

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_8:
   \   00000000   0x........         DC32     Ctrl+0x11E0

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x42 0x73          DC8 "Bsp_FlashSem"
   \              0x70 0x5F    
   \              0x46 0x6C    
   \              0x61 0x73    
   \              0x68 0x53    
   \              0x65 0x6D    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         
    541          
    542          /*******************************************************************************
    543          * 				                    end of file                                *
    544          *******************************************************************************/
    545          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   App_FramPara
         8   -> ReadFM24CL64
         8   -> WriteFM24CL64
     144   App_SaveRecord
       144   -> FmtRecord
       144   -> GetCrc16Chk
       144   -> GetRecFlashAddr
       144   -> ReadFlshRec
       144   -> WriteFlshRec
       144   -> __aeabi_memcpy
       144   -> osal_set_event
       8   BSP_FlashOsInit
         8   -> BSP_OS_SemCreate
       8   BSP_FlashSendEvent
         8   -> BSP_OS_SemPost
       8   BSP_FlashWaitEvent
         8   -> BSP_OS_SemWait
       8   BSP_StoreInit
         8   -> SPI_FLASH_Init
      48   FmtRecord
        48   -> TIME_GetCalendarTime
       0   GetRecFlashAddr
      16   ReadFlshRec
        16   -> BSP_FlashSendEvent
        16   -> BSP_FlashWaitEvent
        16   -> GetRecFlashAddr
        16   -> ReadFlsh
       8   TaskInitStore
         8   -> BSP_StoreInit
         8   -> osal_start_timerRl
      16   TaskStoreEvtProcess
        16   -> App_FramPara
        16   -> App_SaveRecord
        16   -> OSFlagPost
        16   -> osal_start_timerRl
      16   WriteFlshRec
        16   -> BSP_FlashSendEvent
        16   -> BSP_FlashWaitEvent
        16   -> WriteFlsh
      16   app_ReadOneRecord
        16   -> GetCrc16Chk
        16   -> ReadFlshRec


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_2
       4  ??DataTable7_3
       4  ??DataTable7_4
       4  ??DataTable7_5
       4  ??DataTable7_6
       4  ??DataTable7_7
       4  ??DataTable7_8
      16  ?_0
     422  App_FramPara
     258  App_SaveRecord
      20  BSP_FlashOsInit
      12  BSP_FlashSendEvent
      14  BSP_FlashWaitEvent
       8  BSP_StoreInit
      40  Bsp_FlashSem
     228  FmtRecord
      20  GetRecFlashAddr
      30  ReadFlshRec
      20  TaskInitStore
     102  TaskStoreEvtProcess
      32  WriteFlshRec
      74  app_ReadOneRecord
       1  cnts

 
    41 bytes in section .bss
    16 bytes in section .rodata
 1 276 bytes in section .text
 
 1 276 bytes of CODE  memory
    16 bytes of CONST memory
    41 bytes of DATA  memory

Errors: none
Warnings: none
